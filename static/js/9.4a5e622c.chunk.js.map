{"version":3,"sources":["views/TableView/index.less","webpack:///./src/views/TableView/BaseTableDemo/index.less?2c59","webpack:///./src/views/TableView/ScrollMoreTableDemo/index.less?855e","webpack:///./src/views/TableView/DragTableDemo/index.less?ed89","webpack:///./src/views/TableView/FixTableDemo/index.less?4727","webpack:///./src/views/TableView/ScaleTableDemo/index.less?702b","component/Table/useComputedScroll.ts","component/Table/tableRow.tsx","component/Table/index.tsx","component/Table/useDrag.ts","component/Table/util.ts","views/TableView/BaseTableDemo/index.tsx","views/TableView/ScrollMoreTableDemo/index.tsx","views/TableView/DragTableDemo/index.tsx","views/TableView/FixTableDemo/index.tsx","views/TableView/ScaleTableDemo/index.tsx","views/TableView/index.tsx","webpack:///./src/views/TableView/BaseTableDemo/index.tsx?9ccc","views/TableView/BaseTableDemo/index.less","webpack:///./src/views/TableView/ScrollMoreTableDemo/index.tsx?82d3","views/TableView/ScrollMoreTableDemo/index.less","webpack:///./src/views/TableView/DragTableDemo/index.tsx?eda0","views/TableView/DragTableDemo/index.less","webpack:///./src/views/TableView/ScaleTableDemo/index.tsx?4ba6","views/TableView/ScaleTableDemo/index.less","webpack:///./src/views/TableView/FixTableDemo/index.tsx?870c","views/TableView/FixTableDemo/index.less","component/Text/index.tsx","component/FlexContainer/index.tsx","component/FlexItem/index.tsx","component/Button/index.tsx","component/Loading/index.tsx","component/Demo/index.tsx","component/Text/index.less","component/FlexContainer/index.less","component/FlexItem/index.less","component/Code/index.tsx","component/Code/index.less","component/Demo/index.less","component/Button/index.less","component/PropsTable/index.tsx","component/PropsTable/index.less","component/Table/index.less"],"names":["module","exports","defaultState","scrollTop","scrollHeight","scrollLeft","scrollWidth","clientHeight","clientWidth","DragSortItem","SortableHandle","TableRow","props","useState","rowIndex","columns","columnIndex","cellStyle","key","data","cells","hoverIndex","onMouseEnter","list","styles","style","className","classNames","hover","map","item","index","content","isRowDragSortHandle","render","row","width","SortableItem","SortableElement","SortableGrid","SortableContainer","ref","gridRef","Table","loadMoreLoading","loadMoreOver","onLoadMore","onRowDragSort","onCellDrag","containerRef","useRef","gridRefs","draggingRef","state","setState","useCallback","scrollProps","old","useComputedScroll","onFixedScroll","setHoverIndex","addGridToRef","grid","current","Set","add","measureCell","useMemo","throttle","forEach","g","recomputeGridSize","leading","cb","dragHandle","startLine","line","thLeft","thWidth","thIndex","thMin","thMax","lineLeft","containerLeft","clear","remove","undefined","classList","noSelect","onMouseDown","e","target","contains","border","rect","parentElement","getBoundingClientRect","containerRect","left","parseInt","getAttribute","document","createElement","clientX","appendChild","onMouseOver","dragLine","onMouseUp","Math","floor","abs","onMouseLeave","useEffect","addEventListener","removeEventListener","useDrag","newWidth","renderCellRange","cellRangeProps","newRangeProps","rowStopIndex","length","isLoading","isOver","nodes","defaultCellRangeRenderer","parent","height","rowSizeAndPositionManager","verticalOffsetAdjustment","totalHeight","getTotalSize","position","getSizeAndPositionOfCell","push","loadMore","top","offset","size","Loading","renderHeaderCell","headerColumns","headerCell","thisColum","thisIndex","dragProps","title","dragToChangeCellWidth","dragMaxWidth","dragMinWidth","renderCell","bodyColumns","cellProps","renderMainTable","sizeProps","columnsWidth","all","gridProps","columnCount","columnWidth","rowCount","rowHeight","cellRenderer","curry","contentGrid","onScroll","scrollParams","params","handleScroll","cellRangeRenderer","lockAxis","helperClass","helpClass","useDragHandle","onSortStart","onSortEnd","sortProps","oldIndex","newIndex","header","renderLeftTable","leftFixedColumns","headerTable","renderRightTable","rightFixedColumns","right","main","console","log","rightHeaderTable","rightLine","autoSize","onResize","takeWhile","c","fixed","takeRightWhile","allWidth","containerWidth","results","thisWidth","getColumnWidth","getFixedCells","takeFunc","fixedAllWidth","i","calColumnWidth","BaseTableDemo","array","setData","start","Mock","mock","age","name","getData","r","num","ket","table","ScrollMoreTableDemo","loading","setLoading","setTimeout","lastItem","last","id","concat","DragTableDemo","arrayMoveImmutable","FixTableDemo","ScaleTableDemo","setColumnWidth","newWidths","TableView","Text","level","desc","Demo","demo","codes","type","code","PropsTable","defValue","ellipsis","children","pre","classnames","h1","h2","h3","text","tips","FlexContainer","flex","onClick","vCenter","hCenter","center","vFull","hFull","hWarp","forwardRef","FlexItem","grow","basis","scroll","calculatedStyle","result","flexBasis","Button","danger","primary","prefix","suffix","block","disabled","button","contained","solid","dashed","link","s","m","l","xl","spin","xmlns","background","viewBox","preserveAspectRatio","display","transform","color","attributeName","begin","values","keyTimes","dur","repeatCount","fillOpacity","showIndex","setShowIndex","demoAction","action","Code","tableHead","rowContainer","rowCenter","Array","isArray","sub","cicleItem"],"mappings":"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","file":"static/js/9.4a5e622c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"desc\":\"index_desc_67b21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"index_table_5bbf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"index_table_1ceea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"index_table_2f6d2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"index_table_fff0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"index_table_305f1\"};","import { useCallback, useState } from \"react\"\nimport { ScrollParams } from \"react-virtualized\";\n\ninterface State {\n    scrollTop: number;\n    scrollLeft: number;\n    scrollWidth: number;\n    scrollHeight: number;\n    clientWidth: number;\n    clientHeight: number;\n}\n\nconst defaultState:State = {\n    scrollTop: 0,\n    scrollHeight: 0,\n    scrollLeft: 0,\n    scrollWidth: 0,\n    clientHeight: 0,\n    clientWidth: 0,\n}\n\nexport default () =>  {\n    const [state, setState] = useState(defaultState);\n    const onMainScroll = useCallback((scrollProps: ScrollParams) => {\n        const {\n            scrollHeight, scrollTop, scrollLeft, scrollWidth, clientHeight, clientWidth,\n        } = scrollProps;\n        setState({\n            scrollTop,\n            scrollHeight,\n            scrollLeft,\n            scrollWidth,\n            clientHeight,\n            clientWidth,\n        });\n    } ,[]);\n    const onFixedScroll = useCallback((scrollProps:ScrollParams) => {\n        const {\n            scrollTop,\n        } = scrollProps;\n        setState((old) => ({ ...old, scrollTop }));\n    }, [setState]);\n\n    return [state, onMainScroll, onFixedScroll]\n}","\n\nimport styles from './index.less'\nimport { SortableHandle } from 'react-sortable-hoc'\nimport sortImg from '../../static/dragIcon.png'\nimport classNames from 'classnames';\nimport { useState } from 'react';\n\nconst DragSortItem = SortableHandle(() => <div>拖着列</div>);\nconst TableRow = (props: any) => {\n    const [active,setActive] = useState(-1)\n    const {\n        rowIndex,\n        columnIndex,\n        columns,\n        cellStyle,\n        key,\n        data,\n        cells,\n        hoverIndex,\n        onMouseEnter,\n    } = props;\n  \n    const list = data[rowIndex];\n    if (!list) {\n        <div style={cellStyle} key={key} className={styles.cellStyle}></div>\n    }\n    return (\n        <div \n        onMouseEnter={onMouseEnter}\n        // onMouseOver={onMouseEnter}\n        style={{ ...cellStyle }} key={key} className={classNames(styles.cellStyle,\n            hoverIndex === rowIndex? styles.hover: ''\n        ) } >\n            {\n                columns.map((item: any, index: number) => {\n                    let content = <></>;\n                    if (item.isRowDragSortHandle) {\n                        content = <DragSortItem />\n                    } else if (item.render) {\n                        content = item.render(list, rowIndex)\n                    } else if (item.key) {\n                        content = <>{list[item.key]}</>\n                    }\n\n                    return <div\n                        className={styles.row}\n                        style={\n                            {\n                                width: cells[index]\n                            }\n                        }\n                        key={`${key}_cell_${item.key}_${rowIndex}`}\n                    // key={key + rowIndex + index}\n                    >{content}</div>\n                })\n            }\n        </div>\n    )\n}\n\nexport default TableRow;","\nimport styles from './index.less'\nimport { Grid, AutoSizer, GridCellProps, Size, GridCellRangeProps, defaultCellRangeRenderer, ScrollParams } from 'react-virtualized'\nimport { curry, min, takeRightWhile, takeWhile, throttle } from 'lodash'\nimport { calColumnWidth } from './util';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport useComputedScroll from './useComputedScroll';\nimport Loading from '../Loading'\nimport classNames from 'classnames';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc'\nimport TableRow from './tableRow';\nimport useDrag from './useDrag';\n\nconst SortableItem = SortableElement(TableRow)\nconst SortableGrid = SortableContainer((props: any) => <Grid {...props} ref={props.gridRef} />)\n\nconst renderLoadMore = (isLoading: boolean, isOver: boolean) => {\n    if (isLoading) {\n        return (\n            <Loading className={styles.loadMoreLoading} />\n        )\n    }\n    if (isOver) {\n        return <>已经到底了</>\n    }\n    return <> 滚动显示更多</>\n}\n\n// 滚动条被挡住 ，让滚动条上来，如果隐藏掉；\n// 但滚动条出现 滚动到底，线条不对上\n\n\n// 如何解析对应的title\n// 宽度作为 【】 title作为【】columns\n\nconst Table = (props: {\n    loadMoreLoading?: any;\n    loadMoreOver?: any;\n    onLoadMore?: any;\n    className?: string;\n    columns: any;\n    data: any;\n    onRowDragSort?: (oldIndex: any, newIndex: any) => void;\n    onCellDrag?: any;\n}) => {\n    const {\n        loadMoreLoading,\n        loadMoreOver,\n        onLoadMore,\n        className,\n        columns,\n        data,\n        onRowDragSort,\n        onCellDrag,\n    } = props\n    const containerRef = useRef<HTMLDivElement>(null);\n    const gridRefs = useRef<Set<Grid>>();\n    const draggingRef = useRef(false); // 用个常量控制 hover 不显示\n\n    // 获取感动距离\n    const [state, setState, onFixedScroll] = useComputedScroll() as any;\n\n    const [hoverIndex, setHoverIndex] = useState(-1);\n\n    // 保存表格的 dom方便调用 recomputedGridSize 重新渲染 大小\n    const addGridToRef = useCallback((grid) => {\n        if (grid) {\n            if (!gridRefs.current) {\n                gridRefs.current = new Set();\n            }\n            gridRefs.current.add(grid);\n        }\n    }, [])\n    // 重新计算grid的宽度 时间需要为0，不然会出现滚动条\n    const measureCell = useMemo(() => throttle(() => {\n        if (gridRefs.current) {\n            gridRefs.current.forEach((g) => {\n                g.recomputeGridSize();\n            })\n        }\n    }, 0, { leading: true }), []);\n\n\n    useDrag(containerRef, (index, newWidth) => {\n        onCellDrag(index, newWidth)\n        measureCell(); // 表格重新排布\n    })\n\n    // 滚动加载更多\n    const handleScroll = (params: ScrollParams) => {\n        const { scrollTop, clientHeight, scrollHeight } = params;\n        if (onLoadMore && !loadMoreLoading && !loadMoreOver && scrollTop + clientHeight >= scrollHeight) {\n            onLoadMore()\n        }\n\n    }\n\n    // 单元格的渲染，必须有 计算范围\n    //  rowSizeAndPositionManager \n    // 垂直方向 verticalOffsetAdjustment\n    // 预留一个单元个，显示加载更多\n    const renderCellRange = (cellRangeProps: GridCellRangeProps) => {\n        const newRangeProps = { ...cellRangeProps };\n        if (onLoadMore) {\n            const { rowStopIndex } = newRangeProps;\n            // 预留一个位置显示 加载更多\n            if (rowStopIndex == data.length) {\n                newRangeProps.rowStopIndex -= 1;\n            }\n        }\n\n        const nodes = defaultCellRangeRenderer(newRangeProps);\n        if (onLoadMore) {\n            const {\n                parent: {\n                    props: {\n                        width,\n                        height,\n                    }\n                },\n                scrollLeft,\n                rowSizeAndPositionManager,\n                verticalOffsetAdjustment,\n            } = newRangeProps;\n            const totalHeight = rowSizeAndPositionManager.getTotalSize()\n            const position = rowSizeAndPositionManager.getSizeAndPositionOfCell(data.length);\n            if (totalHeight > height) {\n                nodes.push(\n                    <div\n                        className={styles.loadMore}\n                        style={{\n                            position: 'absolute',\n                            left: scrollLeft,\n                            top: position.offset + verticalOffsetAdjustment,\n                            height: position.size,\n                            width: width,\n                        }}\n                        key={`${data.length}-all`}\n                    // onMouseEnter={onLeaveHover}\n                    >\n                        {renderLoadMore(loadMoreLoading, loadMoreOver)}\n                    </div>,\n                )\n            }\n        }\n\n        return nodes\n    }\n\n    // 拿到columnIndex对应的数据\n    const renderHeaderCell = (\n        headerColumns: any[],\n        cells: any[],\n        cellRangeProps: GridCellProps,\n    ) => {\n        const { columnIndex, key, style: cellStyle } = cellRangeProps;\n        const currentColumn = headerColumns[columnIndex];\n\n        return (\n            <div style={cellStyle}\n                key={key}\n                className={styles.headerCell}\n            >\n                {\n                    headerColumns.map((thisColum, thisIndex) => {\n                        const { title, dragToChangeCellWidth, dragMaxWidth, dragMinWidth } = thisColum;\n                        let dragProps: Record<string, number> | undefined;\n                        if (dragToChangeCellWidth) {\n                            dragProps = {\n                                'data-index': thisIndex,\n                                'data-min': dragMinWidth,\n                                'data-max': dragMaxWidth,\n                            }\n                        }\n\n                        return (\n                            <div\n                                className={styles.row}\n                                style={{\n                                    width: cells[thisIndex],\n                                }} key={`${key}_cell_${thisColum.key}`}>\n                                {title}\n                                {\n                                    dragToChangeCellWidth ? <div className={styles.border} {...dragProps}></div> : null\n                                }\n\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n\n    }\n\n    // columnIndex 对应 header row 找到对应的数据\n    const renderCell = (\n        bodyColumns: any,\n        cells: any,\n        cellRangeProps: GridCellProps,\n    ) => {\n\n        const { rowIndex, columnIndex, style: cellStyle, key } = cellRangeProps;\n        const currentRow = columns[columnIndex];\n        const listItem = data[rowIndex] as any;\n        const cellProps = {\n            rowIndex,\n            columnIndex,\n            columns: bodyColumns,\n            cellStyle,\n            key,\n            data,\n            cells,\n            hoverIndex,\n            onMouseEnter: () => {\n                if (!draggingRef.current) {\n                    setHoverIndex(rowIndex)\n                }\n\n            },\n        }\n        if (onRowDragSort) {\n            return <SortableItem index={rowIndex} {...cellProps} />\n        }\n        return <TableRow {...cellProps} />\n\n\n\n    }\n\n\n    // 如果grind 长度不够， 下面的线条会到哪 这个通过计算剩余的位置补充上去\n    const renderMainTable = (sizeProps: Size, columnsWidth: any) => {\n        const { height, width } = sizeProps;\n        const { cells, all } = columnsWidth;\n        const { scrollLeft, scrollTop } = state;\n        let content = <> </>;\n        const gridProps = {\n            columnCount: 1,\n            columnWidth: all,\n            rowCount: data.length + (onLoadMore ? 1 : 0),\n            rowHeight: 48,\n            width: width,\n            height: height - 32,\n            cellRenderer: curry(renderCell)(columns, cells),\n            className: styles.contentGrid,\n            onScroll: (scrollParams: any) => {\n                setState(scrollParams);\n                handleScroll(scrollParams)\n            },\n            cellRangeRenderer: renderCellRange,\n            // ref: addGridToRef,\n            scrollTop\n        }\n\n        if (onRowDragSort) {\n            content = (\n\n                <SortableGrid\n                    {...gridProps}\n                    lockAxis=\"xy\"\n                    helperClass={styles.helpClass}\n                    gridRef={addGridToRef}\n                    useDragHandle\n                    onSortStart={() => {\n                        draggingRef.current = true;\n                        setHoverIndex(-1)\n                    }}\n                    onSortEnd={(sortProps: any) => {\n                        draggingRef.current = false;\n                        if (onRowDragSort) {\n                            onRowDragSort(sortProps.oldIndex, sortProps.newIndex);\n                        }\n\n                    }}\n                />\n            )\n        } else {\n            content = (\n                <Grid ref={addGridToRef} {...gridProps} />\n            )\n        }\n\n\n        return (\n            <>\n                <Grid\n                    cellRenderer={curry(renderHeaderCell)(columns, cells)}\n                    columnWidth={all}\n                    columnCount={1}\n                    rowCount={1}\n                    rowHeight={32}\n                    width={width}\n                    height={32}\n                    className={styles.header}\n                    scrollLeft={scrollLeft}\n                    ref={addGridToRef}\n\n                ></Grid>\n                {content}\n            </>\n        )\n    }\n    const renderLeftTable = (leftFixedColumns: any[], left: { cells: any; all: any; }, sizeProps: Size) => {\n\n        const { all, cells } = left;\n        const { width, height } = sizeProps;\n        const { scrollTop, scrollLeft } = state;\n        let content = <> </>;\n\n        content = <Grid\n            rowCount={data.length + (onLoadMore ? 1 : 0)}\n            columnCount={1}\n            rowHeight={48}\n            columnWidth={all}\n            width={all}\n            height={height - 32 - 10} // 因为滚动条为10高度\n            scrollTop={scrollTop}\n            cellRenderer={curry(renderCell)(leftFixedColumns, cells)}\n            cellRangeRenderer={renderCellRange}\n            onScroll={onFixedScroll}\n            ref={addGridToRef}\n        />\n\n        return <div className={styles.headerTable}>\n            {\n                scrollLeft > 0 ? <div className={styles.line}></div> : null\n            }\n\n            <Grid\n                cellRenderer={curry(renderHeaderCell)(leftFixedColumns, cells)}\n                rowCount={1}\n                columnCount={1}\n                rowHeight={32}\n                columnWidth={all}\n                width={all}\n                height={32}\n                className={styles.header}\n                ref={addGridToRef}\n            />\n            {content}\n        </div>\n    }\n\n    const renderRightTable = (rightFixedColumns: any[], right: { cells: any; all: any; }, main: { cells?: any; all: any; }, sizeProps: Size) => {\n\n        const { all, cells } = right;\n        const { width, height } = sizeProps;\n        const { scrollTop, scrollLeft, clientWidth, scrollWidth } = state;\n        let content = <> </>;\n\n\n        content = <Grid\n            rowCount={data.length + (onLoadMore ? 1 : 0)}\n            columnCount={1}\n            rowHeight={48}\n            columnWidth={all}\n            width={all}\n            height={height - 42}\n            scrollTop={scrollTop}\n            cellRenderer={curry(renderCell)(rightFixedColumns, cells)}\n            cellRangeRenderer={renderCellRange}\n            onScroll={onFixedScroll}\n            ref={addGridToRef}\n        />\nconsole.log( scrollLeft + clientWidth, scrollWidth);\n\n        return <div className={styles.rightHeaderTable}>\n            {\n                scrollLeft + width <= main.all ? <div className={styles.rightLine}></div> : null\n            }\n\n            <Grid\n                cellRenderer={curry(renderHeaderCell)(rightFixedColumns, cells)}\n                rowCount={1}\n                columnCount={1}\n                rowHeight={32}\n                columnWidth={all}\n                width={all}\n                height={32}\n                className={styles.header}\n                ref={addGridToRef}\n            />\n            {content}\n        </div>\n    }\n    const renderTable = (sizeProps: Size) => {\n        // 统一计算  每一列在宽度\n        const { height, width } = sizeProps;\n        // 计算每一列的宽度\n        // console.log(width,'w);\n        // 计算每行占据的宽度\n        const leftFixedColumns = takeWhile(columns, (c: any) => c.fixed);\n\n        const rightFixedColumns = takeRightWhile(columns, (c: any) => c.fixed)\n        const [left, main, right] = calColumnWidth(columns, width);\n        // console.log(left,main,right);÷\n        // console.log(right,'right');\n\n\n        return (\n            <>\n                {\n                    leftFixedColumns.length ? renderLeftTable(leftFixedColumns, left, sizeProps) : null\n                }\n                {renderMainTable(sizeProps, main)}\n                {\n                    rightFixedColumns.length ? renderRightTable(rightFixedColumns, right, main,sizeProps) : null\n                }\n            </>\n        )\n    }\n\n    return (\n        <div\n            className={classNames(styles.autoSize, className)}\n            onMouseLeave={() => {\n                setHoverIndex(-1)\n            }}\n            ref={containerRef}\n        >\n\n            {/* // 放大缩小窗口是重新刷新 */}\n            <AutoSizer onResize={() => {\n                measureCell()\n            }}>\n                {\n                    renderTable\n                }\n            </AutoSizer>\n\n        </div>\n    )\n\n}\n\nexport default Table;","\n// 给父级绑定 mousedown mouseover mouseleave mouseup这些事件\n\nimport { RefObject, useEffect, useMemo } from \"react\";\nimport styles from './index.less'\n// 当 mousedown 则 为其加上一个实线。但 mouseover 则 为其加上 虚线\n\n// 离开的时候，移除属性\n// remove contains  add parentElement\n\n// 打击，分开就 通过打击位置跟 theft + width 之差小于10\n// 样式拖着变大被覆盖， 让他大小 相当，通过 border-box\n\n\nexport default (\n    containerRef: RefObject<HTMLDivElement>,\n    cb?: (index: number, newWidth: number) => void\n) => {\n    const dragHandle = useMemo(() => {\n        // 记录移动哪个值 的大小， 最大，最小范围\n        // 创建刚开始的div  跟移动的div\n        let thLeft = 0; // 拖拽区域的父级\n        let thWidth = 0;\n        let thIndex = -1;\n        let thMin = 0;\n        let thMax = 0;\n        let lineLeft = 0;\n        let startLine: HTMLDivElement | undefined;\n        let line: HTMLDivElement | undefined;\n        let containerLeft = 0;\n        const clear = (): void => {\n            thLeft = 0;\n            thWidth = 0;\n            thIndex = -1;\n            thMax = 0;\n            thMin = 0;\n            lineLeft = 0;\n\n            if (startLine) {\n                startLine.remove();\n            }\n\n            if (line) {\n                line.remove();\n            }\n\n            startLine = undefined;\n            line = undefined;\n            if (containerRef.current) {\n                containerRef.current.classList.remove(styles.noSelect)\n            }\n\n        }\n\n        return {\n            onMouseDown: (e: MouseEvent) => {\n                const target = e.target as HTMLElement;\n                // 判断拖拽对象是否是他\n                if (target.classList.contains(styles.border)) {\n                    let rect = target.parentElement?.getBoundingClientRect();\n                    let containerRect = containerRef.current?.getBoundingClientRect();\n                    if (rect) {\n                        thLeft = rect.left;\n                        thWidth = rect.width;\n\n                    } else {\n                        return;\n                    }\n\n                    if (containerRect) {\n                        containerLeft = containerRect?.left;\n                    }\n\n                    // 获取拖拽的元素的index 跟最大，最小值\n                    thIndex = parseInt(target.getAttribute('data-index') || '0', 10);\n                    thMin = parseInt(target.getAttribute('data-min') || '0', 10);\n                    thMax = parseInt(target.getAttribute('data-max') || '0', 10)\n                    if (startLine) {\n                        startLine.remove();\n                    }\n\n                    startLine = document.createElement('div');\n                    startLine.classList.add(styles.startLine);\n                    startLine.style.left = `${e.clientX - containerLeft}px`\n                    if (containerRef.current) {\n                        containerRef.current.appendChild(startLine);\n                        // 为什么加样式\n                        containerRef.current.classList.add(styles.noSelect)\n                    }\n                }\n            },\n\n            onMouseOver: (e: MouseEvent) => {\n                // 有没有选中的才可以移动\n                if (thIndex < 0) {\n                    return;\n                }\n                // 移动过程会动\n                if (!line) {\n                    line = document.createElement('div');\n                    line.classList.add(styles.dragLine);\n                    if (containerRef.current) {\n                        containerRef.current.appendChild(line)\n                    }\n                }\n                let clientX = e.clientX; // 鼠标的位置\n                if (clientX + 10 < (thLeft + thMin) && thMin > 0) {\n                    clientX = thLeft + thMin - 12.5;        \n                } else if (clientX > (thLeft + thMax) && thMax > 0) {\n                    // max值必须大 不然会向前\n                    clientX = thMax + thLeft;\n                }\n                lineLeft = clientX;\n                line.style.left = `${clientX - containerLeft}px`\n                // console.log(lineLeft);\n                \n            },\n\n            onMouseUp: () => {\n                if (thIndex < 0) {\n                    return;\n                }\n                if (cb) {\n                    // 防止打击出现 0\n                    if(Math.floor(lineLeft - thLeft) && Math.abs(thLeft + thWidth - lineLeft) > 10) {\n                        cb(thIndex, lineLeft - thLeft)\n                    }\n                   \n                }\n                clear();\n            },\n\n            onMouseLeave: () => {\n                if (thIndex < 0) {\n                    return;\n                }\n                clear();\n            }\n        }\n\n    }, [])\n\n    useEffect(() => {\n        const { current } = containerRef;\n        if (current && cb) {\n            const { onMouseDown, onMouseOver, onMouseUp, onMouseLeave } = dragHandle;\n            current.addEventListener('mousedown', onMouseDown);\n            current.addEventListener('mouseover', onMouseOver);\n            current.addEventListener('mouseup', onMouseUp );\n            current.addEventListener('mouseleave', onMouseLeave)\n        }\n        return () => {\n            if(current) {\n                const { onMouseDown, onMouseOver, onMouseUp, onMouseLeave } = dragHandle;\n                current.removeEventListener('mousedown', onMouseDown);\n                current.removeEventListener('mouseover', onMouseOver);\n                current.removeEventListener('mouseup', onMouseUp );\n                current.removeEventListener('mouseleave', onMouseLeave)\n            }\n        }\n    }, [cb])\n}","import { takeRightWhile, takeWhile } from \"lodash\";\n\nconst getColumnWidth = (containerWidth: number, columns: { width: number; }[]) => {\n    const results: number[] = [];\n    let allWidth = 0;\n    columns.map((item: { width: number; }) => {\n        let thisWidth = 0;\n        if (item.width > 0 && item.width < 1) {\n            // thisWidth = containerWidth * (item.width + (item.width / findRatios * radio));\n            thisWidth = containerWidth * item.width;\n        } else if (item.width > 1) {\n            thisWidth = item.width\n        }\n        allWidth += thisWidth;\n        // 保存每个人列大小  \n        results.push(thisWidth)\n    })\n\n    return [results, allWidth]\n\n}\n\n// 为什么还要计算总列宽度\nexport const calColumnWidth = (columns: any, allWidth: number) =>  {\n    const results = getColumnWidth(allWidth, columns);\n   \n    let [cells, all] = results as any;\n    // 空间不满时补偿最后一列\n    if (all < allWidth) {\n        cells[cells.length - 1] += allWidth - all;\n        all = allWidth;\n    }\n    const getFixedCells = (takeFunc:typeof takeWhile) => {\n        let fixedAllWidth = 0;\n        const fixedCells = takeFunc(cells, (i:number, index) => {\n            if (columns[index].fixed) {\n                fixedAllWidth += i;\n                return true;\n            }\n            return false;\n        });\n        return {\n            cells: fixedCells,\n            all: fixedAllWidth,\n        };\n    };\n    return [\n        getFixedCells(takeWhile),\n        { cells, all },\n        getFixedCells(takeRightWhile),\n    ]\n}","import Table from 'component/Table'\nimport styles from './index.less'\nimport Mock from 'mockjs'\nimport { useEffect, useState } from 'react'\n\ninterface MockData {\n    array: {\n        id: number;\n        title: string;\n        name: string;\n        age: number;\n        position: string;\n        content: string;\n    }\n}\nconst getData = (start = 1 ):MockData => Mock.mock({\n    'array|20': [{\n        'id|+1': start,\n        title: '@cword(3,8)',\n        age: '@natural(1,100)',\n        name: '@cname',\n        content: '@cword(3,5)',\n        position: '@cword(5,8)'\n    }]\n})\nconst BaseTableDemo = () => {\n    const [data,setData] = useState({ array: []}) as any;\n    useEffect(() => {\n        setData(getData())\n    },[])\n    console.log(data.array);\n    \n     const columns = [\n        {\n            title: '序号',\n            key: 'index',\n            width: 0.2,\n            render: (r: any, num: number) => <span>{num}</span>\n        },\n        {\n            title: '我的标题',\n            key: 'title',\n            width: 0.2,\n        },\n        {\n            title: '姓名',\n            key: 'name',\n            width: 0.2,\n        },\n        {\n            title: '年龄',\n            key: 'age',\n            width: 0.2,\n        },\n        {\n            title: '职位',\n            key: 'position',\n            width: 0.2,\n        },\n        {\n            title: '内容',\n            ket: 'content',\n            width: 0.2,\n            render: (r: any, num: number) => (<span>{r.content}</span>)\n        }\n    ];\n    \n    return (\n        <div>\n            <Table className={styles.table} columns={columns} data={data.array}/>\n        </div>\n    )\n\n}\n\nexport default BaseTableDemo;","\nimport Table from 'component/Table'\nimport { useEffect, useState } from 'react';\nimport Mock from 'mockjs';\nimport styles from './index.less'\nimport { last } from 'lodash';\nimport { arrayMoveImmutable } from 'array-move'\n\ninterface MockData {\n    array: {\n        id: number;\n        title: string;\n        name: string;\n        age: number;\n        position: string;\n        content: string;\n    }\n}\nconst getData = (start = 1): MockData => Mock.mock({\n    'array|20': [{\n        'id|+1': start,\n        title: '@cword(3,5)',\n        name: '@cname',\n        content: '@cword(5,7)',\n        position: '@cword(5,8)',\n        age: '@natural(1, 100)'\n    }]\n})\nconst ScrollMoreTableDemo = () => {\n    const [data, setData] = useState({ array: [] }) as any\n    const [loading, setLoading] = useState(false)\n    useEffect(() => {\n        setData(getData())\n    }, [])\n    const columns = [\n        {\n            title: '序号',\n            key: 'index',\n            width: 0.1, \n            render: (r: any, num: number) => <span>{num}</span>\n        },\n        {\n            title: '我的标题',\n            key: 'title',\n            width: 0.2,\n        },\n        {\n            title: '姓名',\n            key: 'name',\n            width: 0.2,\n        },\n        {\n            title: '年龄',\n            key: 'age',\n            width: 0.1,\n        },\n        {\n            title: '职位',\n            key: 'position',\n            width: 0.2,\n        },\n        {\n            title: '内容',\n            ket: 'content',\n            width: 0.2,\n            render: (r: any, num: number) => (<span>{r.content}</span>)\n        }\n    ];\n    return (\n        <Table\n            loadMoreLoading={loading}\n            loadMoreOver={data.array.length > 50}\n            onLoadMore={() => {\n                setLoading(true);\n                setTimeout(() => {\n                    setLoading(false);\n                    const lastItem = last(data.array) as any;\n                    const { array } = getData(lastItem ? lastItem.id + 1 : 0);\n                    setData({ array: data.array.concat(array) });\n                }, 1000);\n            }}\n            className={styles.table} columns={columns} data={data.array}\n        ></Table>\n    )\n}\n\nexport default ScrollMoreTableDemo;","\nimport Table from 'component/Table'\nimport { useEffect, useState } from 'react';\nimport Mock from 'mockjs';\nimport styles from './index.less'\nimport { last } from 'lodash';\nimport { arrayMoveImmutable } from 'array-move'\n\ninterface MockData {\n    array: {\n        id: number;\n        title: string;\n        name: string;\n        age: number;\n        position: string;\n        content: string;\n    }\n}\nconst getData = (start = 1): MockData => Mock.mock({\n    'array|20': [{\n        'id|+1': start,\n        title: '@cword(3,5)',\n        name: '@cname',\n        content: '@cword(5,7)',\n        position: '@cword(5,8)',\n        age: '@natural(1, 100)'\n    }]\n})\nconst DragTableDemo = () => {\n    const [data, setData] = useState({ array: [] }) as any\n    const [loading, setLoading] = useState(false)\n    useEffect(() => {\n        setData(getData())\n    }, [])\n    const columns = [\n        {\n            title: '拖拽',\n            key: 'tu',\n            width: 0.1,\n            isRowDragSortHandle: true,\n        },\n        {\n            title: 'ID',\n            key: 'id',\n            width: 0.1,\n            // render: (r: any, num: number) => <span>{num}</span>\n        },\n        {\n            title: '我的标题',\n            key: 'title',\n            width: 0.2,\n        },\n        {\n            title: '姓名',\n            key: 'name',\n            width: 0.1,\n        },\n        {\n            title: '年龄',\n            key: 'age',\n            width: 0.1,\n        },\n        {\n            title: '职位',\n            key: 'position',\n            width: 0.2,\n        },\n        {\n            title: '内容',\n            ket: 'content',\n            width: 0.2,\n            render: (r: any, num: number) => (<span>{r.content}</span>)\n        }\n    ];\n    return (\n        <Table\n            onRowDragSort={(oldIndex, newIndex) => {\n                const list = arrayMoveImmutable(data.array, oldIndex, newIndex);\n                setData({ array: list })\n            }}\n            className={styles.table} columns={columns} data={data.array}\n        ></Table>\n    )\n}\n\nexport default DragTableDemo;","import Table from 'component/Table'\nimport styles from './index.less'\nimport Mock from 'mockjs'\nimport { useEffect, useState } from 'react'\n\ninterface MockData {\n    array: {\n        id: number;\n        title: string;\n        name: string;\n        age: number;\n        position: string;\n        content: string;\n    }\n}\nconst getData = (start = 1 ):MockData => Mock.mock({\n    'array|20': [{\n        'id|+1': start,\n        title: '@cword(3,8)',\n        age: '@natural(1,100)',\n        name: '@cname',\n        content: '@cword(3,5)',\n        position: '@cword(5,8)'\n    }]\n})\nconst FixTableDemo = () => {\n    const [data,setData] = useState({ array: []}) as any;\n    useEffect(() => {\n        setData(getData())\n    },[])\n    console.log(data.array);\n    \n     const columns = [\n        {\n            title: '序号',\n            key: 'index',\n            width: 0.2,\n            fixed: true,\n            render: (r: any, num: number) => <span>{num}</span>\n        },\n        {\n            title: '我的标题',\n            key: 'title',\n            width: 0.2,\n        },\n        {\n            title: '姓名',\n            key: 'name',\n            width: 0.2,\n        },\n        {\n            title: '年龄',\n            key: 'age',\n            width: 0.1,\n        },\n        {\n            title: '职位',\n            key: 'position',\n            width: 0.3,\n        },\n        {\n            title: '内容',\n            ket: 'content',\n            width: 0.2,\n            fixed: true,\n            render: (r: any, num: number) => (<span>{r.content}</span>)\n        }\n    ];\n    \n    return (\n        <div>\n            <Table className={styles.table} columns={columns} data={data.array}/>\n        </div>\n    )\n\n}\n\nexport default FixTableDemo;","import Table from 'component/Table'\nimport styles from './index.less'\nimport Mock from 'mockjs'\nimport { useEffect, useState } from 'react'\n\ninterface MockData {\n    array: {\n        id: number;\n        title: string;\n        name: string;\n        age: number;\n        position: string;\n        content: string;\n    }\n}\nconst getData = (start = 1): MockData => Mock.mock({\n    'array|20': [{\n        'id|+1': start,\n        title: '@cword(3,8)',\n        age: '@natural(1,100)',\n        name: '@cname',\n        content: '@cword(3,5)',\n        position: '@cword(5,8)'\n    }]\n})\nconst ScaleTableDemo = () => {\n    const [data, setData] = useState({ array: [] }) as any;\n    const [columnWidth, setColumnWidth] = useState<number[]>([\n        100, 0.2, 0.1, 0.1, 0.2, 0.2,\n    ]);\n    useEffect(() => {\n        setData(getData())\n    }, [])\n\n    const columns = [\n        {\n            title: '序号',\n            key: 'index',\n            width: columnWidth[0],\n            dragMaxWidth: 300,\n            dragMinWidth: 100,\n            dragToChangeCellWidth: true,\n            // fixed: true,\n            render: (r: any, num: number) => <span>{num}</span>\n        },\n        {\n            title: '我的标题',\n            key: 'title',\n            width: columnWidth[1],\n            dragMaxWidth: 300,\n            dragMinWidth: 100,\n            dragToChangeCellWidth: true,\n        },\n        {\n            title: '姓名',\n            key: 'name',\n            width: columnWidth[2],\n            dragMaxWidth: 300,\n            dragMinWidth: 50,\n            dragToChangeCellWidth: true,\n        },\n        {\n            title: '年龄',\n            key: 'age',\n            width: columnWidth[3],\n            dragMaxWidth: 300,\n            dragMinWidth: 50,\n            dragToChangeCellWidth: true,\n        },\n        {\n            title: '职位',\n            key: 'position',\n            width: columnWidth[4],\n            dragMaxWidth: 300,\n            dragMinWidth: 100,\n            dragToChangeCellWidth: true,\n        },\n        {\n            title: '内容',\n            ket: 'content',\n            width: columnWidth[5],\n            // fixed: true,\n            render: (r: any, num: number) => (<span>{r.content}</span>)\n        }\n    ];\n    return (\n        <div>\n            <Table\n                className={styles.table}\n                columns={columns}\n                data={data.array}\n                onCellDrag={(index: number, newWidth: any) => {\n                    setColumnWidth((old) => {\n                        const newWidths = [...old];\n                        newWidths[index] = newWidth;\n                        return newWidths;\n                    });\n                }}\n            />\n        </div>\n    )\n\n}\n\nexport default ScaleTableDemo;","\n/* eslint-disable import/no-webpack-loader-syntax */\nimport styles from './index.less'\nimport Table from 'component/Table';\nimport Text from 'component/Text';\nimport Demo from 'component/Demo';\nimport BaseTableDemo from './BaseTableDemo';\nimport BaseTableDemoTsx from '!!raw-loader!./BaseTableDemo/index.tsx';\nimport BaseTableDemoLess from '!!raw-loader!./BaseTableDemo/index.less';\n\nimport ScrollMoreTableDemo from './ScrollMoreTableDemo';\nimport ScrollMoreTableDemoLess from '!!raw-loader!./ScrollMoreTableDemo/index.less';\nimport ScrollMoreTableDemoTsx from '!!raw-loader!./ScrollMoreTableDemo/index.tsx';\n\nimport DragTableDemo from './DragTableDemo';\nimport DragTableDemoTsx from '!!raw-loader!./DragTableDemo/index.tsx';\nimport DragTableDemoLess from '!!raw-loader!./DragTableDemo/index.less';\n\nimport FixTableDemo from './FixTableDemo';\nimport FixTableDemoTsx from '!!raw-loader!./FixTableDemo/index.tsx';\nimport FixTableDemoLess from '!!raw-loader!./FixTableDemo/index.less';\nimport ScaleTableDemo from './ScaleTableDemo';\nimport ScaleTableDemoTsx from '!!raw-loader!./ScaleTableDemo/index.tsx';\nimport ScaleTableDemoLess from '!!raw-loader!./ScaleTableDemo/index.less';\nimport PropsTable from 'component/PropsTable';\n\n// 如何解析对应的title\n// 宽度作为 【】 title作为【】columns\n\nconst TableView = (props: any) => {\n\n    return (\n        <div>\n            <Text level=\"h1\">表格</Text>\n            <Text className={styles.desc}>何时使用：1、当有大量结构化的数据需要展现时；2、当需要对数据进行排序、搜索、分页、自定义操作等复杂行为时</Text>\n\n\n\n            <Demo\n                demo={<BaseTableDemo />}\n                title=\"基本表格\"\n                codes={\n                    [\n                        {\n                            name: 'index.tsx',\n                            type: 'tsx',\n                            code: BaseTableDemoTsx\n                        },\n                        {\n                            name: 'index.less',\n                            type: 'less',\n                            code: BaseTableDemoLess\n                        }\n                    ]\n                }\n            ></Demo>\n            <Demo\n                title=\"滚动加载\"\n                demo={<ScrollMoreTableDemo />}\n                codes={[\n                    {\n                        name: 'index.tsx',\n                        type: 'tsx',\n                        code: ScrollMoreTableDemoTsx\n                    },\n                    {\n                        name: 'index.less',\n                        type: 'less',\n                        code: ScrollMoreTableDemoLess\n                    }\n                ]\n                }\n            />\n            <Demo\n                title=\"拖拽排序\"\n                demo={<DragTableDemo />}\n                codes={\n                    [\n                        {\n                            name: 'index.tsx',\n                            type: 'tsx',\n                            code: DragTableDemoTsx\n                        },\n                        {\n                            name: 'index.less',\n                            type: 'less',\n                            code: DragTableDemoLess\n                        }\n                    ]\n                }\n            ></Demo>\n            <Demo\n                title=\"拖拽缩放列表\"\n                demo={<ScaleTableDemo />}\n                codes={\n                    [\n                        {\n                            name: 'index.tsx',\n                            type: 'tsx',\n                            code: ScaleTableDemoTsx\n                        },\n                        {\n                            name: 'index.less',\n                            type: 'less',\n                            code: ScaleTableDemoLess,\n                        }\n                    ]\n                }\n            />\n            <Demo\n                title=\"固定左右表单\"\n                demo={<FixTableDemo />}\n                codes={\n                    [\n                        {\n                            name: 'index.tsx',\n                            type: 'tsx',\n                            code: FixTableDemoTsx\n                        },\n                        {\n                            name: 'index.less',\n                            type: 'less',\n                            code: FixTableDemoLess\n                        }\n                    ]\n                }\n            />\n            <section>\n                <PropsTable\n                    title=\"Table\"\n                    desc=\"表格，基于虚拟列表技术\"\n                    list={[\n                        {\n                            name: 'columns',\n                            desc: '必选，列配置，可参考下面的columns配置表',\n                            type: 'Column',\n                            defValue: '-',\n                        },\n                        {\n                            name: 'data',\n                            desc: '必选，数据源',\n                            type: 'Record<string,any>',\n                            defValue: '-',\n                        },\n                        {\n                            name: 'rowHeight',\n                            desc: '可选，表格行高，表头高UI固定为32',\n                            type: 'number',\n                            defValue: '48',\n                        },\n                        {\n                            name: 'loading',\n                            desc: '可选，是否为加载中',\n                            type: 'boolean',\n                            defValue: 'false',\n                        }, {\n                            name: 'empty',\n                            desc: '可选，数据为空时的显示，会被添加style属性，（width，height）',\n                            type: 'ReactElement',\n                            defValue: '<Result content=\"暂无数据\" status=\"empty\" />',\n                        }, {\n                            name: 'onLoadMore',\n                            desc: '可选，滚动加载回调，设置后启用滚动加载功能',\n                            type: '()=>void',\n                            defValue: 'undefined',\n                        },\n                        {\n                            name: 'loadMoreLoading',\n                            desc: '可选，是否滚动加载中',\n                            type: 'boolean',\n                            defValue: 'false',\n                        },\n                        {\n                            name: 'loadMoreOver',\n                            desc: '可选，是否滚动加载完毕',\n                            type: 'boolean',\n                            defValue: 'false',\n                        },\n                        // {\n                        //     name: 'renderLoadMore',\n                        //     desc: '可选，自定义渲染滚动加载组件',\n                        //     type: '(loadMoreLoading:boolean,\\nloadMoreOver:boolean\\n)=>ReactElement',\n                        //     defValue: '请看示例',\n                        // },\n                        // {\n                        //     name: 'onCellDrag',\n                        //     desc: '可选，宽度拖拽完成回调，index为column下标',\n                        //     type: '(index:number,\\nnewWidth:number)=>void',\n                        //     defValue: 'undefined',\n                        // },\n                        // {\n                        //     name: 'tableRef',\n                        //     desc: '可选，获取table句柄，用于column变更后主动通知重新计算cell数据',\n                        //     type: '{mesureCell:()=>void}',\n                        //     defValue: 'undefined',\n                        // },\n                        {\n                            name: 'className',\n                            desc: '可选，Table的样式，需要通过样式设置Table大小（flex或width）',\n                            type: 'string',\n                            defValue: 'undefined',\n                        },\n                        {\n                            name: 'style',\n                            desc: '可选，Table的样式',\n                            type: 'CSSProperties',\n                            defValue: 'undefined',\n                        },\n                    ]}\n                />\n                <PropsTable\n                    title=\"Column\"\n                    desc=\"表格列配置，请注意column数组的引用\"\n                    list={[\n                        {\n                            name: 'title',\n                            desc: '必选，表头',\n                            type: 'string|ReactElement',\n                            defValue: '-',\n                        },\n                        {\n                            name: 'key',\n                            desc: '必选，数据源属性名称或其他key',\n                            type: 'string',\n                            defValue: '-',\n                        },\n                        {\n                            name: 'width',\n                            desc: '必选，列宽度，小于1为百分比宽度，大于1为实际像素宽度',\n                            type: 'number',\n                            defValue: '-',\n                        },\n                        {\n                            name: 'render',\n                            desc: '可选，自定义数据渲染，没设置render会尝试key取数据源对应属性值渲染',\n                            type: '(row)=>ReactElement',\n                            defValue: 'undefined',\n                        }, \n                        // {\n                        //     name: 'onSort',\n                        //     desc: '可选，排序回调，设置后启用排序功能',\n                        //     type: '(sort:\"asc\"|\"desc\")=>void',\n                        //     defValue: '<Empty />',\n                        // }, \n                        // {\n                        //     name: 'sort',\n                        //     desc: '可选，排序的值，当以此列为依据排序时的受控值，用户点击时会按此值的反值回调',\n                        //     type: ['asc', 'desc'],\n                        //     defValue: 'undefined',\n                        // },\n                        // {\n                        //     name: 'initialSort',\n                        //     desc: '可选，排序的默认值，当没有以此列为依据排序时的默认值，用户点击时会按此值回调',\n                        //     type: ['asc', 'desc'],\n                        //     defValue: 'asc',\n                        // },\n                        {\n                            name: 'fixed',\n                            desc: '可选，是否固定，只能从左边或右边开始设置，不能间断',\n                            type: 'boolean',\n                            defValue: 'false',\n                        },\n                        {\n                            name: 'dragMinWidth',\n                            desc: '可选，拖拽设置宽度的最小宽度，和最小值设置任意一个会启用此列拖拽宽度',\n                            type: 'number',\n                            defValue: '10',\n                        },\n                        {\n                            name: 'dragMaxWidth',\n                            desc: '可选，拖拽设置宽度的最大宽度，和最大值设置任意一个会启用此列拖拽宽度',\n                            type: 'number',\n                            defValue: '10',\n                        },\n                    ]}\n                />\n            </section>\n        </div>\n    )\n\n}\n\nexport default TableView;","export default \"import Table from 'component/Table'\\nimport styles from './index.less'\\nimport Mock from 'mockjs'\\nimport { useEffect, useState } from 'react'\\n\\ninterface MockData {\\n    array: {\\n        id: number;\\n        title: string;\\n        name: string;\\n        age: number;\\n        position: string;\\n        content: string;\\n    }\\n}\\nconst getData = (start = 1 ):MockData => Mock.mock({\\n    'array|20': [{\\n        'id|+1': start,\\n        title: '@cword(3,8)',\\n        age: '@natural(1,100)',\\n        name: '@cname',\\n        content: '@cword(3,5)',\\n        position: '@cword(5,8)'\\n    }]\\n})\\nconst BaseTableDemo = () => {\\n    const [data,setData] = useState({ array: []}) as any;\\n    useEffect(() => {\\n        setData(getData())\\n    },[])\\n    console.log(data.array);\\n    \\n     const columns = [\\n        {\\n            title: '序号',\\n            key: 'index',\\n            width: 0.2,\\n            render: (r: any, num: number) => <span>{num}</span>\\n        },\\n        {\\n            title: '我的标题',\\n            key: 'title',\\n            width: 0.2,\\n        },\\n        {\\n            title: '姓名',\\n            key: 'name',\\n            width: 0.2,\\n        },\\n        {\\n            title: '年龄',\\n            key: 'age',\\n            width: 0.2,\\n        },\\n        {\\n            title: '职位',\\n            key: 'position',\\n            width: 0.2,\\n        },\\n        {\\n            title: '内容',\\n            ket: 'content',\\n            width: 0.2,\\n            render: (r: any, num: number) => (<span>{r.content}</span>)\\n        }\\n    ];\\n    \\n    return (\\n        <div>\\n            <Table className={styles.table} columns={columns} data={data.array}/>\\n        </div>\\n    )\\n\\n}\\n\\nexport default BaseTableDemo;\";","export default \".table {\\n    height: 400px;\\n}\";","export default \"\\nimport Table from 'component/Table'\\nimport { useEffect, useState } from 'react';\\nimport Mock from 'mockjs';\\nimport styles from './index.less'\\nimport { last } from 'lodash';\\nimport { arrayMoveImmutable } from 'array-move'\\n\\ninterface MockData {\\n    array: {\\n        id: number;\\n        title: string;\\n        name: string;\\n        age: number;\\n        position: string;\\n        content: string;\\n    }\\n}\\nconst getData = (start = 1): MockData => Mock.mock({\\n    'array|20': [{\\n        'id|+1': start,\\n        title: '@cword(3,5)',\\n        name: '@cname',\\n        content: '@cword(5,7)',\\n        position: '@cword(5,8)',\\n        age: '@natural(1, 100)'\\n    }]\\n})\\nconst ScrollMoreTableDemo = () => {\\n    const [data, setData] = useState({ array: [] }) as any\\n    const [loading, setLoading] = useState(false)\\n    useEffect(() => {\\n        setData(getData())\\n    }, [])\\n    const columns = [\\n        {\\n            title: '序号',\\n            key: 'index',\\n            width: 0.1, \\n            render: (r: any, num: number) => <span>{num}</span>\\n        },\\n        {\\n            title: '我的标题',\\n            key: 'title',\\n            width: 0.2,\\n        },\\n        {\\n            title: '姓名',\\n            key: 'name',\\n            width: 0.2,\\n        },\\n        {\\n            title: '年龄',\\n            key: 'age',\\n            width: 0.1,\\n        },\\n        {\\n            title: '职位',\\n            key: 'position',\\n            width: 0.2,\\n        },\\n        {\\n            title: '内容',\\n            ket: 'content',\\n            width: 0.2,\\n            render: (r: any, num: number) => (<span>{r.content}</span>)\\n        }\\n    ];\\n    return (\\n        <Table\\n            loadMoreLoading={loading}\\n            loadMoreOver={data.array.length > 50}\\n            onLoadMore={() => {\\n                setLoading(true);\\n                setTimeout(() => {\\n                    setLoading(false);\\n                    const lastItem = last(data.array) as any;\\n                    const { array } = getData(lastItem ? lastItem.id + 1 : 0);\\n                    setData({ array: data.array.concat(array) });\\n                }, 1000);\\n            }}\\n            className={styles.table} columns={columns} data={data.array}\\n        ></Table>\\n    )\\n}\\n\\nexport default ScrollMoreTableDemo;\";","export default \".table {\\n    height: 400px;\\n}\";","export default \"\\nimport Table from 'component/Table'\\nimport { useEffect, useState } from 'react';\\nimport Mock from 'mockjs';\\nimport styles from './index.less'\\nimport { last } from 'lodash';\\nimport { arrayMoveImmutable } from 'array-move'\\n\\ninterface MockData {\\n    array: {\\n        id: number;\\n        title: string;\\n        name: string;\\n        age: number;\\n        position: string;\\n        content: string;\\n    }\\n}\\nconst getData = (start = 1): MockData => Mock.mock({\\n    'array|20': [{\\n        'id|+1': start,\\n        title: '@cword(3,5)',\\n        name: '@cname',\\n        content: '@cword(5,7)',\\n        position: '@cword(5,8)',\\n        age: '@natural(1, 100)'\\n    }]\\n})\\nconst DragTableDemo = () => {\\n    const [data, setData] = useState({ array: [] }) as any\\n    const [loading, setLoading] = useState(false)\\n    useEffect(() => {\\n        setData(getData())\\n    }, [])\\n    const columns = [\\n        {\\n            title: '拖拽',\\n            key: 'tu',\\n            width: 0.1,\\n            isRowDragSortHandle: true,\\n        },\\n        {\\n            title: 'ID',\\n            key: 'id',\\n            width: 0.1,\\n            // render: (r: any, num: number) => <span>{num}</span>\\n        },\\n        {\\n            title: '我的标题',\\n            key: 'title',\\n            width: 0.2,\\n        },\\n        {\\n            title: '姓名',\\n            key: 'name',\\n            width: 0.1,\\n        },\\n        {\\n            title: '年龄',\\n            key: 'age',\\n            width: 0.1,\\n        },\\n        {\\n            title: '职位',\\n            key: 'position',\\n            width: 0.2,\\n        },\\n        {\\n            title: '内容',\\n            ket: 'content',\\n            width: 0.2,\\n            render: (r: any, num: number) => (<span>{r.content}</span>)\\n        }\\n    ];\\n    return (\\n        <Table\\n            onRowDragSort={(oldIndex, newIndex) => {\\n                const list = arrayMoveImmutable(data.array, oldIndex, newIndex);\\n                setData({ array: list })\\n            }}\\n            className={styles.table} columns={columns} data={data.array}\\n        ></Table>\\n    )\\n}\\n\\nexport default DragTableDemo;\";","export default \".table {\\n    height: 400px;\\n}\";","export default \"import Table from 'component/Table'\\nimport styles from './index.less'\\nimport Mock from 'mockjs'\\nimport { useEffect, useState } from 'react'\\n\\ninterface MockData {\\n    array: {\\n        id: number;\\n        title: string;\\n        name: string;\\n        age: number;\\n        position: string;\\n        content: string;\\n    }\\n}\\nconst getData = (start = 1): MockData => Mock.mock({\\n    'array|20': [{\\n        'id|+1': start,\\n        title: '@cword(3,8)',\\n        age: '@natural(1,100)',\\n        name: '@cname',\\n        content: '@cword(3,5)',\\n        position: '@cword(5,8)'\\n    }]\\n})\\nconst ScaleTableDemo = () => {\\n    const [data, setData] = useState({ array: [] }) as any;\\n    const [columnWidth, setColumnWidth] = useState<number[]>([\\n        100, 0.2, 0.1, 0.1, 0.2, 0.2,\\n    ]);\\n    useEffect(() => {\\n        setData(getData())\\n    }, [])\\n\\n    const columns = [\\n        {\\n            title: '序号',\\n            key: 'index',\\n            width: columnWidth[0],\\n            dragMaxWidth: 300,\\n            dragMinWidth: 100,\\n            dragToChangeCellWidth: true,\\n            // fixed: true,\\n            render: (r: any, num: number) => <span>{num}</span>\\n        },\\n        {\\n            title: '我的标题',\\n            key: 'title',\\n            width: columnWidth[1],\\n            dragMaxWidth: 300,\\n            dragMinWidth: 100,\\n            dragToChangeCellWidth: true,\\n        },\\n        {\\n            title: '姓名',\\n            key: 'name',\\n            width: columnWidth[2],\\n            dragMaxWidth: 300,\\n            dragMinWidth: 50,\\n            dragToChangeCellWidth: true,\\n        },\\n        {\\n            title: '年龄',\\n            key: 'age',\\n            width: columnWidth[3],\\n            dragMaxWidth: 300,\\n            dragMinWidth: 50,\\n            dragToChangeCellWidth: true,\\n        },\\n        {\\n            title: '职位',\\n            key: 'position',\\n            width: columnWidth[4],\\n            dragMaxWidth: 300,\\n            dragMinWidth: 100,\\n            dragToChangeCellWidth: true,\\n        },\\n        {\\n            title: '内容',\\n            ket: 'content',\\n            width: columnWidth[5],\\n            // fixed: true,\\n            render: (r: any, num: number) => (<span>{r.content}</span>)\\n        }\\n    ];\\n    return (\\n        <div>\\n            <Table\\n                className={styles.table}\\n                columns={columns}\\n                data={data.array}\\n                onCellDrag={(index: number, newWidth: any) => {\\n                    setColumnWidth((old) => {\\n                        const newWidths = [...old];\\n                        newWidths[index] = newWidth;\\n                        return newWidths;\\n                    });\\n                }}\\n            />\\n        </div>\\n    )\\n\\n}\\n\\nexport default ScaleTableDemo;\";","export default \".table {\\n    height: 400px;\\n}\";","export default \"import Table from 'component/Table'\\nimport styles from './index.less'\\nimport Mock from 'mockjs'\\nimport { useEffect, useState } from 'react'\\n\\ninterface MockData {\\n    array: {\\n        id: number;\\n        title: string;\\n        name: string;\\n        age: number;\\n        position: string;\\n        content: string;\\n    }\\n}\\nconst getData = (start = 1 ):MockData => Mock.mock({\\n    'array|20': [{\\n        'id|+1': start,\\n        title: '@cword(3,8)',\\n        age: '@natural(1,100)',\\n        name: '@cname',\\n        content: '@cword(3,5)',\\n        position: '@cword(5,8)'\\n    }]\\n})\\nconst FixTableDemo = () => {\\n    const [data,setData] = useState({ array: []}) as any;\\n    useEffect(() => {\\n        setData(getData())\\n    },[])\\n    console.log(data.array);\\n    \\n     const columns = [\\n        {\\n            title: '序号',\\n            key: 'index',\\n            width: 0.2,\\n            fixed: true,\\n            render: (r: any, num: number) => <span>{num}</span>\\n        },\\n        {\\n            title: '我的标题',\\n            key: 'title',\\n            width: 0.2,\\n        },\\n        {\\n            title: '姓名',\\n            key: 'name',\\n            width: 0.2,\\n        },\\n        {\\n            title: '年龄',\\n            key: 'age',\\n            width: 0.1,\\n        },\\n        {\\n            title: '职位',\\n            key: 'position',\\n            width: 0.3,\\n        },\\n        {\\n            title: '内容',\\n            ket: 'content',\\n            width: 0.2,\\n            fixed: true,\\n            render: (r: any, num: number) => (<span>{r.content}</span>)\\n        }\\n    ];\\n    \\n    return (\\n        <div>\\n            <Table className={styles.table} columns={columns} data={data.array}/>\\n        </div>\\n    )\\n\\n}\\n\\nexport default FixTableDemo;\";","export default \".table {\\n    height: 400px;\\n}\";","import React, { FunctionComponentElement } from 'react';\nimport classnames from 'classnames';\nimport styles from './index.less';\n\nexport interface Props{\n    level?:'h1'|'h2'|'h3'|'importent'|'text'|'tips',\n    ellipsis?:boolean,\n    pre?:boolean,\n    className?:string,\n    children?:string,\n    style?:any\n}\n\nconst Text = (props:Props):FunctionComponentElement<Props> => {\n    const {\n        level = 'text', ellipsis, className, children, pre, style\n    } = props;\n\n    return (\n        <div className={classnames(className, {\n            [styles.h1]: level === 'h1',\n            [styles.h2]: level === 'h2',\n            [styles.h3]: level === 'h3',\n            [styles.main]: level === 'importent',\n            [styles.text]: level === 'text',\n            [styles.tips]: level === 'tips',\n            [styles.ellipsis]: ellipsis,\n            [styles.pre]: pre,\n        })}\n        style={style}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default Text;\n","import React, {\n    CSSProperties,\n    ForwardedRef,\n    forwardRef,\n    FunctionComponentElement, ReactElement,\n} from 'react';\nimport classnames from 'classnames';\nimport styles from './index.less';\n\ntype Element=ReactElement|string|undefined|null;\n\nexport interface Props{\n    flex:'vertical-center'|'horizontal-center'|'center'|'vertical-full'|'horizontal-full'|'horizontal-warp',\n    className?:string,\n    children:Element[]|Element,\n    onClick?:React.MouseEventHandler,\n    style?:CSSProperties\n    title?:string,\n}\n\nconst FlexContainer = (props:Props, ref:ForwardedRef<HTMLDivElement>|null):FunctionComponentElement<Props> => {\n    const {\n        flex, children, className, onClick, style, title,\n    } = props;\n\n    return (\n        <div\n            className={classnames({\n                [styles.vCenter]: flex === 'vertical-center',\n                [styles.hCenter]: flex === 'horizontal-center',\n                [styles.center]: flex === 'center',\n                [styles.vFull]: flex === 'vertical-full',\n                [styles.hFull]: flex === 'horizontal-full',\n                [styles.hWarp]: flex === 'horizontal-warp',\n            }, className)}\n            onClick={onClick}\n            ref={ref}\n            style={style}\n            title={title}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default forwardRef(FlexContainer);\n","import React, {\n    CSSProperties,\n    ForwardedRef, forwardRef, FunctionComponentElement, ReactElement, useMemo,\n} from 'react';\nimport classnames from 'classnames';\nimport styles from './index.less';\n\ntype Element=ReactElement|string|undefined|null;\n\nexport interface Props{\n    className?:string,\n    children?:Element[]|Element,\n    grow?:boolean,\n    basis?:number|string,\n    scroll?:boolean,\n    onClick?:React.MouseEventHandler,\n    onScroll?:React.UIEventHandler<HTMLDivElement>,\n    style?:CSSProperties,\n}\n\nconst FlexItem = (props:Props, ref:ForwardedRef<HTMLDivElement>|null):FunctionComponentElement<Props> => {\n    const {\n        children, className, grow = false, basis, onClick, scroll, onScroll, style = {},\n    } = props;\n\n    const calculatedStyle = useMemo(() => {\n        const result:CSSProperties = { ...style };\n        if (basis) {\n            result.flexBasis = basis;\n        }\n        return result;\n    }, [style, basis]);\n\n    return (\n        <div\n            className={classnames(styles.item, {\n                [styles.grow]: grow,\n                [styles.scroll]: scroll,\n            }, className)}\n            style={calculatedStyle}\n            onClick={onClick}\n            onScroll={onScroll}\n            ref={ref}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default forwardRef(FlexItem);\n","import styles from './index.less'\r\nimport classnames from 'classnames';\r\nimport Loading from 'component/Loading';\r\nconst  Button = (props:any) => {\r\n    const {\r\n        type = 'solid',\r\n        size = 'm',\r\n        danger= false,\r\n        children,\r\n        primary,\r\n        loading,\r\n        className,\r\n        prefix,\r\n        suffix, \r\n        block = false,\r\n        onClick,\r\n        style,\r\n        disabled\r\n    } = props;\r\n    return (\r\n        <button  className={classnames(styles.button, {\r\n            [styles.contained]: type === 'contained',\r\n            [styles.solid]: type === 'solid',\r\n            [styles.dashed]: type === 'dashed',\r\n            [styles.link]: type === 'link',\r\n            [styles.text]: type === 'text',\r\n            [styles.primary]: primary,\r\n            [styles.danger]: danger,\r\n            [styles.s]: size === 's',\r\n            [styles.m]: size === 'm',\r\n            [styles.l]: size === 'l',\r\n            [styles.xl]: size === 'xl',\r\n            [styles.block]: block,\r\n            [styles.loading]: loading,\r\n        }, className)}\r\n        onClick={onClick}\r\n        style={style}\r\n        disabled={disabled}\r\n        >\r\n            {loading ? <Loading className={styles.spin}/>: null}\r\n            <span className={styles.content}>\r\n                {prefix} {children}{suffix}\r\n            </span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import * as React from 'react';\n\nfunction Loading(props: React.SVGProps<SVGSVGElement>):React.FunctionComponentElement<React.SVGProps<SVGSVGElement>> {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            style={{\n                background: '0 0',\n            }}\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 100 100\"\n            preserveAspectRatio=\"xMidYMid\"\n            display=\"block\"\n            {...props}\n        >\n            <g transform=\"translate(85 50)\" color=\"currentColor\">\n                <circle r={6} transform=\"scale(1.086)\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"-0.587248322147651s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"-0.587248322147651s\"\n                    />\n                </circle>\n            </g>\n            <g transform=\"rotate(45 -52.855 127.604)\" color=\"currentColor\">\n                <circle\n                    r={6}\n                    fillOpacity={0.875}\n                    transform=\"scale(1.1485)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"-0.5033557046979866s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"-0.5033557046979866s\"\n                    />\n                </circle>\n            </g>\n            <g transform=\"rotate(90 -17.5 67.5)\" color=\"currentColor\">\n                <circle\n                    r={6}\n                    fillOpacity={0.75}\n                    transform=\"scale(1.211)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"-0.41946308724832215s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"-0.41946308724832215s\"\n                    />\n                </circle>\n            </g>\n            <g transform=\"rotate(135 -2.855 42.604)\" color=\"currentColor\">\n                <circle\n                    r={6}\n                    fillOpacity={0.625}\n                    transform=\"scale(1.2735)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"-0.33557046979865773s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"-0.33557046979865773s\"\n                    />\n                </circle>\n            </g>\n            <g transform=\"rotate(180 7.5 25)\" color=\"currentColor\">\n                <circle\n                    r={6}\n                    fillOpacity={0.5}\n                    transform=\"scale(1.336)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"-0.2516778523489933s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"-0.2516778523489933s\"\n                    />\n                </circle>\n            </g>\n            <g transform=\"rotate(-135 17.855 7.396)\" color=\"currentColor\">\n                <circle\n                    r={6}\n                    fillOpacity={0.375}\n                    transform=\"scale(1.3985)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"-0.16778523489932887s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"-0.16778523489932887s\"\n                    />\n                </circle>\n            </g>\n            <g transform=\"rotate(-90 32.5 -17.5)\" color=\"currentColor\">\n                <circle\n                    r={6}\n                    fillOpacity={0.25}\n                    transform=\"scale(1.461)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"-0.08389261744966443s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"-0.08389261744966443s\"\n                    />\n                </circle>\n            </g>\n            <g transform=\"rotate(-45 67.855 -77.604)\" color=\"currentColor\">\n                <circle\n                    r={6}\n                    fillOpacity={0.125}\n                    transform=\"scale(1.0235)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"0s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"0s\"\n                    />\n                </circle>\n            </g>\n        </svg>\n    );\n}\n\nexport default Loading;\n","import React, { FunctionComponentElement, ReactElement, useState } from 'react';\nimport classnames from 'classnames';\n// import { IconEye } from '@workec/ec-icon';\nimport styles from './index.less';\nimport FlexContainer from '../FlexContainer';\nimport FlexItem from '../FlexItem';\nimport Button from '../Button';\nimport Text from '../Text';\nimport Code from '../Code';\n\nexport interface Props{\n    title:string,\n    demo:ReactElement,\n    codes:{name:string, type:'ts'|'less'|'tsx', code:string}[],\n}\n\nconst Demo = (props:Props):FunctionComponentElement<Props> => {\n    const { demo, codes, title } = props;\n    const [showIndex, setShowIndex] = useState(-1);\n    return (\n        <section>\n            <Text level=\"h2\" className={styles.title}>{title}</Text>\n            <div className={styles.demo}>\n                {demo}\n            </div>\n            <FlexContainer flex=\"horizontal-center\" className={styles.demoAction}>\n                <FlexItem grow />\n                <>\n                    {\n                        codes.map((item, index) => (\n                            <Button\n                                key={item.name}\n                                type=\"link\"\n                                onClick={() => {\n                                    if (showIndex === index) {\n                                        setShowIndex(-1);\n                                    } else {\n                                        setShowIndex(index);\n                                    }\n                                }}\n                                // prefix={<IconEye className={styles.icon} />}\n                                className={styles.action}\n                            >\n                                {showIndex === index ? '收起' : '查看'}\n                                {item.name}\n                            </Button>\n                        ))\n                    }\n                </>\n            </FlexContainer>\n            {codes[showIndex] ? <Code className={styles.code} code={codes[showIndex].code} type={codes[showIndex].type} /> : null}\n        </section>\n    );\n};\n\nexport default Demo;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"index_h1_5d1c5\",\"h2\":\"index_h2_f255e\",\"h3\":\"index_h3_01320\",\"main\":\"index_main_9946c\",\"text\":\"index_text_a4c9a\",\"tips\":\"index_tips_1914d\",\"ellipsis\":\"index_ellipsis_efe41\",\"pre\":\"index_pre_9f3f6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"index_flex_85f39\",\"vCenter\":\"index_vCenter_4c0b4\",\"hCenter\":\"index_hCenter_53135\",\"vFull\":\"index_vFull_c5b48\",\"hFull\":\"index_hFull_82c3d\",\"center\":\"index_center_92806\",\"hWarp\":\"index_hWarp_9b27e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll\":\"index_scroll_5c72f\",\"item\":\"index_item_11a2d\",\"grow\":\"index_grow_dd20f\"};","import React, { FunctionComponentElement, useMemo } from 'react';\nimport classnames from 'classnames';\n// import * as Prism from 'prismjs';\n// import 'prismjs/components/prism-typescript';\n// import 'prismjs/components/prism-less';\n// import 'prismjs/components/prism-jsx';\n// import 'prismjs/components/prism-tsx';\n// import 'prismjs/components/prism-powershell';\n// import 'prismjs/themes/prism.css';\n// import 'prismjs/themes/prism-tomorrow.css';\nimport styles from './index.less';\n\nexport interface Props {\n    code: string,\n    type: 'ts' | 'powershell' | 'less' | 'tsx'\n    className?: string,\n}\n\n\nconst Code = (props: Props): FunctionComponentElement<Props> => {\n    const { code, className, type = 'less' } = props;\n\n    return (\n        <pre className={classnames(className, styles.code, {\n            'language-typescript': type === 'ts' || type === 'tsx',\n            'language-less': type === 'less',\n            'language-powershell': type === 'powershell',\n        })}\n        >\n            <code\n                className={classnames({\n                    'language-typescript': type === 'ts' || type === 'tsx',\n                    'language-less': type === 'less',\n                    'language-powershell': type === 'powershell',\n                })}\n            // dangerouslySetInnerHTML={{ __html: code }}\n            >\n                {code}\n\n            </code>\n        </pre>\n    );\n};\n\nexport default Code;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"index_code_f44a7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"demoAction\":\"index_demoAction_c986c\",\"action\":\"index_action_a91d7\",\"demo\":\"index_demo_35819\",\"title\":\"index_title_705a2\",\"icon\":\"index_icon_03ac6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"index_button_73f27\",\"content\":\"index_content_ab8ed\",\"loading\":\"index_loading_1462d\",\"spin\":\"index_spin_4b9b9\",\"textContent\":\"index_textContent_4433e\",\"block\":\"index_block_c1451\",\"prefix\":\"index_prefix_681a6\",\"suffix\":\"index_suffix_427e0\",\"s\":\"index_s_133f2\",\"m\":\"index_m_c2d86\",\"l\":\"index_l_8d9a0\",\"xl\":\"index_xl_3be91\",\"contained\":\"index_contained_af634\",\"primary\":\"index_primary_4e560\",\"danger\":\"index_danger_2a66b\",\"solid\":\"index_solid_0c27f\",\"dashed\":\"index_dashed_2b111\",\"link\":\"index_link_b46a0\",\"text\":\"index_text_6208b\"};","import Text from \"component/Text\";\r\nimport styles from \"./index.less\";\r\nimport FlexContainer from \"component/FlexContainer\";\r\nimport FlexItem from \"component/FlexItem\";\r\n\r\nconst PropsTable = (props: any) => {\r\n\tconst { title, desc, list } = props;\r\n\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<Text level=\"h2\" className={styles.header}>\r\n\t\t\t\t{title}\r\n\t\t\t</Text>\r\n\t\t\t<Text>{desc}</Text>\r\n\t\t\t<FlexContainer flex=\"horizontal-full\" className={styles.tableHead}>\r\n\t\t\t\t<FlexItem basis=\"20%\">\r\n\t\t\t\t\t<Text className={styles.text}>参数</Text>\r\n\t\t\t\t</FlexItem>\r\n\t\t\t\t<FlexItem basis=\"35%\">\r\n\t\t\t\t\t<Text className={styles.text}>说明</Text>\r\n\t\t\t\t</FlexItem>\r\n\t\t\t\t<FlexItem basis=\"30%\">\r\n\t\t\t\t\t<Text className={styles.text}>类型</Text>\r\n\t\t\t\t</FlexItem>\r\n\t\t\t\t<FlexItem basis=\"15%\">\r\n\t\t\t\t\t<Text className={styles.text}>默认值</Text>\r\n\t\t\t\t</FlexItem>\r\n\t\t\t</FlexContainer>\r\n\t\t\t{list.map((item: any) => (\r\n\t\t\t\t<FlexContainer flex=\"horizontal-full\" key={item.name} className={styles.rowContainer}>\r\n\t\t\t\t\t<FlexItem basis=\"20%\" className={styles.rowCenter}>\r\n\t\t\t\t\t\t<Text className={styles.row}>{item.name}</Text>\r\n\t\t\t\t\t</FlexItem>\r\n                    <FlexItem basis=\"35%\" className={styles.rowCenter}>\r\n\t\t\t\t\t\t<Text className={styles.row}>{item.desc}</Text>\r\n\t\t\t\t\t</FlexItem>\r\n                    <FlexItem basis=\"30%\" className={styles.rowCenter}>\r\n\t\t\t\t\t\t<Text className={styles.row}>{\r\n                        Array.isArray(item.type) ? item.type.map((sub:any)=> <span key={sub} className={styles.cicleItem}>{sub}</span>): item.type\r\n    \r\n                    }</Text>\r\n\t\t\t\t\t</FlexItem>\r\n                    <FlexItem basis=\"15%\" className={styles.rowCenter}>\r\n\t\t\t\t\t\t<Text className={styles.row}>{item.defValue}</Text>\r\n\t\t\t\t\t</FlexItem>\r\n\r\n\t\t\t\t</FlexContainer>\r\n\t\t\t))}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default PropsTable;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"index_header_aced0\",\"tableHead\":\"index_tableHead_9679a\",\"text\":\"index_text_e2dd5\",\"row\":\"index_row_d945c\",\"rowContainer\":\"index_rowContainer_a6d06\",\"rowCenter\":\"index_rowCenter_8671e\",\"cicleItem\":\"index_cicleItem_2988e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"index_cell_5a911\",\"autoSize\":\"index_autoSize_b596b\",\"noSelect\":\"index_noSelect_82102\",\"header\":\"index_header_d7f34\",\"headerCell\":\"index_headerCell_df282\",\"cellStyle\":\"index_cellStyle_7bac8\",\"hover\":\"index_hover_75df6\",\"row\":\"index_row_99abb\",\"contentGrid\":\"index_contentGrid_26275\",\"loadMore\":\"index_loadMore_a96d7\",\"loadMoreLoading\":\"index_loadMoreLoading_1ad11\",\"helpClass\":\"index_helpClass_a5128\",\"headerTable\":\"index_headerTable_6d1ed\",\"line\":\"index_line_2ceea\",\"rightHeaderTable\":\"index_rightHeaderTable_526f2\",\"rightLine\":\"index_rightLine_545f6\",\"border\":\"index_border_8d8b0\",\"startLine\":\"index_startLine_f59de\",\"dragLine\":\"index_dragLine_9845a\"};"],"sourceRoot":""}