{"version":3,"sources":["../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"names":["_typeof","obj","Symbol","iterator","module","exports","__esModule","constructor","prototype","_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","arrayLikeToArray","Array","isArray","iter","from","TypeError","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_i","_s","_e","_arr","_n","_d","call","next","done","push","value","err","instance","Constructor","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","assertThisInitialized","self","ReferenceError","_getPrototypeOf","getPrototypeOf","subClass","superClass","create","_extends","assign","arguments","hasOwnProperty","apply","this","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createDetectElementResize","nonce","hostWindow","_window","attachEvent","window","global","document","requestFrame","raf","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","cancelFrame","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","id","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","width","offsetWidth","height","offsetHeight","scrollListener","e","className","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","forEach","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","createElement","undefined","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","position","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","removeChild","len","arr2","minLen","n","toString","slice","name","test","componentWillMount","state","getDerivedStateFromProps","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","toVal","mix","k","y","str","tmp","x","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","allInitialized","every","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","defaultCellRangeRenderer","cellCache","cellRenderer","columnSizeAndPositionManager","columnStartIndex","columnStopIndex","deferredMeasurementCache","horizontalOffsetAdjustment","isScrolling","isScrollingOptOut","parent","rowSizeAndPositionManager","rowStartIndex","rowStopIndex","styleCache","verticalOffsetAdjustment","visibleColumnIndices","visibleRowIndices","renderedCells","areOffsetsAdjusted","canCacheStyle","rowIndex","rowDatum","columnIndex","columnDatum","isVisible","has","left","top","cellRendererParams","renderedCell","win","scrollbarSize","recalc","canUseDOM","scrollDiv","overflow","body","clientWidth","_class","_temp","request","oRequestAnimationFrame","msRequestAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","_assertThisInitialized","_disablePointerEventsTimeoutId","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","_renderedColumnStartIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","_renderedRowStartIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","_ref$rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRangeRenderer","overscanColumnCount","overscanIndicesGetter","overscanRowCount","getOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","hasFixedWidth","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","IntervalTree","root","result","insert","weight","bounds","remove","queryPoint","queryInterval","tproto","get","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","minWidth","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"mappings":"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","file":"static/js/1.01d044a5.chunk.js","sourcesContent":["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"sourceRoot":""}