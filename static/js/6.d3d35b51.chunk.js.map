{"version":3,"sources":["webpack:///./src/views/TreeView/TreeCheckboxView/index.less?65bd","webpack:///./src/views/TreeView/TreeSingleView/index.less?fc75","webpack:///./src/views/TreeView/TreeBasicView/index.less?5666","webpack:///./src/views/TreeView/TreeLoadView/index.less?77af","views/TreeView/TreeCheckboxView/index.tsx","views/TreeView/TreeSingleView/index.tsx","views/TreeView/TreeBasicView/index.tsx","views/TreeView/TreeLoadView/index.tsx","views/TreeView/index.tsx","webpack:///./src/views/TreeView/TreeBasicView/index.tsx?d9df","views/TreeView/TreeBasicView/index.less","webpack:///./src/views/TreeView/TreeSingleView/index.tsx?743f","views/TreeView/TreeSingleView/index.less","webpack:///./src/views/TreeView/TreeCheckboxView/index.tsx?cd75","views/TreeView/TreeCheckboxView/index.less","webpack:///./src/views/TreeView/TreeLoadView/index.tsx?609f","views/TreeView/TreeLoadView/index.less","component/Text/index.tsx","component/FlexContainer/index.tsx","component/FlexItem/index.tsx","component/Button/index.tsx","component/Loading/index.tsx","component/Demo/index.tsx","component/Text/index.less","component/FlexContainer/index.less","component/FlexItem/index.less","component/Code/index.tsx","component/Code/index.less","component/Demo/index.less","component/Button/index.less","component/PropsTable/index.tsx","component/PropsTable/index.less","component/CheckBox/CHeckIcon.tsx","component/CheckBox/index.tsx","component/CheckBox/index.less","component/Icon/Fold.tsx","component/Icon/Start.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","component/Icon/Left.tsx","component/Tree/index.tsx","component/List/index.less","component/List/Loading.tsx","component/List/index.tsx","component/Radio/index.tsx","component/Radio/index.less","component/Tree/index.less"],"names":["module","exports","data","id","array","undefined","options","key","content","className","styles","radio","TreeCheckboxView","useState","checkedItems","setCheckedItems","setKey","Radio","selectedKey","onSelect","container","row","Tree","isMulti","type","nodeProps","item","children","isChecked","some","i","renderNode","value","icon","Fold","folder","star","onCheck","map","TreeSingleView","TreeBasicView","getData","mockData","TreeLoadView","loadedKeys","setLoadedKeys","setData","isLoaded","includes","onLoad","setTimeout","node","cb","task","length","pop","concat","traveData","n","old","TreeView","Text","level","style","margin","Demo","title","demo","codes","name","code","PropsTable","desc","list","defValue","join","props","ellipsis","pre","classnames","h1","h2","h3","main","text","tips","FlexContainer","ref","flex","onClick","vCenter","hCenter","center","vFull","hFull","hWarp","forwardRef","FlexItem","grow","basis","scroll","onScroll","calculatedStyle","useMemo","result","flexBasis","Button","size","danger","primary","loading","prefix","suffix","block","disabled","button","contained","solid","dashed","link","s","m","l","xl","spin","Loading","xmlns","background","width","height","viewBox","preserveAspectRatio","display","transform","color","r","attributeName","begin","values","keyTimes","dur","repeatCount","fillOpacity","showIndex","setShowIndex","demoAction","index","action","Code","header","tableHead","rowContainer","rowCenter","Array","isArray","sub","cicleItem","CheckIcon","d","CheckBox","checkedKeys","onChange","circle","checked","indeterminate","handleChange","filter","classNames","checkboxcontainer","checkContainer","banContainer","disableContainer","horizontal","checkboxInput","sequre","svg","Star","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Left","travel","child","next","travelParent","parent","getParentSelect","fn","getLeafSelect","canExpand","lastRootNodeRef","useRef","setList","rootNode","createNode","nodeData","lastNode","isDisabled","isExpand","isIndeterminate","cNode","lastCNode","checkedChildCount","thisNode","lastCurrent","current","root","createList","push","useEffect","List","render","placeholder","toggleExpand","e","stopPropagation","toggleCheck","checkedNode","allParent","res","handleCheck","paddingLeft","iconContainer","expandIcon","rotate","checkbox","listContainer","empty","isLoadMore","handleScrollMore","renderRow","itemProps","handleScroll","arg","clientHeight","scrollHeight","scrollTop","rowCount","rowHeight","rowRenderer","vertical","active","disable","inputRadio","defaultChecked"],"mappings":"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","file":"static/js/6.d3d35b51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"index_star_75a4f\",\"container\":\"index_container_fd55e\",\"row\":\"index_row_a70bb\",\"radio\":\"index_radio_aff7e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"index_star_e4168\",\"container\":\"index_container_d9876\",\"row\":\"index_row_1e0de\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"index_star_23549\",\"container\":\"index_container_fd1bc\",\"row\":\"index_row_fd5d8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"index_star_8ad96\",\"container\":\"index_container_bcddd\",\"row\":\"index_row_b225d\",\"radio\":\"index_radio_94502\"};","import Fold from \"component/Icon/Fold\";\nimport Star from \"component/Icon/Start\";\nimport Radio from \"component/Radio\";\nimport Tree from \"component/Tree\"\nimport { ReactChild, ReactFragment, ReactPortal, useState } from \"react\";\nimport styles from './index.less'\nconst data = [\n    {\n        id: '1-0',\n        array: [\n            {\n                id: '1-0-1',\n                array: [\n                    {\n                        id: '1-0-1-1',\n                        array: undefined,\n                    },\n                ],\n            },\n            {\n                id: '1-0-2',\n                array: undefined,\n            },\n            {\n                id: '1-0-3',\n                array: undefined,\n            },\n        ],\n\n    },\n\n    {\n        id: '1-1',\n        array: [\n            {\n                id: '1-1-1',\n                array: [\n                    {\n                        id: '1-1-1-1',\n                        array: undefined,\n                    },\n                ],\n            },\n            {\n                id: '1-1-2',\n                array: undefined,\n            },\n            {\n                id: '1-1-3',\n                array: undefined,\n            },\n        ],\n\n    },\n\n    {\n        id: '1-2',\n        array: [\n            {\n                id: '1-2-1',\n                array: [\n                    {\n                        id: '1-2-1-1',\n                        array: undefined,\n                    },\n                ],\n            },\n            {\n                id: '1-2-2',\n                array: undefined,\n            },\n            {\n                id: '1-2-3',\n                array: undefined,\n            },\n        ],\n\n    },\n];\n\nconst options = [\n    { key: 'leaf', content: '只选择叶子节点', className: styles.radio },\n    { key: 'parent', content: '合并选项', className: styles.radio },\n    \n]\nconst TreeCheckboxView = () => {\n    const [checkedItems, setCheckedItems] = useState([]);\n    const [key,setKey] = useState('leaf');\n    \n    const nodeProps = ((item: any) => ({\n        key: item.id,\n        children: item.array,\n        isChecked: checkedItems.some((i: any) => i.id === item.id),\n    }));\n    return (\n        <div>\n            <div className={styles.radio}>\n                <Radio\n                    options={options}\n                    selectedKey={key}\n                    onSelect={(selectedKey:string) => {\n                        setKey(selectedKey)\n                        setCheckedItems([])\n                    }}\n                />\n            </div>\n            <div className={styles.container}>\n                <div className={styles.row}>\n                    <Tree\n                        data={data}\n                        isMulti={true}\n                        type={key}\n                        nodeProps={nodeProps}\n                        renderNode={(item: { value: { id: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; array: any; }; }) => ({\n                            content: <span className={styles.content}>{item.value.id}</span>,\n                            icon: item.value.array ? <Fold className={styles.folder} /> : <Star className={styles.star} />,\n                        })}\n                        onCheck={setCheckedItems}\n                    />\n                </div>\n                <div className={styles.row}>\n                    <p>已选节点：</p>\n                    {checkedItems.map((item: any) => <p key={item.id}>{item.id}</p>)}\n                </div>\n\n            </div>\n        </div>\n    )\n\n\n}\n\nexport default TreeCheckboxView;","import Fold from \"component/Icon/Fold\";\nimport Star from \"component/Icon/Start\";\nimport Tree from \"component/Tree\"\nimport { ReactChild, ReactFragment, ReactPortal, useState } from \"react\";\nimport styles from './index.less'\nconst data = [\n    {\n        id: '1-0',\n        array: [\n            {\n                id: '1-0-1',\n                array: [\n                    {\n                        id: '1-0-1-1',\n                        array: undefined,\n                    },\n                ],\n            },\n            {\n                id: '1-0-2',\n                array: undefined,\n            },\n            {\n                id: '1-0-3',\n                array: undefined,\n            },\n        ],\n\n    },\n\n    {\n        id: '1-1',\n        array: [\n            {\n                id: '1-1-1',\n                array: [\n                    {\n                        id: '1-1-1-1',\n                        array: undefined,\n                    },\n                ],\n            },\n            {\n                id: '1-1-2',\n                array: undefined,\n            },\n            {\n                id: '1-1-3',\n                array: undefined,\n            },\n        ],\n\n    },\n\n    {\n        id: '1-2',\n        array: [\n            {\n                id: '1-2-1',\n                array: [\n                    {\n                        id: '1-2-1-1',\n                        array: undefined,\n                    },\n                ],\n            },\n            {\n                id: '1-2-2',\n                array: undefined,\n            },\n            {\n                id: '1-2-3',\n                array: undefined,\n            },\n        ],\n\n    },\n];\nconst TreeSingleView = () => {\n    const [checkedItems, setCheckedItems] = useState([]);\n    const nodeProps = ((item: any) => ({\n        key: item.id,\n        children: item.array,\n        isChecked: checkedItems.some((i: any) => i.id === item.id),\n    }));\n    // console.log(checkedItems,'checkedItems');\n    \n    return (\n        <div className={styles.container}>\n            <div className={styles.row}>\n                <Tree\n                    data={data}\n                    isMulti={false}\n                    nodeProps={nodeProps}\n                    renderNode={(item: { value: { id: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; array: any; }; }) => ({\n                        content: <span className={styles.content}>{item.value.id}</span>,\n                        icon: item.value.array ? <Fold className={styles.folder} /> : <Star className={styles.star} />,\n                    })}\n                    onCheck={setCheckedItems}\n                />\n            </div>\n            <div className={styles.row}>\n                <p>已选节点：</p>\n                {checkedItems.map((item: any) => <p key={item.id}>{item.id}</p>)}\n            </div>\n\n        </div>\n    )\n\n\n}\n\nexport default TreeSingleView;","import Fold from \"component/Icon/Fold\";\nimport Star from \"component/Icon/Start\";\nimport Tree from \"component/Tree\"\nimport { ReactChild, ReactFragment, ReactPortal } from \"react\";\nimport styles from './index.less'\nconst data = [\n    {\n        id: '1-0',\n        array: [\n            {\n                id: '1-0-1',\n                array: [\n                    {\n                        id: '1-0-1-1',\n                        array: undefined,\n                    },\n                ],\n            },\n            {\n                id: '1-0-2',\n                array: undefined,\n            },\n            {\n                id: '1-0-3',\n                array: undefined,\n            },\n        ],\n\n    },\n\n    {\n        id: '1-1',\n        array: [\n            {\n                id: '1-1-1',\n                array: [\n                    {\n                        id: '1-1-1-1',\n                        array: undefined,\n                    },\n                ],\n            },\n            {\n                id: '1-1-2',\n                array: undefined,\n            },\n            {\n                id: '1-1-3',\n                array: undefined,\n            },\n        ],\n\n    },\n\n    {\n        id: '1-2',\n        array: [\n            {\n                id: '1-2-1',\n                array: [\n                    {\n                        id: '1-2-1-1',\n                        array: undefined,\n                    },\n                ],\n            },\n            {\n                id: '1-2-2',\n                array: undefined,\n            },\n            {\n                id: '1-2-3',\n                array: undefined,\n            },\n        ],\n\n    },\n];\nconst TreeBasicView = () => {\n\n    const nodeProps = ((item: any) => ({\n        key: item.id,\n        children: item.array,\n        // isChecked: [].some((i: any) => i.id === item.id),\n    }));\n    return (\n        <div className={styles.container}>\n            <div className={styles.row}>\n            <Tree\n                data={data}\n                isMulti={true}\n                nodeProps={nodeProps}\n                renderNode={(item: { value: { id: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; array: any; }; }) => ({\n                    content: <span className={styles.content}>{item.value.id}</span>,\n                    icon: item.value.array ? <Fold className={styles.folder} /> : <Star className={styles.star} />,\n                })}\n            />\n            </div>\n            <div className={styles.row}>\n            <Tree\n                data={data}\n                isMulti={false}\n                nodeProps={nodeProps}\n                renderNode={(item: { value: { id: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; array: any; }; }) => ({\n                    content: <span className={styles.content}>{item.value.id}</span>,\n                })}\n            />\n            </div>\n            \n        </div>\n    )\n\n\n}\n\nexport default TreeBasicView;","import Fold from \"component/Icon/Fold\";\nimport Star from \"component/Icon/Start\";\nimport Radio from \"component/Radio\";\nimport Tree from \"component/Tree\"\nimport { isArray } from \"lodash\";\nimport { ReactChild, ReactFragment, ReactPortal, useState } from \"react\";\nimport styles from './index.less'\n\nconst getData = {\n    '1-0': [\n        {\n            id: '1-0-1',\n            array: [\n                {\n                    id: '1-0-1-1',\n                    array: undefined,\n                },\n            ],\n        },\n        {\n            id: '1-0-2',\n            array: undefined,\n        },\n        {\n            id: '1-0-3',\n            array: undefined,\n        },\n    ],\n    '1-1': [\n        {\n            id: '1-1-1',\n            array: [\n                {\n                    id: '1-1-1-1',\n                    array: undefined,\n                },\n            ],\n        },\n        {\n            id: '1-1-2',\n            array: undefined,\n        },\n        {\n            id: '1-1-3',\n            array: undefined,\n        },\n    ],\n    '1-2': [\n        {\n            id: '1-2-1',\n            array: [\n                {\n                    id: '1-2-1-1',\n                    array: undefined,\n                },\n            ],\n        },\n        {\n            id: '1-2-2',\n            array: undefined,\n        },\n        {\n            id: '1-2-3',\n            array: undefined,\n        },\n    ],\n} as any;\nconst mockData = [\n    {\n        id: '1-0',\n        array: []\n    },\n\n    {\n        id: '1-1',\n        array: []\n\n    },\n\n    {\n        id: '1-2',\n        array: []\n\n    },\n];\n\nconst traveData = (node: any, cb: any) => {\n    if (node) {\n        let task = [...node];\n        while (task.length) {\n            const item = task.pop();\n            if (item) {\n                cb(item);\n                if (item.array && item.array.length) {\n                    task = task.concat([...item.array]);\n                }\n            }\n        }\n\n    }\n\n}\nconst TreeLoadView = () => {\n    const [checkedItems, setCheckedItems] = useState([]);\n    const [loadedKeys, setLoadedKeys] = useState<string[]>([]);\n    const [data, setData] = useState(mockData)\n    const nodeProps = ((item: any) => ({\n        key: item.id,\n        children: item.array,\n        isChecked: checkedItems.some((i: any) => i.id === item.id),\n        isLoaded: loadedKeys.includes(item.id),\n    }));\n    const onLoad = (item: any) => {\n        setTimeout(() => {\n            traveData(data, (n: any) => {\n                if(n.id === item.id) {\n                    const array = getData[n.id];\n                    if(array) {\n                        n.array = array;\n                    }\n                    setLoadedKeys((old) => old.concat(item.id));\n                }\n               \n            })\n\n            setData([...data]);\n            // setLoadedKeys(item.id)\n        }, 300);\n\n    }\n    return (\n        <div>\n            <div className={styles.container}>\n                <div className={styles.row}>\n                    <Tree\n                        data={data}\n                        isMulti={true}\n                        type='parent'\n                        nodeProps={nodeProps}\n                        renderNode={(item: { value: { id: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; array: any; }; }) => ({\n                            content: <span className={styles.content}>{item.value.id}</span>,\n                            icon: item.value.array ? <Fold className={styles.folder} /> : <Star className={styles.star} />,\n                        })}\n                        onCheck={setCheckedItems}\n                        onLoad={onLoad}\n                    />\n                </div>\n                <div className={styles.row}>\n                    <p>已选节点：</p>\n                    {checkedItems.map((item: any) => <p key={item.id}>{item.id}</p>)}\n                </div>\n\n            </div>\n        </div>\n    )\n\n\n}\n\nexport default TreeLoadView;","/* eslint-disable import/no-webpack-loader-syntax */\nimport classNames from \"classnames\";\nimport Demo from \"component/Demo\";\nimport Text from \"component/Text\";\nimport TreeCheckboxView from \"./TreeCheckboxView\";\nimport TreeCheckboxViewTsx from \"!!raw-loader!./TreeCheckboxView/index.tsx\";\nimport TreeCheckboxViewLess from \"!!raw-loader!./TreeCheckboxView/index.less\";\nimport TreeSingleView from \"./TreeSingleView\";\nimport TreeSingleViewTsx from \"!!raw-loader!./TreeSingleView/index.tsx\";\nimport TreeSingleViewLess from \"!!raw-loader!./TreeSingleView/index.less\";\nimport TreeBasicView from \"./TreeBasicView\";\nimport TreeBasicViewTsx from \"!!raw-loader!./TreeBasicView/index.tsx\";\nimport TreeBasicViewLess from \"!!raw-loader!./TreeBasicView/index.less\";\nimport TreeLoadView from \"./TreeLoadView\";\nimport TreeLoadViewTsx from \"!!raw-loader!./TreeLoadView/index.tsx\";\nimport TreeLoadViewLess from \"!!raw-loader!./TreeLoadView/index.less\";\nimport PropsTable from \"component/PropsTable\";\nconst TreeView = () => {\n    return (\n        <div>\n            <Text level=\"h1\">树形控件</Text>\n            <Text style={{ margin: '20px 0px' }}>文件夹、组织架构、生物分类、国家地区等等，世间万物的大多数结构都是树形结构。使用树控件可以完整展现其中的层级关系，并具有展开收起选择等交互功能。\n            </Text>\n            <section>\n                <Demo\n                    title=\"树形控件的基本使用\"\n                    demo={<TreeBasicView />}\n                    codes={\n                        [\n                            {\n                                name: 'index.ts',\n                                type: 'tsx',\n                                code: TreeBasicViewTsx\n                            },\n                            {\n                                name: 'index.less',\n                                type: 'less',\n                                code: TreeBasicViewLess\n                            }\n                        ]\n                    }\n                ></Demo>\n            </section>\n\n            <section>\n                <Demo\n                    title=\"树形控件的单选功能\n                  \"\n                    demo={<TreeSingleView />}\n                    codes={\n                        [\n                            {\n                                name: 'index.tsx',\n                                type: 'tsx',\n                                code: TreeSingleViewTsx\n                            },\n                            {\n                                name: 'index.less',\n                                type: 'less',\n                                code: TreeSingleViewLess\n                            }\n                        ]\n                    }\n                />\n            </section>\n\n            <section>\n                <Demo\n                    title=\"树形控件的多选功能\"\n                    demo={<TreeCheckboxView />}\n                    codes={\n                        [\n                            {\n                                name: 'index.ts',\n                                type: 'tsx',\n                                code: TreeCheckboxViewTsx\n                            },\n                            {\n                                name: 'index.less',\n                                type: 'less',\n                                code: TreeCheckboxViewLess\n                            }\n                        ]\n                    }\n                ></Demo>\n            </section>\n            <section>\n                <Demo\n                    title=\"树形控件的异步加载功能\"\n                    demo={<TreeLoadView />}\n                    codes={[\n\n                        {\n                            name: 'index.ts',\n                            type: 'tsx',\n                            code: TreeLoadViewTsx\n                        },\n                        {\n                            name: 'index.less',\n                            type: 'less',\n                            code: TreeLoadViewLess\n                        }\n\n                    ]}\n                />\n            </section>\n            <section>\n                \n\n            <PropsTable\n            title=\"Tree\"\n            desc=\"树形控件，基于虚拟列表技术\"\n            list={[\n                {\n                    name: 'data',\n                    desc: '必选，数据源，以下属性的泛型T为此数据源项类型',\n                    type: 'T[]',\n                    defValue: '-',\n                },\n                {\n                    name: 'nodeProps',\n                    desc: '必选，提供节点辅助数据,,注意保持引用，以免性能问题',\n                    type: ['(node:T)=>({',\n                        '//节点key用于唯一指定',\n                        'key:string, ',\n                        '//节点的子节点,空数组指此节点有子节点，',\n                        '//undefined 指此节点是叶子节点',\n                        'children?:T[] ,',\n                        '//此节点是否禁用选中，多选模式下使用',\n                        'isDisabled?:boolean, ',\n                        '//此节点的子节点是否已加载完成，',\n                        '//配合异步加载功能使用',\n                        'isLoaded?:boolean,',\n                        '//此节点是否被选中',\n                        'isChecked?:boolean,})',\n                    ].join('\\n'),\n                    defValue: '-',\n                },\n                {\n                    name: 'renderNode',\n                    desc: '必选，自定义渲染节点',\n                    type: ['(node:T)=>({',\n                        '//节点图标',\n                        'icon?:ReactElement',\n                        '//节点内容',\n                        'content:ReactElement,})'].join('\\n'),\n                    defValue: '-',\n                },\n                {\n                    name: 'type',\n                    desc: '可选，节点选择模式，多选功能下可用，parent：选择节点会向上折叠上报，leaf：只选中子节点',\n                    type: [ 'parent', 'leaf'],\n                    defValue: 'leaf',\n                },\n                // {\n                //     name: 'rowHeight',\n                //     desc: '可选，行高',\n                //     type: 'number',\n                //     defValue: '32',\n                // },\n                // {\n                //     name: 'rowClassName',\n                //     desc: '可选，行样式',\n                //     type: 'string',\n                //     defValue: 'undefined',\n                // },\n                // {\n                //     name: 'onRowClick',\n                //     desc: '可选，节点空余位置点击回调，空余位置指展开按钮，选中按钮之外的位置,toggleExpand:切换展开，toggleCheck:切换选中，会调用onCheck',\n                //     type: '(node:T,\\ntoggleExpand:()=>void,\\ntoggleCheck:()=>void)=>void',\n                //     defValue: 'undefined',\n                // },\n                {\n                    name: 'onCheck',\n                    desc: '可选，选中的回调',\n                    type: '(node:T[])=>void',\n                    defValue: 'undefined',\n                },\n                {\n                    name: 'onLoad',\n                    desc: '可选，加载节点数据回调，设置后点击展开时会回调获取数据，与nodeProps中isLoaded，children搭配使用',\n                    type: '(node:T)=>void',\n                    defValue: 'undefined',\n                },\n                // {\n                //     name: 'initialExpandAll',\n                //     desc: '可选，是否展开全部节点，建议设置为常量，变更后会重新展开全部',\n                //     type: 'boolean',\n                //     defValue: 'false',\n                // },\n                {\n                    name: 'isMulti',\n                    desc: '可选，是否多选',\n                    type: 'boolean',\n                    defValue: 'true',\n                },\n                {\n                    name: 'loading',\n                    desc: '可选，是否展示全数据加载loading',\n                    type: 'boolean',\n                    defValue: 'false',\n                }, \n                // {\n                //     name: 'empty',\n                //     desc: '可选，数据为空时的显示',\n                //     type: 'ReactElement',\n                //     defValue: '<Empty />',\n                // },\n                {\n                    name: 'className',\n                    desc: '可选，Tree的样式，需要通过样式设置Tree大小（flex或width）',\n                    type: 'string',\n                    defValue: 'undefined',\n                },\n                // {\n                //     name: 'style',\n                //     desc: '可选，Tree的样式',\n                //     type: 'CSSProperties',\n                //     defValue: 'undefined',\n                // },\n            ]}\n        />\n            </section>\n        </div>\n        // <Tree />\n    )\n\n}\n\nexport default TreeView;","export default \"import Fold from \\\"component/Icon/Fold\\\";\\nimport Star from \\\"component/Icon/Start\\\";\\nimport Tree from \\\"component/Tree\\\"\\nimport { ReactChild, ReactFragment, ReactPortal } from \\\"react\\\";\\nimport styles from './index.less'\\nconst data = [\\n    {\\n        id: '1-0',\\n        array: [\\n            {\\n                id: '1-0-1',\\n                array: [\\n                    {\\n                        id: '1-0-1-1',\\n                        array: undefined,\\n                    },\\n                ],\\n            },\\n            {\\n                id: '1-0-2',\\n                array: undefined,\\n            },\\n            {\\n                id: '1-0-3',\\n                array: undefined,\\n            },\\n        ],\\n\\n    },\\n\\n    {\\n        id: '1-1',\\n        array: [\\n            {\\n                id: '1-1-1',\\n                array: [\\n                    {\\n                        id: '1-1-1-1',\\n                        array: undefined,\\n                    },\\n                ],\\n            },\\n            {\\n                id: '1-1-2',\\n                array: undefined,\\n            },\\n            {\\n                id: '1-1-3',\\n                array: undefined,\\n            },\\n        ],\\n\\n    },\\n\\n    {\\n        id: '1-2',\\n        array: [\\n            {\\n                id: '1-2-1',\\n                array: [\\n                    {\\n                        id: '1-2-1-1',\\n                        array: undefined,\\n                    },\\n                ],\\n            },\\n            {\\n                id: '1-2-2',\\n                array: undefined,\\n            },\\n            {\\n                id: '1-2-3',\\n                array: undefined,\\n            },\\n        ],\\n\\n    },\\n];\\nconst TreeBasicView = () => {\\n\\n    const nodeProps = ((item: any) => ({\\n        key: item.id,\\n        children: item.array,\\n        // isChecked: [].some((i: any) => i.id === item.id),\\n    }));\\n    return (\\n        <div className={styles.container}>\\n            <div className={styles.row}>\\n            <Tree\\n                data={data}\\n                isMulti={true}\\n                nodeProps={nodeProps}\\n                renderNode={(item: { value: { id: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; array: any; }; }) => ({\\n                    content: <span className={styles.content}>{item.value.id}</span>,\\n                    icon: item.value.array ? <Fold className={styles.folder} /> : <Star className={styles.star} />,\\n                })}\\n            />\\n            </div>\\n            <div className={styles.row}>\\n            <Tree\\n                data={data}\\n                isMulti={false}\\n                nodeProps={nodeProps}\\n                renderNode={(item: { value: { id: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; array: any; }; }) => ({\\n                    content: <span className={styles.content}>{item.value.id}</span>,\\n                })}\\n            />\\n            </div>\\n            \\n        </div>\\n    )\\n\\n\\n}\\n\\nexport default TreeBasicView;\";","export default \".star {\\n    fill: #fa6300;\\n    height: 14px;\\n    width: 14px;\\n    margin-right: 4px;\\n}\\n\\n.container {\\n    display: flex;\\n    // width: 500px;\\n}\\n\\n.row {\\n    flex: 1;\\n    padding: 0 20px;\\n    &:first-child {\\n\\n        border-right: 1px solid #ccc;\\n    }\\n}\";","export default \"import Fold from \\\"component/Icon/Fold\\\";\\nimport Star from \\\"component/Icon/Start\\\";\\nimport Tree from \\\"component/Tree\\\"\\nimport { ReactChild, ReactFragment, ReactPortal, useState } from \\\"react\\\";\\nimport styles from './index.less'\\nconst data = [\\n    {\\n        id: '1-0',\\n        array: [\\n            {\\n                id: '1-0-1',\\n                array: [\\n                    {\\n                        id: '1-0-1-1',\\n                        array: undefined,\\n                    },\\n                ],\\n            },\\n            {\\n                id: '1-0-2',\\n                array: undefined,\\n            },\\n            {\\n                id: '1-0-3',\\n                array: undefined,\\n            },\\n        ],\\n\\n    },\\n\\n    {\\n        id: '1-1',\\n        array: [\\n            {\\n                id: '1-1-1',\\n                array: [\\n                    {\\n                        id: '1-1-1-1',\\n                        array: undefined,\\n                    },\\n                ],\\n            },\\n            {\\n                id: '1-1-2',\\n                array: undefined,\\n            },\\n            {\\n                id: '1-1-3',\\n                array: undefined,\\n            },\\n        ],\\n\\n    },\\n\\n    {\\n        id: '1-2',\\n        array: [\\n            {\\n                id: '1-2-1',\\n                array: [\\n                    {\\n                        id: '1-2-1-1',\\n                        array: undefined,\\n                    },\\n                ],\\n            },\\n            {\\n                id: '1-2-2',\\n                array: undefined,\\n            },\\n            {\\n                id: '1-2-3',\\n                array: undefined,\\n            },\\n        ],\\n\\n    },\\n];\\nconst TreeSingleView = () => {\\n    const [checkedItems, setCheckedItems] = useState([]);\\n    const nodeProps = ((item: any) => ({\\n        key: item.id,\\n        children: item.array,\\n        isChecked: checkedItems.some((i: any) => i.id === item.id),\\n    }));\\n    // console.log(checkedItems,'checkedItems');\\n    \\n    return (\\n        <div className={styles.container}>\\n            <div className={styles.row}>\\n                <Tree\\n                    data={data}\\n                    isMulti={false}\\n                    nodeProps={nodeProps}\\n                    renderNode={(item: { value: { id: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; array: any; }; }) => ({\\n                        content: <span className={styles.content}>{item.value.id}</span>,\\n                        icon: item.value.array ? <Fold className={styles.folder} /> : <Star className={styles.star} />,\\n                    })}\\n                    onCheck={setCheckedItems}\\n                />\\n            </div>\\n            <div className={styles.row}>\\n                <p>已选节点：</p>\\n                {checkedItems.map((item: any) => <p key={item.id}>{item.id}</p>)}\\n            </div>\\n\\n        </div>\\n    )\\n\\n\\n}\\n\\nexport default TreeSingleView;\";","export default \".star {\\n    fill: #fa6300;\\n    height: 14px;\\n    width: 14px;\\n    margin-right: 4px;\\n}\\n\\n.container {\\n    display: flex;\\n    // width: 500px;\\n}\\n\\n.row {\\n    flex: 1;\\n    padding: 0 20px;\\n    &:first-child {\\n\\n        border-right: 1px solid #ccc;\\n    }\\n}\";","export default \"import Fold from \\\"component/Icon/Fold\\\";\\nimport Star from \\\"component/Icon/Start\\\";\\nimport Radio from \\\"component/Radio\\\";\\nimport Tree from \\\"component/Tree\\\"\\nimport { ReactChild, ReactFragment, ReactPortal, useState } from \\\"react\\\";\\nimport styles from './index.less'\\nconst data = [\\n    {\\n        id: '1-0',\\n        array: [\\n            {\\n                id: '1-0-1',\\n                array: [\\n                    {\\n                        id: '1-0-1-1',\\n                        array: undefined,\\n                    },\\n                ],\\n            },\\n            {\\n                id: '1-0-2',\\n                array: undefined,\\n            },\\n            {\\n                id: '1-0-3',\\n                array: undefined,\\n            },\\n        ],\\n\\n    },\\n\\n    {\\n        id: '1-1',\\n        array: [\\n            {\\n                id: '1-1-1',\\n                array: [\\n                    {\\n                        id: '1-1-1-1',\\n                        array: undefined,\\n                    },\\n                ],\\n            },\\n            {\\n                id: '1-1-2',\\n                array: undefined,\\n            },\\n            {\\n                id: '1-1-3',\\n                array: undefined,\\n            },\\n        ],\\n\\n    },\\n\\n    {\\n        id: '1-2',\\n        array: [\\n            {\\n                id: '1-2-1',\\n                array: [\\n                    {\\n                        id: '1-2-1-1',\\n                        array: undefined,\\n                    },\\n                ],\\n            },\\n            {\\n                id: '1-2-2',\\n                array: undefined,\\n            },\\n            {\\n                id: '1-2-3',\\n                array: undefined,\\n            },\\n        ],\\n\\n    },\\n];\\n\\nconst options = [\\n    { key: 'leaf', content: '只选择叶子节点', className: styles.radio },\\n    { key: 'parent', content: '合并选项', className: styles.radio },\\n    \\n]\\nconst TreeCheckboxView = () => {\\n    const [checkedItems, setCheckedItems] = useState([]);\\n    const [key,setKey] = useState('leaf');\\n    \\n    const nodeProps = ((item: any) => ({\\n        key: item.id,\\n        children: item.array,\\n        isChecked: checkedItems.some((i: any) => i.id === item.id),\\n    }));\\n    return (\\n        <div>\\n            <div className={styles.radio}>\\n                <Radio\\n                    options={options}\\n                    selectedKey={key}\\n                    onSelect={(selectedKey:string) => {\\n                        setKey(selectedKey)\\n                        setCheckedItems([])\\n                    }}\\n                />\\n            </div>\\n            <div className={styles.container}>\\n                <div className={styles.row}>\\n                    <Tree\\n                        data={data}\\n                        isMulti={true}\\n                        type={key}\\n                        nodeProps={nodeProps}\\n                        renderNode={(item: { value: { id: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; array: any; }; }) => ({\\n                            content: <span className={styles.content}>{item.value.id}</span>,\\n                            icon: item.value.array ? <Fold className={styles.folder} /> : <Star className={styles.star} />,\\n                        })}\\n                        onCheck={setCheckedItems}\\n                    />\\n                </div>\\n                <div className={styles.row}>\\n                    <p>已选节点：</p>\\n                    {checkedItems.map((item: any) => <p key={item.id}>{item.id}</p>)}\\n                </div>\\n\\n            </div>\\n        </div>\\n    )\\n\\n\\n}\\n\\nexport default TreeCheckboxView;\";","export default \".star {\\n    fill: #fa6300;\\n    height: 14px;\\n    width: 14px;\\n    margin-right: 4px;\\n}\\n\\n.container {\\n    display: flex;\\n    // width: 500px;\\n}\\n\\n.row {\\n    flex: 1;\\n    padding: 0 20px;\\n    &:first-child {\\n\\n        border-right: 1px solid #ccc;\\n    }\\n}\\n.radio {\\n    padding: 10px;\\n}\";","export default \"import Fold from \\\"component/Icon/Fold\\\";\\nimport Star from \\\"component/Icon/Start\\\";\\nimport Radio from \\\"component/Radio\\\";\\nimport Tree from \\\"component/Tree\\\"\\nimport { isArray } from \\\"lodash\\\";\\nimport { ReactChild, ReactFragment, ReactPortal, useState } from \\\"react\\\";\\nimport styles from './index.less'\\n\\nconst getData = {\\n    '1-0': [\\n        {\\n            id: '1-0-1',\\n            array: [\\n                {\\n                    id: '1-0-1-1',\\n                    array: undefined,\\n                },\\n            ],\\n        },\\n        {\\n            id: '1-0-2',\\n            array: undefined,\\n        },\\n        {\\n            id: '1-0-3',\\n            array: undefined,\\n        },\\n    ],\\n    '1-1': [\\n        {\\n            id: '1-1-1',\\n            array: [\\n                {\\n                    id: '1-1-1-1',\\n                    array: undefined,\\n                },\\n            ],\\n        },\\n        {\\n            id: '1-1-2',\\n            array: undefined,\\n        },\\n        {\\n            id: '1-1-3',\\n            array: undefined,\\n        },\\n    ],\\n    '1-2': [\\n        {\\n            id: '1-2-1',\\n            array: [\\n                {\\n                    id: '1-2-1-1',\\n                    array: undefined,\\n                },\\n            ],\\n        },\\n        {\\n            id: '1-2-2',\\n            array: undefined,\\n        },\\n        {\\n            id: '1-2-3',\\n            array: undefined,\\n        },\\n    ],\\n} as any;\\nconst mockData = [\\n    {\\n        id: '1-0',\\n        array: []\\n    },\\n\\n    {\\n        id: '1-1',\\n        array: []\\n\\n    },\\n\\n    {\\n        id: '1-2',\\n        array: []\\n\\n    },\\n];\\n\\nconst traveData = (node: any, cb: any) => {\\n    if (node) {\\n        let task = [...node];\\n        while (task.length) {\\n            const item = task.pop();\\n            if (item) {\\n                cb(item);\\n                if (item.array && item.array.length) {\\n                    task = task.concat([...item.array]);\\n                }\\n            }\\n        }\\n\\n    }\\n\\n}\\nconst TreeLoadView = () => {\\n    const [checkedItems, setCheckedItems] = useState([]);\\n    const [loadedKeys, setLoadedKeys] = useState<string[]>([]);\\n    const [data, setData] = useState(mockData)\\n    const nodeProps = ((item: any) => ({\\n        key: item.id,\\n        children: item.array,\\n        isChecked: checkedItems.some((i: any) => i.id === item.id),\\n        isLoaded: loadedKeys.includes(item.id),\\n    }));\\n    const onLoad = (item: any) => {\\n        setTimeout(() => {\\n            traveData(data, (n: any) => {\\n                if(n.id === item.id) {\\n                    const array = getData[n.id];\\n                    if(array) {\\n                        n.array = array;\\n                    }\\n                    setLoadedKeys((old) => old.concat(item.id));\\n                }\\n               \\n            })\\n\\n            setData([...data]);\\n            // setLoadedKeys(item.id)\\n        }, 300);\\n\\n    }\\n    return (\\n        <div>\\n            <div className={styles.container}>\\n                <div className={styles.row}>\\n                    <Tree\\n                        data={data}\\n                        isMulti={true}\\n                        type='parent'\\n                        nodeProps={nodeProps}\\n                        renderNode={(item: { value: { id: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; array: any; }; }) => ({\\n                            content: <span className={styles.content}>{item.value.id}</span>,\\n                            icon: item.value.array ? <Fold className={styles.folder} /> : <Star className={styles.star} />,\\n                        })}\\n                        onCheck={setCheckedItems}\\n                        onLoad={onLoad}\\n                    />\\n                </div>\\n                <div className={styles.row}>\\n                    <p>已选节点：</p>\\n                    {checkedItems.map((item: any) => <p key={item.id}>{item.id}</p>)}\\n                </div>\\n\\n            </div>\\n        </div>\\n    )\\n\\n\\n}\\n\\nexport default TreeLoadView;\";","export default \".star {\\n    fill: #fa6300;\\n    height: 14px;\\n    width: 14px;\\n    margin-right: 4px;\\n}\\n\\n.container {\\n    display: flex;\\n    // width: 500px;\\n}\\n\\n.row {\\n    flex: 1;\\n    padding: 0 20px;\\n    &:first-child {\\n\\n        border-right: 1px solid #ccc;\\n    }\\n}\\n.radio {\\n    padding: 10px;\\n}\";","import React, { FunctionComponentElement } from 'react';\nimport classnames from 'classnames';\nimport styles from './index.less';\n\nexport interface Props{\n    level?:'h1'|'h2'|'h3'|'importent'|'text'|'tips',\n    ellipsis?:boolean,\n    pre?:boolean,\n    className?:string,\n    children?:string,\n    style?:any\n}\n\nconst Text = (props:Props):FunctionComponentElement<Props> => {\n    const {\n        level = 'text', ellipsis, className, children, pre, style\n    } = props;\n\n    return (\n        <div className={classnames(className, {\n            [styles.h1]: level === 'h1',\n            [styles.h2]: level === 'h2',\n            [styles.h3]: level === 'h3',\n            [styles.main]: level === 'importent',\n            [styles.text]: level === 'text',\n            [styles.tips]: level === 'tips',\n            [styles.ellipsis]: ellipsis,\n            [styles.pre]: pre,\n        })}\n        style={style}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default Text;\n","import React, {\n    CSSProperties,\n    ForwardedRef,\n    forwardRef,\n    FunctionComponentElement, ReactElement,\n} from 'react';\nimport classnames from 'classnames';\nimport styles from './index.less';\n\ntype Element=ReactElement|string|undefined|null;\n\nexport interface Props{\n    flex:'vertical-center'|'horizontal-center'|'center'|'vertical-full'|'horizontal-full'|'horizontal-warp',\n    className?:string,\n    children:Element[]|Element,\n    onClick?:React.MouseEventHandler,\n    style?:CSSProperties\n    title?:string,\n}\n\nconst FlexContainer = (props:Props, ref:ForwardedRef<HTMLDivElement>|null):FunctionComponentElement<Props> => {\n    const {\n        flex, children, className, onClick, style, title,\n    } = props;\n\n    return (\n        <div\n            className={classnames({\n                [styles.vCenter]: flex === 'vertical-center',\n                [styles.hCenter]: flex === 'horizontal-center',\n                [styles.center]: flex === 'center',\n                [styles.vFull]: flex === 'vertical-full',\n                [styles.hFull]: flex === 'horizontal-full',\n                [styles.hWarp]: flex === 'horizontal-warp',\n            }, className)}\n            onClick={onClick}\n            ref={ref}\n            style={style}\n            title={title}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default forwardRef(FlexContainer);\n","import React, {\n    CSSProperties,\n    ForwardedRef, forwardRef, FunctionComponentElement, ReactElement, useMemo,\n} from 'react';\nimport classnames from 'classnames';\nimport styles from './index.less';\n\ntype Element=ReactElement|string|undefined|null;\n\nexport interface Props{\n    className?:string,\n    children?:Element[]|Element,\n    grow?:boolean,\n    basis?:number|string,\n    scroll?:boolean,\n    onClick?:React.MouseEventHandler,\n    onScroll?:React.UIEventHandler<HTMLDivElement>,\n    style?:CSSProperties,\n}\n\nconst FlexItem = (props:Props, ref:ForwardedRef<HTMLDivElement>|null):FunctionComponentElement<Props> => {\n    const {\n        children, className, grow = false, basis, onClick, scroll, onScroll, style = {},\n    } = props;\n\n    const calculatedStyle = useMemo(() => {\n        const result:CSSProperties = { ...style };\n        if (basis) {\n            result.flexBasis = basis;\n        }\n        return result;\n    }, [style, basis]);\n\n    return (\n        <div\n            className={classnames(styles.item, {\n                [styles.grow]: grow,\n                [styles.scroll]: scroll,\n            }, className)}\n            style={calculatedStyle}\n            onClick={onClick}\n            onScroll={onScroll}\n            ref={ref}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default forwardRef(FlexItem);\n","import styles from './index.less'\r\nimport classnames from 'classnames';\r\nimport Loading from 'component/Loading';\r\nconst  Button = (props:any) => {\r\n    const {\r\n        type = 'solid',\r\n        size = 'm',\r\n        danger= false,\r\n        children,\r\n        primary,\r\n        loading,\r\n        className,\r\n        prefix,\r\n        suffix, \r\n        block = false,\r\n        onClick,\r\n        style,\r\n        disabled\r\n    } = props;\r\n    return (\r\n        <button  className={classnames(styles.button, {\r\n            [styles.contained]: type === 'contained',\r\n            [styles.solid]: type === 'solid',\r\n            [styles.dashed]: type === 'dashed',\r\n            [styles.link]: type === 'link',\r\n            [styles.text]: type === 'text',\r\n            [styles.primary]: primary,\r\n            [styles.danger]: danger,\r\n            [styles.s]: size === 's',\r\n            [styles.m]: size === 'm',\r\n            [styles.l]: size === 'l',\r\n            [styles.xl]: size === 'xl',\r\n            [styles.block]: block,\r\n            [styles.loading]: loading,\r\n        }, className)}\r\n        onClick={onClick}\r\n        style={style}\r\n        disabled={disabled}\r\n        >\r\n            {loading ? <Loading className={styles.spin}/>: null}\r\n            <span className={styles.content}>\r\n                {prefix} {children}{suffix}\r\n            </span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import * as React from 'react';\n\nfunction Loading(props: React.SVGProps<SVGSVGElement>):React.FunctionComponentElement<React.SVGProps<SVGSVGElement>> {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            style={{\n                background: '0 0',\n            }}\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 100 100\"\n            preserveAspectRatio=\"xMidYMid\"\n            display=\"block\"\n            {...props}\n        >\n            <g transform=\"translate(85 50)\" color=\"currentColor\">\n                <circle r={6} transform=\"scale(1.086)\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"-0.587248322147651s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"-0.587248322147651s\"\n                    />\n                </circle>\n            </g>\n            <g transform=\"rotate(45 -52.855 127.604)\" color=\"currentColor\">\n                <circle\n                    r={6}\n                    fillOpacity={0.875}\n                    transform=\"scale(1.1485)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"-0.5033557046979866s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"-0.5033557046979866s\"\n                    />\n                </circle>\n            </g>\n            <g transform=\"rotate(90 -17.5 67.5)\" color=\"currentColor\">\n                <circle\n                    r={6}\n                    fillOpacity={0.75}\n                    transform=\"scale(1.211)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"-0.41946308724832215s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"-0.41946308724832215s\"\n                    />\n                </circle>\n            </g>\n            <g transform=\"rotate(135 -2.855 42.604)\" color=\"currentColor\">\n                <circle\n                    r={6}\n                    fillOpacity={0.625}\n                    transform=\"scale(1.2735)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"-0.33557046979865773s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"-0.33557046979865773s\"\n                    />\n                </circle>\n            </g>\n            <g transform=\"rotate(180 7.5 25)\" color=\"currentColor\">\n                <circle\n                    r={6}\n                    fillOpacity={0.5}\n                    transform=\"scale(1.336)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"-0.2516778523489933s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"-0.2516778523489933s\"\n                    />\n                </circle>\n            </g>\n            <g transform=\"rotate(-135 17.855 7.396)\" color=\"currentColor\">\n                <circle\n                    r={6}\n                    fillOpacity={0.375}\n                    transform=\"scale(1.3985)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"-0.16778523489932887s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"-0.16778523489932887s\"\n                    />\n                </circle>\n            </g>\n            <g transform=\"rotate(-90 32.5 -17.5)\" color=\"currentColor\">\n                <circle\n                    r={6}\n                    fillOpacity={0.25}\n                    transform=\"scale(1.461)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"-0.08389261744966443s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"-0.08389261744966443s\"\n                    />\n                </circle>\n            </g>\n            <g transform=\"rotate(-45 67.855 -77.604)\" color=\"currentColor\">\n                <circle\n                    r={6}\n                    fillOpacity={0.125}\n                    transform=\"scale(1.0235)\"\n                >\n                    <animateTransform\n                        attributeName=\"transform\"\n                        type=\"scale\"\n                        begin=\"0s\"\n                        values=\"1.5 1.5;1 1\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                    />\n                    <animate\n                        attributeName=\"fill-opacity\"\n                        keyTimes=\"0;1\"\n                        dur=\"0.6711409395973155s\"\n                        repeatCount=\"indefinite\"\n                        values=\"1;0\"\n                        begin=\"0s\"\n                    />\n                </circle>\n            </g>\n        </svg>\n    );\n}\n\nexport default Loading;\n","import React, { FunctionComponentElement, ReactElement, useState } from 'react';\nimport classnames from 'classnames';\n// import { IconEye } from '@workec/ec-icon';\nimport styles from './index.less';\nimport FlexContainer from '../FlexContainer';\nimport FlexItem from '../FlexItem';\nimport Button from '../Button';\nimport Text from '../Text';\nimport Code from '../Code';\n\nexport interface Props{\n    title:string,\n    demo:ReactElement,\n    codes:{name:string, type:'ts'|'less'|'tsx', code:string}[],\n}\n\nconst Demo = (props:Props):FunctionComponentElement<Props> => {\n    const { demo, codes, title } = props;\n    const [showIndex, setShowIndex] = useState(-1);\n    return (\n        <section>\n            <Text level=\"h2\" className={styles.title}>{title}</Text>\n            <div className={styles.demo}>\n                {demo}\n            </div>\n            <FlexContainer flex=\"horizontal-center\" className={styles.demoAction}>\n                <FlexItem grow />\n                <>\n                    {\n                        codes.map((item, index) => (\n                            <Button\n                                key={item.name}\n                                type=\"link\"\n                                onClick={() => {\n                                    if (showIndex === index) {\n                                        setShowIndex(-1);\n                                    } else {\n                                        setShowIndex(index);\n                                    }\n                                }}\n                                // prefix={<IconEye className={styles.icon} />}\n                                className={styles.action}\n                            >\n                                {showIndex === index ? '收起' : '查看'}\n                                {item.name}\n                            </Button>\n                        ))\n                    }\n                </>\n            </FlexContainer>\n            {codes[showIndex] ? <Code className={styles.code} code={codes[showIndex].code} type={codes[showIndex].type} /> : null}\n        </section>\n    );\n};\n\nexport default Demo;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"index_h1_5d1c5\",\"h2\":\"index_h2_f255e\",\"h3\":\"index_h3_01320\",\"main\":\"index_main_9946c\",\"text\":\"index_text_a4c9a\",\"tips\":\"index_tips_1914d\",\"ellipsis\":\"index_ellipsis_efe41\",\"pre\":\"index_pre_9f3f6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"index_flex_85f39\",\"vCenter\":\"index_vCenter_4c0b4\",\"hCenter\":\"index_hCenter_53135\",\"vFull\":\"index_vFull_c5b48\",\"hFull\":\"index_hFull_82c3d\",\"center\":\"index_center_92806\",\"hWarp\":\"index_hWarp_9b27e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll\":\"index_scroll_5c72f\",\"item\":\"index_item_11a2d\",\"grow\":\"index_grow_dd20f\"};","import React, { FunctionComponentElement, useMemo } from 'react';\nimport classnames from 'classnames';\n// import * as Prism from 'prismjs';\n// import 'prismjs/components/prism-typescript';\n// import 'prismjs/components/prism-less';\n// import 'prismjs/components/prism-jsx';\n// import 'prismjs/components/prism-tsx';\n// import 'prismjs/components/prism-powershell';\n// import 'prismjs/themes/prism.css';\n// import 'prismjs/themes/prism-tomorrow.css';\nimport styles from './index.less';\n\nexport interface Props {\n    code: string,\n    type: 'ts' | 'powershell' | 'less' | 'tsx'\n    className?: string,\n}\n\n\nconst Code = (props: Props): FunctionComponentElement<Props> => {\n    const { code, className, type = 'less' } = props;\n\n    return (\n        <pre className={classnames(className, styles.code, {\n            'language-typescript': type === 'ts' || type === 'tsx',\n            'language-less': type === 'less',\n            'language-powershell': type === 'powershell',\n        })}\n        >\n            <code\n                className={classnames({\n                    'language-typescript': type === 'ts' || type === 'tsx',\n                    'language-less': type === 'less',\n                    'language-powershell': type === 'powershell',\n                })}\n            // dangerouslySetInnerHTML={{ __html: code }}\n            >\n                {code}\n\n            </code>\n        </pre>\n    );\n};\n\nexport default Code;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"index_code_f44a7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"demoAction\":\"index_demoAction_c986c\",\"action\":\"index_action_a91d7\",\"demo\":\"index_demo_35819\",\"title\":\"index_title_705a2\",\"icon\":\"index_icon_03ac6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"index_button_73f27\",\"content\":\"index_content_ab8ed\",\"loading\":\"index_loading_1462d\",\"spin\":\"index_spin_4b9b9\",\"textContent\":\"index_textContent_4433e\",\"block\":\"index_block_c1451\",\"prefix\":\"index_prefix_681a6\",\"suffix\":\"index_suffix_427e0\",\"s\":\"index_s_133f2\",\"m\":\"index_m_c2d86\",\"l\":\"index_l_8d9a0\",\"xl\":\"index_xl_3be91\",\"contained\":\"index_contained_af634\",\"primary\":\"index_primary_4e560\",\"danger\":\"index_danger_2a66b\",\"solid\":\"index_solid_0c27f\",\"dashed\":\"index_dashed_2b111\",\"link\":\"index_link_b46a0\",\"text\":\"index_text_6208b\"};","import Text from \"component/Text\";\r\nimport styles from \"./index.less\";\r\nimport FlexContainer from \"component/FlexContainer\";\r\nimport FlexItem from \"component/FlexItem\";\r\n\r\nconst PropsTable = (props: any) => {\r\n\tconst { title, desc, list } = props;\r\n\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<Text level=\"h2\" className={styles.header}>\r\n\t\t\t\t{title}\r\n\t\t\t</Text>\r\n\t\t\t<Text>{desc}</Text>\r\n\t\t\t<FlexContainer flex=\"horizontal-full\" className={styles.tableHead}>\r\n\t\t\t\t<FlexItem basis=\"20%\">\r\n\t\t\t\t\t<Text className={styles.text}>参数</Text>\r\n\t\t\t\t</FlexItem>\r\n\t\t\t\t<FlexItem basis=\"35%\">\r\n\t\t\t\t\t<Text className={styles.text}>说明</Text>\r\n\t\t\t\t</FlexItem>\r\n\t\t\t\t<FlexItem basis=\"30%\">\r\n\t\t\t\t\t<Text className={styles.text}>类型</Text>\r\n\t\t\t\t</FlexItem>\r\n\t\t\t\t<FlexItem basis=\"15%\">\r\n\t\t\t\t\t<Text className={styles.text}>默认值</Text>\r\n\t\t\t\t</FlexItem>\r\n\t\t\t</FlexContainer>\r\n\t\t\t{list.map((item: any) => (\r\n\t\t\t\t<FlexContainer flex=\"horizontal-full\" key={item.name} className={styles.rowContainer}>\r\n\t\t\t\t\t<FlexItem basis=\"20%\" className={styles.rowCenter}>\r\n\t\t\t\t\t\t<Text className={styles.row}>{item.name}</Text>\r\n\t\t\t\t\t</FlexItem>\r\n                    <FlexItem basis=\"35%\" className={styles.rowCenter}>\r\n\t\t\t\t\t\t<Text className={styles.row}>{item.desc}</Text>\r\n\t\t\t\t\t</FlexItem>\r\n                    <FlexItem basis=\"30%\" className={styles.rowCenter}>\r\n\t\t\t\t\t\t<Text className={styles.row}>{\r\n                        Array.isArray(item.type) ? item.type.map((sub:any)=> <span key={sub} className={styles.cicleItem}>{sub}</span>): item.type\r\n    \r\n                    }</Text>\r\n\t\t\t\t\t</FlexItem>\r\n                    <FlexItem basis=\"15%\" className={styles.rowCenter}>\r\n\t\t\t\t\t\t<Text className={styles.row}>{item.defValue}</Text>\r\n\t\t\t\t\t</FlexItem>\r\n\r\n\t\t\t\t</FlexContainer>\r\n\t\t\t))}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default PropsTable;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"index_header_aced0\",\"tableHead\":\"index_tableHead_9679a\",\"text\":\"index_text_e2dd5\",\"row\":\"index_row_d945c\",\"rowContainer\":\"index_rowContainer_a6d06\",\"rowCenter\":\"index_rowCenter_8671e\",\"cicleItem\":\"index_cicleItem_2988e\"};","import React, { FunctionComponentElement, SVGProps } from 'react';\n\nfunction CheckIcon(props: SVGProps<SVGSVGElement>):FunctionComponentElement<SVGProps<SVGSVGElement>> {\n    return (\n        <svg\n            className=\"prefix__icon\"\n            viewBox=\"0 0 1024 1024\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1em\"\n            height=\"1em\"\n            {...props}\n        >\n            <path d=\"M256 426.667L170.667 512l256 256 426.666-426.667L768 256 426.667 597.333z\" />\n        </svg>\n    );\n}\n\nexport default CheckIcon;\n","\n\nimport styles from './index.less';\nimport CheckIcon from './CHeckIcon';\nimport classNames from 'classnames';\nimport { useState } from 'react';\nimport { concat, filter } from 'lodash';\n\n\n// 样式按照一线级别来排列 \n\ninterface Props {\n    options: any,\n    checkedKeys?: any,\n    onChange?: (arr: any) => void;\n    circle?: boolean;\n    style?: any;\n    checked?: boolean,\n    indeterminate?: boolean,\n    disabled?: boolean,\n    onClick?: any,\n}\nconst CheckBox = (props: Props) => {\n    const {\n        options, checkedKeys = [],\n        onChange, circle, style,\n        checked, indeterminate, disabled,\n        onClick,\n    } = props;\n    const handleChange = (isChecked: any, key: any) => {\n        if (onChange === undefined) {\n            return;\n        }\n        if (isChecked) {\n            onChange(filter(checkedKeys, (item) => item !== key));\n        } else {\n            onChange(concat(checkedKeys, key));\n        }\n    }\n    if (!options) {\n        return (<label\n\n            className={classNames(styles.checkboxcontainer, {\n                [styles.checkContainer]: checked,\n                [styles.banContainer]: indeterminate,\n                [styles.disableContainer]: disabled,\n                [styles.circle]: circle,\n                // [styles.horizontal]: true,\n            })} style={style}  onClick={onClick}>\n            {/* <input\n                type=\"checkbox\" name=\"\" id=\"\"\n                className={styles.checkboxInput}\n                disabled={disabled}\n                checked={checked}\n                onChange={() => {\n                    if (onChange) {\n                        onChange(!checked)\n                    }\n\n                }}\n               \n            /> */}\n            <span className={styles.sequre} style={{margin: 0}}>\n                <CheckIcon className={styles.svg} />\n            </span>\n        </label>\n        )\n    }\n    return (\n        <>\n            {\n                options.map((item: any) => (\n                    <label\n                        key={item.key}\n                        className={classNames(styles.checkboxcontainer, {\n                            [styles.checkContainer]: checkedKeys.includes(item.key),\n                            [styles.banContainer]: item.indeterminate,\n                            [styles.disableContainer]: item.disabled,\n                            [styles.circle]: circle,\n                            [styles.horizontal]: true,\n                        })} style={style}>\n                        <input\n                            type=\"checkbox\" name=\"\" id=\"\"\n                            className={styles.checkboxInput}\n                            disabled={item.disabled}\n                            checked={checkedKeys.includes(item.key)}\n                            onChange={() => handleChange(checkedKeys.includes(item.key), item.key)}\n                        />\n                        <span className={styles.sequre}>\n                            <CheckIcon className={styles.svg} />\n                        </span>\n                        <span>{item.content}</span>\n                    </label>\n\n                ))\n            }\n\n\n        </>\n    )\n}\n\nexport default CheckBox;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxcontainer\":\"index_checkboxcontainer_ca769\",\"svg\":\"index_svg_927e8\",\"sequre\":\"index_sequre_ad83a\",\"checkboxInput\":\"index_checkboxInput_cd555\",\"banContainer\":\"index_banContainer_826c8\",\"checkContainer\":\"index_checkContainer_a4dda\",\"disableContainer\":\"index_disableContainer_fee90\",\"circle\":\"index_circle_6e178\",\"horizontal\":\"index_horizontal_d9a55\"};","interface Props {\n    className?: string;\n}\n\nconst Fold = (props: Props) => {\n\n    const { className } = props;\n\n    return (\n        <svg\n            id=\"icon-folder-filled-14\"\n            viewBox=\"0 0 1024 1024\" width=\"12px\" height=\"12px\"\n            className={className}>\n            <path d=\"M0 146.285714h486.4l107.52 166.546286H1024V950.857143H0z\"></path>\n        </svg>\n    )\n}\n\nexport default Fold;","\n\ninterface Props {\n    className?: string;\n}\n\nconst Star = (props: Props) => {\n    const { className } = props;\n    return (\n        <svg\n            id=\"icon-star\" viewBox=\"0 0 1024 1024\"\n            width=\"12px\"\n            height=\"12px\" className={className}>\n            <path d=\"M512 812.8c6.4 0 12.864 1.472 18.752 4.608l297.664 156.48-56.832-331.52a40.32 40.32 0 0 1 11.584-35.648L1024 371.968l-332.8-48.32a40.32 40.32 0 0 1-30.336-22.08L512 0 363.136 301.568a40.32 40.32 0 0 1-30.336 22.08L0 371.968 240.832 606.72a40.32 40.32 0 0 1 11.584 35.712l-56.832 331.456 297.664-156.48A40.32 40.32 0 0 1 512 812.736z\"></path>\n        </svg>\n    )\n}\n\nexport default Star;","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","interface Props {\n    className?: string;\n}\n\n\nconst Left = (props: Props) => {\n\n    const { className } = props;\n\n    return (\n        <svg\n            id=\"icon-right-arrow-filled-6\" viewBox=\"0 0 1024 1024\" width=\"12px\" height=\"12px\" className={className}>\n            <path d=\"M938.666667 512l-853.333334-512v1024z\">\n            </path>\n        </svg>\n    )\n}\n\nexport default Left;","import classNames from \"classnames\";\nimport CheckBox from \"component/CheckBox\";\nimport Fold from \"component/Icon/Fold\";\nimport Left from \"component/Icon/Left\";\nimport Star from \"component/Icon/Start\";\nimport List from \"component/List\";\nimport Loading from \"component/Loading\";\nimport { isArray } from \"lodash\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport styles from './index.less'\n\n\n\nconst travel = (node: any, cb: any) => {\n    cb(node);\n    if (node.child) {\n        travel(node.child, cb)\n    }\n\n    if (node.next) {\n        travel(node.next, cb)\n    }\n}\n\nconst travelParent = (node: { parent: any; }, cb: { (n: any): void; (arg0: any): void; }) => {\n    cb(node);\n    if (node.parent) {\n        travelParent(node.parent, cb)\n    }\n}\n\nconst getParentSelect = (node: any, fn: any) => {\n    if (node.isChecked) {\n        fn(node)\n        node.next && getParentSelect(node.next, fn)\n    } else {\n        node.child && getParentSelect(node.child, fn);\n        node.next && getParentSelect(node.next, fn)\n    }\n}\nconst getLeafSelect = (node: any, fn: any) => {\n    if (!node.canExpand && node.isChecked) {\n        fn(node);\n    }\n    node.child && getLeafSelect(node.child, fn);\n    node.next && getLeafSelect(node.next, fn)\n}\n\nconst Tree = (props: any) => {\n    const { \n        data, isMulti, type = 'leaf', \n        nodeProps, \n        renderNode, \n        onCheck,\n        onLoad,\n        className,\n    } = props;\n    const lastRootNodeRef = useRef();\n    const [list, setList] = useState([])\n    const rootNode = useMemo(() => {\n        if (data.length <= 0) {\n            return undefined;\n        }\n\n        const createNode = (\n            nodeData: any,\n            lastNode?: any,\n            parent?: any,\n            level = 0,\n        ) => {\n            const {\n                children, key, isChecked = false, isDisabled = false,\n                isLoaded = true,\n            } = nodeProps(nodeData) as any;\n\n            //加上🇺每个node 的状态 跟 parent\n            const node = {\n                value: nodeData,\n                key,\n                level,\n                isExpand: false,\n                canExpand: children !== undefined,\n                isLoaded, // 是否已经假装数据\n                isChecked,\n                isDisabled,\n                isIndeterminate: false,\n                loading: false,\n                parent, // 第一次递归是空，第二次就带上上次的节点\n            } as any;\n            // 因为每次 loading 都是false \n            // 不知道为什么 上次 什么逻辑  这里是为了记录 loading， 是否加载完成，未来就是true\n            if (lastNode && lastNode.key === node.key) {\n                node.isExpand = lastNode.isExpand;\n                if (node.isLoaded === false) {\n                    node.loading = lastNode.loading;\n                }\n            }\n\n            // 父级选中  子级选中  如果它的父级北选中 ，则当前孩子选中\n            if (parent && parent.isChecked) {\n                node.isChecked = true;\n            }\n            // 有孩子数据继续创建\n            if (isArray(children) && children.length > 0) {\n\n                let cNode: any;\n                let lastCNode = lastNode ? lastNode.child : undefined;\n                let checkedChildCount = 0; // 子孩子是否全部选中\n                for (let i = 0; i < children.length; i += 1) {\n\n                    // 递归创建子级\n                    const thisNode = createNode(children[i], lastCNode, node, level + 1);\n                    // 最后一个孩子\n\n                    // 第二次呢 回来的时候 cNode 已经被复制  回到第二个的时候 \n                    if (cNode === undefined) {\n                        cNode = thisNode;\n                        node.child = cNode;\n                    } else {\n                        cNode.next = thisNode;\n                        cNode = thisNode;\n                    }\n\n                    lastCNode = lastCNode ? lastCNode.next : undefined;\n                    // 如何当前元素是选中的\n                    if (cNode.isChecked) {\n                        node.isIndeterminate = true;\n                        checkedChildCount += 1;\n                    }\n                    // 向上的都 变\n                    if (node.isIndeterminate && node.parent) {\n                        travelParent(node.parent, (n: any) => {\n                            n.isIndeterminate = true;\n                        })\n                    }\n\n                    // 看子级是否选中\n                    if (checkedChildCount === children.length) {\n                        node.isChecked = true;\n                    } \n\n                    // 不能要\n                    // else {\n                    //     node.isChecked = false\n                    // }\n                }\n            }\n            return node;\n        }\n        let lastCurrent = lastRootNodeRef.current as any;\n\n        let root = createNode(data[0], lastCurrent);\n\n        let current = root;\n        for (let i = 1; i < data.length; i++) {\n            const item = data[i];\n            if (item) {\n                lastCurrent = lastCurrent ? lastCurrent.next : undefined;\n                current.next = createNode(item, lastCurrent)\n                current = current.next;\n            }\n        }\n        lastRootNodeRef.current = root;\n\n        return root;\n    }, [nodeProps])\n\n    const createList = () => {\n        if (rootNode) {\n            const result = [] as any;\n            travel(rootNode, (node: { parent: { isExpand: any; }; }) => {\n                if (!node.parent || (node.parent && node.parent.isExpand)) {\n                    result.push(node)\n                }\n            })\n            setList(result)\n        }\n    }\n\n    useEffect(() => {\n\n        createList()\n    }, [rootNode]);\n\n    const handleCheck = (checkedNode: any, checked: boolean) => {\n        checkedNode.isChecked = checked;\n        if (!isMulti && onCheck) {\n            onCheck([checkedNode.value])\n            return;\n        }\n        // checkedNode.isChecked = checked;\n        if (checkedNode.child) {\n            travel(checkedNode.child, (n: any) => {\n                n.isChecked = checked\n            })\n        }\n        if (checkedNode.parent && !checked) {\n            travelParent(checkedNode.parent, (n: any) => {\n                n.isChecked = false\n            })\n        }\n        // 为真的时候\n        if (checkedNode.parent && checked) {\n            travelParent(checkedNode.parent, (node: any) => {\n                let { child } = node as any;\n                let allParent = true;\n                while (child) {\n                    allParent = child.isChecked && allParent;\n                    if (!child.isChecked) break;\n                    child = child.next;\n                }\n                node.isChecked = allParent\n            })\n        }\n\n        // 选中的元素\n        const res = [] as any;\n        const root = rootNode;\n        if (type === 'leaf') {\n            getLeafSelect(root, (n: any) => {\n                res.push(n)\n            })\n        } else {\n            getParentSelect(root, (n: any) => {\n                res.push(n)\n            })\n        }\n        // console.log(res, 'res', type)\n        if (onCheck) { \n            onCheck([...res].map(item => item.value))\n        }\n\n        createList();\n    }\n\n    const renderItem = (index: number) => {\n\n        const item = list[index] as any;\n        const result = renderNode(item);\n        let icon;\n        if (item.child && result.icon) {\n            icon = (\n                <span className={styles.placeholder}>\n                    {result.icon}\n                </span>\n            );\n        } else if (item.child === undefined) {\n            icon = (\n                <span className={styles.placeholder}>\n                    {result.icon}\n                </span>\n            );\n        }\n        const toggleExpand = (e?: any) => {\n            // 是子节点 \n            if (item.canExpand === false || item.loading) {\n                return;\n            }\n            if (item.isExpand) {\n                item.isExpand = false;\n                if (item.child) {\n                    travel(item.child, (n: any) => {\n                        n.isExpand = false\n                    })\n                }\n            } else {\n                if (onLoad && item.isLoaded === false) { // 加载模式下时启动加载\n                    item.loading = true;\n                    onLoad(item.value);\n                }\n                item.isExpand = true;\n            }\n            if (e) {\n                e.stopPropagation();\n            }\n            createList();\n        }\n        const toggleCheck = (e: { stopPropagation: () => void; }) => {\n            const checked = !item.isChecked;\n            handleCheck(item, checked);\n            e.stopPropagation();\n            return\n        }\n        // if (isMulti) {\n        return (\n            <div\n                className={classNames(styles.row, {\n                    // [styles.active]: isActive\n                })}\n                onClick={(e) => {\n                    if (isMulti) {\n                        toggleExpand()\n                    } else {\n                        toggleCheck(e)\n                    }\n\n                }}\n                style={{ paddingLeft: item.level * 20 }}\n            >\n                {/* {\n                    item.canExpand ? <span\n                        className={styles.iconContainer}\n                        onClick={toggleExpand}\n                    >\n                        <Left className={classNames(styles.expandIcon, {\n                            [styles.rotate]: item.isExpand\n                        })} />\n                        <Fold className={styles.fold} />\n                    </span> : <Star className={styles.star} />\n                } */}\n                {\n                    item.canExpand ? <span\n                        className={styles.iconContainer}\n                        onClick={toggleExpand}\n                    >\n                        {\n                            item.loading ? <Loading className={styles.loading} /> : <Left className={classNames(styles.expandIcon, {\n                                [styles.rotate]: item.isExpand\n                            })} />\n                        }\n                       \n                    </span> : null\n                }\n                {\n                    icon\n                }\n                {result.content}\n                {/* <span> {item.value.id}</span> */}\n                {\n                    isMulti ? <span className={styles.checkbox}>\n                        <CheckBox\n                            options={undefined}\n                            checked={item.isChecked}\n                            // onChange={() => { }}\n                            // indeterminate={item.isIndeterminate}\n                            onClick={toggleCheck}\n                        />\n                    </span> : null\n                }\n\n            </div>\n        )\n\n    }\n    return (\n\n        <List list={list} render={renderItem} className={classNames(styles.listContainer, className) } />\n\n    )\n\n}\n\nexport default Tree;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"index_container_916e2\",\"loading\":\"index_loading_5722f\",\"svg\":\"index_svg_8b5dd\"};","import * as React from 'react';\r\n\r\nfunction Loading(props: React.SVGProps<SVGSVGElement>):React.FunctionComponentElement<React.SVGProps<SVGSVGElement>> {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            style={{\r\n                margin: 'auto',\r\n                background: '0 0',\r\n            }}\r\n            width=\"1em\"\r\n            height=\"1em\"\r\n            viewBox=\"0 0 100 100\"\r\n            preserveAspectRatio=\"xMidYMid\"\r\n            display=\"block\"\r\n            {...props}\r\n        >\r\n            <g transform=\"translate(85 50)\" color=\"currentColor\">\r\n                <circle r={6} transform=\"scale(1.086)\">\r\n                    <animateTransform\r\n                        attributeName=\"transform\"\r\n                        type=\"scale\"\r\n                        begin=\"-0.587248322147651s\"\r\n                        values=\"1.5 1.5;1 1\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                    />\r\n                    <animate\r\n                        attributeName=\"fill-opacity\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                        values=\"1;0\"\r\n                        begin=\"-0.587248322147651s\"\r\n                    />\r\n                </circle>\r\n            </g>\r\n            <g transform=\"rotate(45 -52.855 127.604)\" color=\"currentColor\">\r\n                <circle\r\n                    r={6}\r\n                    fillOpacity={0.875}\r\n                    transform=\"scale(1.1485)\"\r\n                >\r\n                    <animateTransform\r\n                        attributeName=\"transform\"\r\n                        type=\"scale\"\r\n                        begin=\"-0.5033557046979866s\"\r\n                        values=\"1.5 1.5;1 1\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                    />\r\n                    <animate\r\n                        attributeName=\"fill-opacity\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                        values=\"1;0\"\r\n                        begin=\"-0.5033557046979866s\"\r\n                    />\r\n                </circle>\r\n            </g>\r\n            <g transform=\"rotate(90 -17.5 67.5)\" color=\"currentColor\">\r\n                <circle\r\n                    r={6}\r\n                    fillOpacity={0.75}\r\n                    transform=\"scale(1.211)\"\r\n                >\r\n                    <animateTransform\r\n                        attributeName=\"transform\"\r\n                        type=\"scale\"\r\n                        begin=\"-0.41946308724832215s\"\r\n                        values=\"1.5 1.5;1 1\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                    />\r\n                    <animate\r\n                        attributeName=\"fill-opacity\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                        values=\"1;0\"\r\n                        begin=\"-0.41946308724832215s\"\r\n                    />\r\n                </circle>\r\n            </g>\r\n            <g transform=\"rotate(135 -2.855 42.604)\" color=\"currentColor\">\r\n                <circle\r\n                    r={6}\r\n                    fillOpacity={0.625}\r\n                    transform=\"scale(1.2735)\"\r\n                >\r\n                    <animateTransform\r\n                        attributeName=\"transform\"\r\n                        type=\"scale\"\r\n                        begin=\"-0.33557046979865773s\"\r\n                        values=\"1.5 1.5;1 1\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                    />\r\n                    <animate\r\n                        attributeName=\"fill-opacity\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                        values=\"1;0\"\r\n                        begin=\"-0.33557046979865773s\"\r\n                    />\r\n                </circle>\r\n            </g>\r\n            <g transform=\"rotate(180 7.5 25)\" color=\"currentColor\">\r\n                <circle\r\n                    r={6}\r\n                    fillOpacity={0.5}\r\n                    transform=\"scale(1.336)\"\r\n                >\r\n                    <animateTransform\r\n                        attributeName=\"transform\"\r\n                        type=\"scale\"\r\n                        begin=\"-0.2516778523489933s\"\r\n                        values=\"1.5 1.5;1 1\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                    />\r\n                    <animate\r\n                        attributeName=\"fill-opacity\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                        values=\"1;0\"\r\n                        begin=\"-0.2516778523489933s\"\r\n                    />\r\n                </circle>\r\n            </g>\r\n            <g transform=\"rotate(-135 17.855 7.396)\" color=\"currentColor\">\r\n                <circle\r\n                    r={6}\r\n                    fillOpacity={0.375}\r\n                    transform=\"scale(1.3985)\"\r\n                >\r\n                    <animateTransform\r\n                        attributeName=\"transform\"\r\n                        type=\"scale\"\r\n                        begin=\"-0.16778523489932887s\"\r\n                        values=\"1.5 1.5;1 1\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                    />\r\n                    <animate\r\n                        attributeName=\"fill-opacity\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                        values=\"1;0\"\r\n                        begin=\"-0.16778523489932887s\"\r\n                    />\r\n                </circle>\r\n            </g>\r\n            <g transform=\"rotate(-90 32.5 -17.5)\" color=\"currentColor\">\r\n                <circle\r\n                    r={6}\r\n                    fillOpacity={0.25}\r\n                    transform=\"scale(1.461)\"\r\n                >\r\n                    <animateTransform\r\n                        attributeName=\"transform\"\r\n                        type=\"scale\"\r\n                        begin=\"-0.08389261744966443s\"\r\n                        values=\"1.5 1.5;1 1\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                    />\r\n                    <animate\r\n                        attributeName=\"fill-opacity\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                        values=\"1;0\"\r\n                        begin=\"-0.08389261744966443s\"\r\n                    />\r\n                </circle>\r\n            </g>\r\n            <g transform=\"rotate(-45 67.855 -77.604)\" color=\"currentColor\">\r\n                <circle\r\n                    r={6}\r\n                    fillOpacity={0.125}\r\n                    transform=\"scale(1.0235)\"\r\n                >\r\n                    <animateTransform\r\n                        attributeName=\"transform\"\r\n                        type=\"scale\"\r\n                        begin=\"0s\"\r\n                        values=\"1.5 1.5;1 1\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                    />\r\n                    <animate\r\n                        attributeName=\"fill-opacity\"\r\n                        keyTimes=\"0;1\"\r\n                        dur=\"0.6711409395973155s\"\r\n                        repeatCount=\"indefinite\"\r\n                        values=\"1;0\"\r\n                        begin=\"0s\"\r\n                    />\r\n                </circle>\r\n            </g>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","\r\n\r\nimport { AutoSizer, List as VirtualList, ListRowProps } from 'react-virtualized'\r\nimport { useState } from 'react';\r\nimport styles from './index.less'\r\nimport Loading from './Loading';\r\nimport classNames from 'classnames';\r\n\r\nconst List = (props: any) => {\r\n\r\n    const {\r\n        list = [],\r\n        render = () => { }, loading,\r\n        empty = <div className={styles.loading}>暂无数据</div>,\r\n        isLoadMore, handleScrollMore,\r\n        className,\r\n    } = props;\r\n\r\n    const renderRow = (itemProps: ListRowProps) => {\r\n        const { index, style } = itemProps;\r\n\r\n        if (!list[index]) {\r\n            return <div style={style} key={`${index}_footer`} >\r\n                <Loading className={styles.svg} />\r\n            </div>\r\n        }\r\n\r\n        return <div style={style} key={list[index].key} >{render(index)}</div>\r\n\r\n    }\r\n\r\n    const handleScroll = (arg: any) => {\r\n        const { clientHeight, scrollHeight, scrollTop } = arg;\r\n        if (isLoadMore && clientHeight + scrollTop >= scrollHeight) {\r\n            if (handleScrollMore) {\r\n                handleScrollMore()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const renderContent = () => {\r\n        if (loading) {\r\n            return <div className={styles.loading}><Loading className={styles.svg} /></div>\r\n        }\r\n        if (list.length <= 0) {\r\n            return empty\r\n        }\r\n\r\n        return (\r\n            <AutoSizer>\r\n                {\r\n                    ({ width, height }) => (\r\n                        <VirtualList\r\n                            rowCount={isLoadMore ? list.length + 1 : list.length}\r\n                            rowHeight={28}\r\n                            rowRenderer={renderRow}\r\n                            height={height}\r\n                            width={width}\r\n                            onScroll={handleScroll}\r\n                        />\r\n                    )\r\n                }\r\n            </AutoSizer>\r\n        )\r\n    }\r\n    return (\r\n        <div className={classNames(styles.container,className)}>\r\n            {renderContent()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;\r\n","\nimport classNames from 'classnames';\nimport { useState } from 'react';\nimport styles from './index.less'\n// 样式display：inline-flex label 不需要forHtml 同一个样式 a.b \n\n\nconst Radio = (props: any) => {\n    const { selectedKey, onSelect,type, options } = props;\n    return (\n        <div className={classNames({\n            [styles.vertical]: type === 'vertical'\n        })}>\n            {\n                options.map((item:any) => {\n                    return (\n                        <label className={classNames(styles.container, {\n                            [styles.active]: item.key === selectedKey,\n                            [styles.disable]: item.disabled\n                        })\n                        }\n                        key={item.key}\n                        >\n                            <input\n                                className={styles.inputRadio}\n                                type=\"radio\"\n                                disabled={item.disabled}\n                                defaultChecked={item.key === selectedKey}\n                                onClick={() => {\n                                    if(item.key !== selectedKey) {\n                                        onSelect(item.key)\n                                    }\n                                }} />\n                            <span className={styles.circle}></span>\n                            <span>{item.content}</span>\n                        </label>\n                    );\n                })\n            }\n        </div>\n    )\n}\n\nexport default Radio;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"index_container_d4d33\",\"inputRadio\":\"index_inputRadio_ca956\",\"circle\":\"index_circle_d78f6\",\"active\":\"index_active_78b71\",\"disable\":\"index_disable_2a83e\",\"vertical\":\"index_vertical_95447\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandIcon\":\"index_expandIcon_372d6\",\"row\":\"index_row_7a1af\",\"rotate\":\"index_rotate_77060\",\"checkbox\":\"index_checkbox_81577\",\"placeholder\":\"index_placeholder_1dbae\",\"iconContainer\":\"index_iconContainer_e55e7\",\"listContainer\":\"index_listContainer_417ec\",\"loading\":\"index_loading_efcf4\"};"],"sourceRoot":""}