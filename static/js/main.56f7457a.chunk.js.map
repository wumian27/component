{"version":3,"sources":["views/Main/menu.js","views/Index/index.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["ButtonView","lazy","SideMenuView","TabMenuView","StepView","RadioView","CheckBoxView","TableView","Popover","DatePicker","SwitchView","InputView","CalenderView","CursorInputView","SelectView","name","key","sub","component","routers","menu","reduce","result","cur","concat","Main","props","location","useLocation","ref","useRef","pathname","useEffect","current","scrollTop","className","map","item","to","path","render","fallback","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56f7457a.chunk.js","sourcesContent":["import {lazy} from 'react'\n\nconst ButtonView = lazy(() => import('../ButtonView/index.tsx'))\nconst TextView = lazy(()=>import('../TextView'));\nconst ColorView = lazy(()=>import('../ColorView'))\nconst FlexBoxView = lazy(() => import('../FlexBoxView'));\nconst SideMenuView = lazy(()=>import('../SideMenuView'));\nconst TabMenuView= lazy(()=>import('../TabMenuView'));\nconst StepView = lazy(()=> import('../StepView'));\nconst RadioView  = lazy(()=> import('../RadioView'));\nconst CheckBoxView = lazy(()=> import('../CheckBoxView'));\nconst TableView = lazy(()=> import('../TableView'));\nconst Popover = lazy(() => import('../PopoverView'));\nconst DatePicker = lazy(()=> import('../DatePickView'));\nconst SwitchView = lazy(() => import('../SwitchView'));\nconst InputView = lazy(() => import('../InputView'));\nconst CalenderView = lazy(() => import('../CalendarView'))\nconst CursorInputView = lazy(() => import('../CursorInputView'))\nconst SelectView = lazy(() => import('../SelectView'))\nconst TreeView = lazy(() => import('../TreeView'));\nconst TreeSelectView = lazy(() => import('../TreeSelectView'))\n\nexport  default [\n    {\n        name: '核心组件',\n        key: 'core',\n        sub: [\n            {\n                name: '日历',\n                key:'calender',\n                component: CalenderView\n            },\n            {\n                name: '时间选择器',\n                key:'time',\n                component: DatePicker\n            },\n            {\n                name: '树结构',\n                key: 'tree',\n                component: TreeView\n                \n            },\n            {\n                name: '树选择器',\n                key: 'treeSelect',\n                component: TreeSelectView\n            },\n            \n            {\n                name: '选择器',\n                key: 'selector',\n                component: SelectView\n            },\n            {\n                name: '鼠标控制的输入框',\n                key:'cursorInput',\n                component: CursorInputView\n            },\n             {\n                name: '列表',\n                key: 'table',\n                component: TableView\n            },\n        ]\n    },\n    // {\n    //     name:'设计',\n    //     key: 'design',\n    //     sub: [\n    //         {\n    //             name:'文字',\n    //             key:'text',\n    //             component: TextView,\n    //         },\n    //         {\n    //             name: '颜色',\n    //             key: 'color',\n    //             component: ColorView,\n    //         },\n    //     ]\n    // },\n    {\n        name: '基础组建',\n        key: 'common',\n        sub: [\n            // {\n            //     name:'弹性布局',\n            //     key: 'flex',\n            //     component: FlexBoxView\n            // },\n            {\n                name:'按钮',\n                key: 'button',\n                component: ButtonView\n            },\n            {\n                name: '侧边栏',\n                key: 'navigation',\n                component: SideMenuView,\n            },\n            {\n                name: '标签菜单',\n                key: 'tagmeme',\n                component: TabMenuView,\n            },\n            {\n                name: '进度条',\n                key: 'step',\n                component: StepView,\n            },\n            {\n                name: '单选框',\n                key: 'radio',\n                component: RadioView\n            },\n            {\n                name: '多选按钮',\n                key: 'check',\n                component: CheckBoxView\n            },\n            {\n                name: '气泡卡片',\n                key:'popover',\n                component: Popover\n            },\n            \n            {\n                name: '开关',\n                key:'switch',\n                component: SwitchView\n            },\n            {\n                name: '输入框',\n                key:'input',\n                component: InputView\n            },\n        ]\n    },\n\n    // {\n    //     name:'导航',\n    //     key: 'nav',\n    //     sub: [\n    //         {\n    //             name: '侧边栏',\n    //             key: 'navigation',\n    //             component: SideMenuView,\n    //         },\n    //         {\n    //             name: '标签菜单',\n    //             key: 'tagmeme',\n    //             component: TabMenuView,\n    //         },\n    //         {\n    //             name: '进度条',\n    //             key: 'step',\n    //             component: StepView,\n    //         }\n    //     ]\n    // },\n\n    // {\n    //     name:'录入',\n    //     key: 'record',\n    //     sub: [\n    //         {\n    //             name: '单选框',\n    //             key: 'radio',\n    //             component: RadioView\n    //         },\n    //         {\n    //             name: '多选按钮',\n    //             key: 'check',\n    //             component: CheckBoxView\n    //         },\n           \n    //         {\n    //             name: '气泡卡片',\n    //             key:'popover',\n    //             component: Popover\n    //         },\n            \n    //         {\n    //             name: '开关',\n    //             key:'switch',\n    //             component: SwitchView\n    //         },\n    //         {\n    //             name: '输入框',\n    //             key:'input',\n    //             component: InputView\n    //         },\n            \n\n            \n    //     ]\n    // }\n   \n]","import { lazy, Suspense, useEffect, useRef, useState } from 'react';\nimport './index.css'\n\nimport { Link, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport menu from 'views/Main/menu';\n\nconst routers: any = menu.reduce((result, cur: any) => {\n    if (cur.sub) return result.concat(cur.sub)\n}, []) || [];\n\n\nconst Main = (props: any) => {\n   \n    const location = useLocation();\n    const ref = useRef() as any;\n    const { pathname } = location;\n\n\n\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.scrollTop = 0;\n        }\n    }, [pathname])\n    return (\n        <div className=\"main-container\">\n            {/* <div className=\"menu\">侧边栏侧边栏啦啦啦除了宝贝</div> */}\n            <div className=\"menu\">\n                {\n                    menu.map((item) => (\n                        <div key={item.key} className=\"item-container\">\n                            <div className=\"menu-header\">{item.name}</div>\n                            {\n                                item.sub.map((sub) => (\n                                    <Link\n                                        key={sub.key}\n                                        to={`/${sub.key}`}\n                                        className={pathname === `/${sub.key}` ? \"sub-item sub-active\" : 'sub-item'}\n                                        // onClick={() => {\n                                        //     // history.push(`/${sub.key}`)\n                                        // }}\n                                    >{sub.name}</Link>\n                                ))\n                            }\n                        </div>\n                    ))\n                }\n            </div>\n\n            <div className=\"content\" ref={ref}>\n                <div className=\"content-width\">\n                    <Switch>\n                        {\n                            routers.map((item: any) => (\n                                <Route\n                                    key={item.key}\n                                    path={`/${item.key}`}\n                                    render={() => (\n                                        <Suspense fallback=\"fallback\">\n                                            <item.component />\n                                        </Suspense>\n                                    )}\n                                />\n                            ))\n                        }\n                        \n                        <Redirect path=\"/\" to=\"/calender\"></Redirect>\n                    </Switch>\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Main;","\nimport './App.css';\n\nimport Main from './views/Main'\nimport { Router } from 'react-router';\nimport hsitory from 'utlis/hsitory';\nimport { HashRouter } from 'react-router-dom';\nimport Index from './views/Index'\nfunction App() {\n  \n  return (\n    <HashRouter>\n          {/* <Table columns={columns} data={[{'my': 'my', you: 'you', you1: '666'}]} /> */}\n          {/* <Main /> */}\n          <Index />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}