{"version":3,"sources":["../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"names":["_typeof","obj","Symbol","iterator","module","exports","__esModule","constructor","prototype","_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","arrayLikeToArray","Array","isArray","iter","from","TypeError","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_i","_s","_e","_arr","_n","_d","call","next","done","push","value","err","instance","Constructor","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","assertThisInitialized","self","ReferenceError","_getPrototypeOf","getPrototypeOf","subClass","superClass","create","_extends","assign","arguments","hasOwnProperty","apply","this","componentWillMount","state","getDerivedStateFromProps","undefined","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","toVal","mix","k","y","str","tmp","x","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","allInitialized","every","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","defaultCellRangeRenderer","cellCache","cellRenderer","columnSizeAndPositionManager","columnStartIndex","columnStopIndex","deferredMeasurementCache","horizontalOffsetAdjustment","isScrolling","isScrollingOptOut","parent","rowSizeAndPositionManager","rowStartIndex","rowStopIndex","styleCache","verticalOffsetAdjustment","visibleColumnIndices","visibleRowIndices","renderedCells","areOffsetsAdjusted","canCacheStyle","rowIndex","rowDatum","columnIndex","columnDatum","isVisible","style","has","height","left","position","top","width","cellRendererParams","renderedCell","win","document","createElement","scrollbarSize","recalc","canUseDOM","scrollDiv","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","_assertThisInitialized","_disablePointerEventsTimeoutId","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","_renderedColumnStartIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","_renderedRowStartIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","_ref$rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRangeRenderer","overscanColumnCount","overscanIndicesGetter","overscanRowCount","getOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","hasFixedWidth","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","offsetHeight","_window","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","nonce","parentNode","ownerDocument","defaultView","HTMLElement","_detectElementResize","createDetectElementResize","addResizeListener","_onResize","removeResizeListener","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","element","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","splice","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","get","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","minWidth","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","addEventListener","unregisterScrollListener","removeEventListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","hostWindow","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollListener","e","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","__animationListener__","detachEvent","len","arr2","minLen","test"],"mappings":"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","file":"static/js/1.2a079438.chunk.js","sourcesContent":["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;"],"sourceRoot":""}