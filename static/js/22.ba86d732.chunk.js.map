{"version":3,"sources":["component/TreeSelect/index.less","webpack:///./src/views/TreeSelectView/TreeSelectBaseView/index.less?1f5f","component/TreeSelect/index.tsx","views/TreeSelectView/TreeSelectBaseView/index.tsx","views/TreeSelectView/index.tsx","webpack:///./src/views/TreeSelectView/TreeSelectBaseView/index.tsx?235f","views/TreeSelectView/TreeSelectBaseView/index.less","component/Popover/index.tsx","component/Popover/util.ts","component/Popover/index.less","component/Icon/ClearIcon.tsx","component/Icon/Fold.tsx","component/Icon/Start.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","component/Icon/Left.tsx","component/Tree/index.tsx","component/CursorInput/index.tsx","component/CursorInput/index.less","component/Tree/index.less"],"names":["module","exports","getValue","node","ids","res","cb","task","length","item","pop","array","concat","traveData","n","includes","id","push","key","content","TreeSelect","props","value","data","nodeProps","renderNode","onCheck","useState","visible","setVisible","Popover","className","styles","container","Tree","isMulti","type","treeContainer","map","sub","placeholder","trigged","isArrow","onVisibleChange","overlayClass","cursorInput","onClick","CursorInput","selectedOptions","setSelectedOptions","placeHolder","clearIcon","noShow","ClearIcon","undefined","TreeSelectBaseView","checkedItems","setCheckedItems","children","isChecked","some","i","icon","Fold","folder","star","TreeSelectView","Text","level","style","margin","Demo","title","demo","codes","name","code","PropsTable","desc","list","default","defValue","join","show","setShow","triggedRef","useRef","contentRef","contentStye","setContentStyle","triangleStyle","setTriangleStyle","useEffect","current","scrollTop","document","body","documentElement","resContentCss","left","width","top","height","console","log","calculateContentPosition","getBoundingClientRect","resTriangleCss","triangle","Math","sqrt","transform","calculateTrianglePosition","handle","e","target","contains","addEventListener","removeEventListener","renderCss","useMemo","createPortal","CSSTransition","in","timeout","classNames","unmountOnExit","onEnter","el","onExit","popoverContainer","ref","popoverContent","arrow","display","onMouseOver","onMouseLeave","viewBox","d","Star","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Left","travel","child","next","travelParent","parent","getParentSelect","fn","getLeafSelect","canExpand","onLoad","lastRootNodeRef","setList","rootNode","createNode","nodeData","lastNode","isDisabled","isLoaded","isExpand","isIndeterminate","loading","cNode","lastCNode","checkedChildCount","thisNode","lastCurrent","root","createList","result","List","render","index","toggleExpand","stopPropagation","toggleCheck","checked","checkedNode","allParent","handleCheck","row","paddingLeft","iconContainer","Loading","expandIcon","rotate","checkbox","CheckBox","options","listContainer","KeyBoardCode","str","forEach","onKeyDown","DELETE","currentTarget","start","selectionStart","currentIndex","lastIndex","deleIndex","filter","setTimeout","setSelectionRange","LEFT","RIGHT","toIndex","reduce","re","cur","nextOption","where","blur","focus","preventDefault","input","onChange"],"mappings":"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","file":"static/js/22.ba86d732.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"index_row_58126\",\"active\":\"index_active_a50f8\",\"inputContainer\":\"index_inputContainer_89f19\",\"input\":\"index_input_8974c\",\"cursorInput\":\"index_cursorInput_6a24a\",\"clearIcon\":\"index_clearIcon_26a9c\",\"noShow\":\"index_noShow_bf72d\",\"overlayClass\":\"index_overlayClass_8eab1\",\"treeContainer\":\"index_treeContainer_40223\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"index_star_df2dd\"};","\n\nimport styles from './index.less'\nimport CursorInput from 'component/CursorInput';\nimport ClearIcon from 'component/Icon/ClearIcon';\nimport Popover from 'component/Popover'\nimport { useState } from 'react'\nimport Tree from 'component/Tree';\n\n\nconst traveData = (node: any, cb: any) => {\n    if (node) {\n        let task = [...node];\n        while (task.length) {\n            const item = task.pop();\n            if (item) {\n                cb(item);\n                if (item.array && item.array.length) {\n                    task = task.concat([...item.array]);\n                }\n            }\n        }\n\n    }\n\n}\n\nconst getValue = (node: any, ids: any) => {\n    let res = [] as any;\n    traveData(node, (n: { id: string; }) => {\n        if (ids.includes(n.id)) {\n            res.push({ key: n.id, content: n.id },)\n        }\n    })\n\n    return res\n}\n\nconst TreeSelect = (props: any) => {\n    const {\n        value = [],\n        data = [], nodeProps = () => { },\n        renderNode,\n        onCheck,\n    } = props;\n    const [visible, setVisible] = useState(false);\n    const handleVisible = () => {\n        setVisible(true)\n    }\n\n    const handleCheck = (item: any) => {\n        const ids = item.map((sub: any) => sub.id)\n        onCheck(ids)\n    }\n    const handleDeleInput = (item: any) => {\n        const ids = item.map((sub: any) => sub.key);\n        onCheck(ids)\n\n    }\n    return (\n        <Popover\n            content={<div className={styles.container}>\n                <Tree\n                    renderNode={renderNode}\n                    nodeProps={nodeProps}\n                    data={data}\n                    isMulti={true}\n                    type='parent'\n                    className={styles.treeContainer}\n                    onCheck={handleCheck}\n                ></Tree>\n            </div>}\n            placeholder=\"BL\"\n            visible={visible}\n            trigged=\"popover\"\n            isArrow={false}\n            onVisibleChange={() => { setVisible(false) }}\n            overlayClass={styles.overlayClass}\n        >\n            <div className={styles.cursorInput} onClick={handleVisible}>\n                <CursorInput\n                    selectedOptions={getValue(data, value)}\n                    setSelectedOptions={handleDeleInput}\n                    placeHolder=\"请点击选择\"\n                ></CursorInput>\n                {\n                    <span className={!value.length ? styles.noShow : styles.clearIcon} onClick={() => onCheck([])}>\n                        <ClearIcon />\n                    </span>\n                }\n\n            </div>\n        </Popover>\n\n    )\n}\n\nexport default TreeSelect","import Fold from \"component/Icon/Fold\";\nimport Star from \"component/Icon/Start\";\nimport TreeSelect from \"component/TreeSelect\";\nimport { useState } from \"react\";\nimport styles from './index.less'\nconst data = [\n    {\n        id: '1-0',\n        array: [\n            {\n                id: '1-0-1',\n                array: [\n                    {\n                        id: '1-0-1-1',\n                        array: undefined,\n                    },\n                ],\n            },\n            {\n                id: '1-0-2',\n                array: undefined,\n            },\n            {\n                id: '1-0-3',\n                array: undefined,\n            },\n        ],\n\n    },\n\n    {\n        id: '1-1',\n        array: [\n            {\n                id: '1-1-1',\n                array: [\n                    {\n                        id: '1-1-1-1',\n                        array: undefined,\n                    },\n                ],\n            },\n            {\n                id: '1-1-2',\n                array: undefined,\n            },\n            {\n                id: '1-1-3',\n                array: undefined,\n            },\n        ],\n\n    },\n\n    {\n        id: '1-2',\n        array: [\n            {\n                id: '1-2-1',\n                array: [\n                    {\n                        id: '1-2-1-1',\n                        array: undefined,\n                    },\n                ],\n            },\n            {\n                id: '1-2-2',\n                array: undefined,\n            },\n            {\n                id: '1-2-3',\n                array: undefined,\n            },\n        ],\n\n    },\n];\nconst TreeSelectBaseView = () => {\n    const [checkedItems, setCheckedItems] = useState([]);\n    const nodeProps = ((item: any) => ({\n        key: item.id,\n        children: item.array,\n        isChecked: checkedItems.some((i: any) => i === item.id),\n    }));\n\n    const renderNode = (item: { value: { id: boolean; array: any; }; }) => ({\n        content: <span className={styles.content}>{item.value.id}</span>,\n        icon: item.value.array ? <Fold className={styles.folder} /> : <Star className={styles.star} />,\n    })\n    return (\n        <div>\n            <TreeSelect\n                data={data}\n                nodeProps={nodeProps}\n                renderNode={renderNode}\n                onCheck={setCheckedItems}\n                value={checkedItems}\n             />\n        </div>\n    )\n}\n\nexport default TreeSelectBaseView;","/* eslint-disable import/no-webpack-loader-syntax */\nimport styles from './index.less'\nimport Text from 'component/Text';\nimport TreeSelectBaseView from './TreeSelectBaseView';\nimport TreeSelectBaseViewTsx from '!!raw-loader!./TreeSelectBaseView/index.tsx';\nimport TreeSelectBaseViewLess from '!!raw-loader!./TreeSelectBaseView/index.less';\nimport Demo from 'component/Demo';\nimport PropsTable from 'component/PropsTable';\n\nconst TreeSelectView = () => {\n\n    return (\n        <div>\n            <Text level='h1'>树选择器</Text>\n            <Text style={{ margin: '20px 0' }}>下拉选择器，弹出一个树选择组件给用户操作</Text>\n            <section>\n                <Demo \n                title=\"树选择器\"\n                demo={<TreeSelectBaseView />}\n                codes={\n                    [\n                        {\n                            name: 'index.tsx',\n                            type: 'tsx',\n                            code: TreeSelectBaseViewTsx,\n                        },\n                        {\n                            name: 'index.tsx',\n                            type: 'tsx',\n                            code: TreeSelectBaseViewLess,\n                        }\n                    ]\n                }\n                ></Demo>\n            </section>\n            <section>\n            <PropsTable\n            title=\"TreeSelect\"\n            desc=\"树形选择\"\n            list={[\n                {\n                    name: 'value',\n                    desc:'传入选中的id',\n                    type: '[]',\n                    default: '-'\n                },\n                {\n                    name: 'data',\n                    desc: '必选，数据源，以下属性的泛型T为此数据源项类型',\n                    type: 'T[]',\n                    defValue: '-',\n                },\n                {\n                    name: 'nodeProps',\n                    desc: '必选，提供节点辅助数据,,注意保持引用，以免性能问题',\n                    type: ['(node:T)=>({',\n                        '//节点key用于唯一指定',\n                        'key:string, ',\n                        '//节点的子节点,空数组指此节点有子节点，',\n                        '//undefined 指此节点是叶子节点',\n                        'children?:T[] ,',\n                        '//此节点是否禁用选中，多选模式下使用',\n                        'isDisabled?:boolean, ',\n                        '//此节点的子节点是否已加载完成，',\n                        '//配合异步加载功能使用',\n                        'isLoaded?:boolean,',\n                        '//此节点是否被选中',\n                        'isChecked?:boolean,})',\n                    ].join('\\n'),\n                    defValue: '-',\n                },\n                {\n                    name: 'renderNode',\n                    desc: '必选，自定义渲染节点',\n                    type: ['(node:T)=>({',\n                        '//节点图标',\n                        'icon?:ReactElement',\n                        '//节点内容',\n                        'content:ReactElement,})'].join('\\n'),\n                    defValue: '-',\n                },\n                {\n                    name: 'type',\n                    desc: '可选，节点选择模式，多选功能下可用，parent：选择节点会向上折叠上报，leaf：只选中子节点',\n                    type: [ 'parent', 'leaf'],\n                    defValue: 'leaf',\n                },\n                \n                \n                {\n                    name: 'onCheck',\n                    desc: '可选，选中的回调',\n                    type: '(node:T[])=>void',\n                    defValue: 'undefined',\n                },\n                // {\n                //     name: 'onLoad',\n                //     desc: '可选，加载节点数据回调，设置后点击展开时会回调获取数据，与nodeProps中isLoaded，children搭配使用',\n                //     type: '(node:T)=>void',\n                //     defValue: 'undefined',\n                // },\n                \n                {\n                    name: 'isMulti',\n                    desc: '可选，是否多选',\n                    type: 'boolean',\n                    defValue: 'true',\n                },\n                // {\n                //     name: 'loading',\n                //     desc: '可选，是否展示全数据加载loading',\n                //     type: 'boolean',\n                //     defValue: 'false',\n                // }, \n                {\n                    name: 'className',\n                    desc: '可选，Tree的样式，需要通过样式设置Tree大小（flex或width）',\n                    type: 'string',\n                    defValue: 'undefined',\n                },\n\n            ]}\n        />\n            </section>\n        </div>\n    )\n}\n\nexport default TreeSelectView;","export default \"import Fold from \\\"component/Icon/Fold\\\";\\nimport Star from \\\"component/Icon/Start\\\";\\nimport TreeSelect from \\\"component/TreeSelect\\\";\\nimport { useState } from \\\"react\\\";\\nimport styles from './index.less'\\nconst data = [\\n    {\\n        id: '1-0',\\n        array: [\\n            {\\n                id: '1-0-1',\\n                array: [\\n                    {\\n                        id: '1-0-1-1',\\n                        array: undefined,\\n                    },\\n                ],\\n            },\\n            {\\n                id: '1-0-2',\\n                array: undefined,\\n            },\\n            {\\n                id: '1-0-3',\\n                array: undefined,\\n            },\\n        ],\\n\\n    },\\n\\n    {\\n        id: '1-1',\\n        array: [\\n            {\\n                id: '1-1-1',\\n                array: [\\n                    {\\n                        id: '1-1-1-1',\\n                        array: undefined,\\n                    },\\n                ],\\n            },\\n            {\\n                id: '1-1-2',\\n                array: undefined,\\n            },\\n            {\\n                id: '1-1-3',\\n                array: undefined,\\n            },\\n        ],\\n\\n    },\\n\\n    {\\n        id: '1-2',\\n        array: [\\n            {\\n                id: '1-2-1',\\n                array: [\\n                    {\\n                        id: '1-2-1-1',\\n                        array: undefined,\\n                    },\\n                ],\\n            },\\n            {\\n                id: '1-2-2',\\n                array: undefined,\\n            },\\n            {\\n                id: '1-2-3',\\n                array: undefined,\\n            },\\n        ],\\n\\n    },\\n];\\nconst TreeSelectBaseView = () => {\\n    const [checkedItems, setCheckedItems] = useState([]);\\n    const nodeProps = ((item: any) => ({\\n        key: item.id,\\n        children: item.array,\\n        isChecked: checkedItems.some((i: any) => i === item.id),\\n    }));\\n\\n    const renderNode = (item: { value: { id: boolean; array: any; }; }) => ({\\n        content: <span className={styles.content}>{item.value.id}</span>,\\n        icon: item.value.array ? <Fold className={styles.folder} /> : <Star className={styles.star} />,\\n    })\\n    return (\\n        <div>\\n            <TreeSelect\\n                data={data}\\n                nodeProps={nodeProps}\\n                renderNode={renderNode}\\n                onCheck={setCheckedItems}\\n                value={checkedItems}\\n             />\\n        </div>\\n    )\\n}\\n\\nexport default TreeSelectBaseView;\";","export default \".star {\\n    fill: #fa6300;\\n    height: 14px;\\n    width: 14px;\\n    margin-right: 4px;\\n}\";","import classNames from 'classnames';\r\nimport { useMemo, useState, useRef, useEffect } from 'react'\r\nimport { createPortal } from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group'\r\n// import { useRef } from 'react-virtualized/node_modules/@types/react';\r\nimport styles from './index.less'\r\nimport { calculateContentPosition, calculateTrianglePosition } from './util';\r\ninterface Props {\r\n    content: string | JSX.Element;\r\n    placeholder: 'TOP' | 'TR' | 'TL' | 'BOTTOM' | 'BL' | 'BR' | 'LT' | 'L' | 'LB' | 'R' | 'RT' | 'RB';\r\n    trigged?: string;\r\n    children: JSX.Element;\r\n    visible?: boolean;\r\n    onVisibleChange?: ()=>void;\r\n    isArrow?: boolean;\r\n    overlayClass?: string;\r\n}\r\nconst Popover = (props: Props) => {\r\n\r\n    const { \r\n        children, content, placeholder, trigged = \"hover\", \r\n        visible, onVisibleChange,\r\n        isArrow=true,\r\n        overlayClass,\r\n    } = props;\r\n    const [show, setShow] = useState(false);\r\n    const triggedRef = useRef(null) as any;\r\n    const contentRef = useRef(null) as any;\r\n    const [contentStye, setContentStyle] = useState() as any;\r\n    const [triangleStyle, setTriangleStyle] = useState() as any;\r\n    // console.log(show);\r\n\r\n    useEffect(() => {\r\n        if (visible !== undefined) {\r\n            setShow(visible)\r\n        } \r\n    }, [visible])\r\n    // 计算弹窗的位置\r\n    useEffect(() => {\r\n        // effect   \r\n        if (triggedRef.current && contentRef.current && show) {\r\n            // 获取滚动距离\r\n            const scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\r\n            // 计算内容区域的位置\r\n            const resContentCss = calculateContentPosition(\r\n                placeholder,\r\n                contentRef.current.getBoundingClientRect(),\r\n                triggedRef.current.getBoundingClientRect(),\r\n                scrollTop,\r\n                isArrow,\r\n            )\r\n            setContentStyle(resContentCss);\r\n            // 计算三角形的位置\r\n            const resTriangleCss = calculateTrianglePosition(\r\n                placeholder,\r\n                triggedRef.current.getBoundingClientRect(),\r\n                scrollTop,\r\n            )\r\n            setTriangleStyle(resTriangleCss)\r\n        }\r\n        return () => {\r\n            // cleanup\r\n        }\r\n    }, [triggedRef, contentRef, show])\r\n\r\n    // 打击其他元素关闭\r\n    useEffect(() => {\r\n        const handle = (e: any) => {\r\n            // contentRef.current.     \r\n            console.log(triggedRef.current);\r\n            console.log(e.target);\r\n            \r\n                   \r\n            if (contentRef.current && triggedRef.current) {\r\n                if (\r\n                    e.target == triggedRef.current ||\r\n                    e.target == contentRef.current ||\r\n                    contentRef.current.contains(e.target) ||\r\n                    triggedRef.current.contains(e.target)\r\n                ) {\r\n                    // setShow(false)\r\n                    console.log('0iiii');\r\n                    \r\n                } else {\r\n                    setShow(false);\r\n                    if(onVisibleChange) {\r\n                        onVisibleChange();\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        document.body.addEventListener('click', handle)\r\n\r\n        return () => {\r\n            document.body.removeEventListener('click', handle)\r\n        }\r\n    }, [show])\r\n\r\n    const handleClick = () => {\r\n        if (trigged === 'click') {\r\n            setShow(!show)\r\n        }\r\n    }\r\n    const handleOver = () => {\r\n        if (trigged === 'hover') {\r\n            setShow(true)\r\n        }\r\n    }\r\n\r\n    const handleLeave = () => {\r\n        if (trigged === 'hover') {\r\n            setShow(false)\r\n        }\r\n    }\r\n\r\n    const renderCss = useMemo(() => {\r\n\r\n        return createPortal(<CSSTransition\r\n            in={show}\r\n            timeout={200}\r\n            classNames=\"fade\"\r\n            unmountOnExit\r\n            onEnter={(el: any) => {\r\n                // console.log(el); \r\n            }}\r\n            onExit={(el) => {\r\n                // console.log(el);\r\n            }}\r\n        // appear\r\n\r\n        >\r\n            <div>\r\n                <div className={classNames( overlayClass,styles.popoverContainer)} style={contentStye} ref={contentRef}>\r\n                    <div className={styles.popoverContent} >\r\n                        {content}\r\n                    </div>\r\n\r\n                </div>\r\n                {\r\n                    isArrow ? <div className={styles.arrow} style={triangleStyle}></div>: null\r\n                }\r\n                \r\n            </div>\r\n\r\n        </CSSTransition>, document.body)\r\n    }, [contentStye, show, triangleStyle, content])\r\n\r\n    return <>\r\n        <span\r\n            style={{ display: 'inline-block' }}\r\n            onClick={handleClick}\r\n            onMouseOver={handleOver}\r\n            onMouseLeave={handleLeave}\r\n            ref={triggedRef}\r\n        >{children}</span>\r\n        {renderCss}\r\n\r\n\r\n    </>\r\n}\r\n\r\nexport default Popover;\r\n","\r\n\r\nexport const calculateContentPosition = (\r\n    type: string,\r\n    content: any,\r\n    trigged: any,\r\n    scrollTop: number,\r\n    isArrow: boolean,\r\n) => {\r\n    // console.log(trigged.height, scrollTop);\r\n    // console.log(content.height, trigged.top + scrollTop);\r\n\r\n    switch (type) {\r\n        case 'TOP':\r\n            const left = trigged.left - content.width / 2 + trigged.width / 2\r\n            const top = trigged.top - content.height - (isArrow ? 10 : 0)\r\n            return {\r\n                top: top < 0 ? 68 : top,\r\n                left: left < 0 ? 0 : left\r\n            }\r\n        case 'TR': {\r\n            const top = trigged.top - content.height - 10\r\n            const left = trigged.left + (trigged.width - content.width);\r\n\r\n            return {\r\n                top,\r\n                left,\r\n            }\r\n        }\r\n\r\n        case 'TL': {\r\n            const top = trigged.top - content.height - 10\r\n            const left = trigged.left\r\n\r\n            return {\r\n                top,\r\n                left,\r\n            }\r\n\r\n        }\r\n        case 'BOTTOM': {\r\n            const left = trigged.left - content.width / 2 + trigged.width / 2;\r\n            const top = trigged.top + trigged.height + (isArrow ? 10 : 2);\r\n            return {\r\n                top,\r\n                left,\r\n            }\r\n        }\r\n\r\n        case 'BL': {\r\n            const top = trigged.top + trigged.height + (isArrow ? 10 : 2);\r\n            const left = trigged.left;\r\n            return {\r\n                left,\r\n                top,\r\n            }\r\n        }\r\n\r\n        case 'BR': {\r\n            const top = trigged.top + trigged.height + 10;\r\n            const left = trigged.left + trigged.width - content.width;\r\n            return {\r\n                top,\r\n                left\r\n            }\r\n        }\r\n\r\n\r\n        case 'LT': {\r\n            const top = trigged.top - 4;\r\n            const left = trigged.left - content.width - 12;\r\n            return {\r\n                top,\r\n                left,\r\n            }\r\n        }\r\n\r\n        case 'L': {\r\n            const top = trigged.top + trigged.height / 2 - content.height / 2;\r\n            const left = trigged.left - 10 - content.width - 2;\r\n            return {\r\n                top,\r\n                left\r\n            }\r\n        }\r\n\r\n        case 'LB': {\r\n            const top = trigged.top + trigged.height - content.height + 4;\r\n            const left = trigged.left - 10 - content.width - 2;\r\n            return {\r\n                top,\r\n                left\r\n            }\r\n        }\r\n\r\n        case 'R': {\r\n            const top = trigged.top + trigged.height / 2 - content.height / 2;\r\n            const left = trigged.left + trigged.width + 10;\r\n            console.log(left,'rrr', trigged.left,);\r\n            \r\n            return {\r\n                top,\r\n                left,\r\n            }\r\n        }\r\n\r\n        case 'RT': {\r\n            const top = trigged.top - 4;\r\n            const left = trigged.left + trigged.width + 10;\r\n            return {\r\n                top,\r\n                left,\r\n            }\r\n        }\r\n\r\n        case 'RB': {\r\n            const top = trigged.top + trigged.height - content.height + 4;\r\n            const left = trigged.left + trigged.width + 10;\r\n            return {\r\n                top,\r\n                left,\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const calculateTrianglePosition = (\r\n    type: string,\r\n    trigged: any,\r\n    scrollTop: number\r\n) => {\r\n    let triangle = Math.sqrt(10 * 10 + 10 * 10);\r\n    switch (type) {\r\n        case 'TOP':\r\n            return {\r\n                top: trigged.top + scrollTop - triangle - 2 ,\r\n                left: trigged.left + trigged.width / 2 - triangle / 2 - 4,\r\n            }\r\n        case 'TR':\r\n            return {\r\n                top: trigged.top + scrollTop - triangle - 2 ,\r\n                left: trigged.left + trigged.width / 2 - triangle / 2 - 4,\r\n            }\r\n        case 'TL':\r\n            return {\r\n                top: trigged.top + scrollTop - triangle - 2 ,\r\n                left: trigged.left + trigged.width / 2 - triangle / 2 - 4,\r\n            }\r\n        case 'BOTTOM':\r\n            return {\r\n                left: trigged.left + trigged.width / 2 - triangle / 2,\r\n                top: trigged.top + trigged.height + triangle / 2 - 10 / 2 + 2 ,\r\n                transform: 'rotate(225deg)'\r\n            }\r\n\r\n        case 'BL':\r\n            return {\r\n                top: trigged.top + trigged.height + triangle / 2 - 10 / 2 + 2 ,\r\n                left: trigged.left + trigged.width / 2 - 2,\r\n                transform: 'rotate(225deg)'\r\n            }\r\n        case 'BR':\r\n            return {\r\n                top: trigged.top + trigged.height + triangle / 2 - 10 / 2 +2,\r\n                left: trigged.left + trigged.width / 2 - 2,\r\n                transform: 'rotate(225deg)'\r\n            }\r\n\r\n\r\n        case 'LT':\r\n            return {\r\n                left: trigged.left - triangle - 3,\r\n                top: trigged.top + trigged.height / 2 - triangle / 2,\r\n                transform: 'rotate(-45deg)'\r\n            }\r\n        case 'L': {\r\n            return {\r\n                left: trigged.left - triangle - 3,\r\n                top: trigged.top + trigged.height / 2 - triangle / 2,\r\n                transform: 'rotate(-45deg)'\r\n            }\r\n        }\r\n        case 'LB': {\r\n            return {\r\n                left: trigged.left - triangle - 3,\r\n                top: trigged.top + trigged.height / 2 - triangle / 2,\r\n                transform: 'rotate(-45deg)'\r\n            }\r\n        }\r\n\r\n        case 'R': {\r\n            return {\r\n                top: trigged.top + trigged.height / 2 - triangle / 2,\r\n                left: trigged.left + trigged.width + triangle / 2 - 10 / 2 + 3,\r\n                transform: 'rotate(135deg)'\r\n            }\r\n        }\r\n\r\n        case 'RT': {\r\n            return {\r\n                top: trigged.top + trigged.height / 2 - triangle / 2,\r\n                left: trigged.left + trigged.width + triangle / 2 - 10 / 2 + 3,\r\n                transform: 'rotate(135deg)'\r\n            }\r\n        }\r\n\r\n        case 'RB': {\r\n            return {\r\n                top: trigged.top + trigged.height / 2 - triangle / 2,\r\n                left: trigged.left + trigged.width + triangle / 2 - 10 / 2 + 3,\r\n                transform: 'rotate(135deg)'\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default {};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popoverContainer\":\"index_popoverContainer_8c3cb\",\"arrow\":\"index_arrow_7de7a\"};","\n\ninterface Props {\n    className?: string;\n}\n\n\nconst ClearIcon = (props:Props) => {\n    const { className } = props;\n    return (\n        <svg\n         id=\"icon-delete-filled-14\" \n         viewBox=\"0 0 1024 1024\" \n         width=\"16px\" height=\"16px\"\n         className={className}\n         >\n            <path d=\"M512 73.142857a438.857143 438.857143 0 1 1 0 877.714286A438.857143 438.857143 0 0 1 512 73.142857z m110.811429 283.721143L512 467.602286 401.188571 356.864l-44.324571 44.324571 110.738286 110.738286L356.937143 622.811429l44.324571 44.324571 110.738286-110.884571 110.884571 110.884571 44.324572-44.324571L556.324571 512l110.811429-110.738286-44.324571-44.324571z\">\n            </path>\n        </svg>\n    )\n}\n\nexport default ClearIcon;","interface Props {\n    className?: string;\n}\n\nconst Fold = (props: Props) => {\n\n    const { className } = props;\n\n    return (\n        <svg\n            id=\"icon-folder-filled-14\"\n            viewBox=\"0 0 1024 1024\" width=\"12px\" height=\"12px\"\n            className={className}>\n            <path d=\"M0 146.285714h486.4l107.52 166.546286H1024V950.857143H0z\"></path>\n        </svg>\n    )\n}\n\nexport default Fold;","\n\ninterface Props {\n    className?: string;\n}\n\nconst Star = (props: Props) => {\n    const { className } = props;\n    return (\n        <svg\n            id=\"icon-star\" viewBox=\"0 0 1024 1024\"\n            width=\"12px\"\n            height=\"12px\" className={className}>\n            <path d=\"M512 812.8c6.4 0 12.864 1.472 18.752 4.608l297.664 156.48-56.832-331.52a40.32 40.32 0 0 1 11.584-35.648L1024 371.968l-332.8-48.32a40.32 40.32 0 0 1-30.336-22.08L512 0 363.136 301.568a40.32 40.32 0 0 1-30.336 22.08L0 371.968 240.832 606.72a40.32 40.32 0 0 1 11.584 35.712l-56.832 331.456 297.664-156.48A40.32 40.32 0 0 1 512 812.736z\"></path>\n        </svg>\n    )\n}\n\nexport default Star;","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","interface Props {\n    className?: string;\n}\n\n\nconst Left = (props: Props) => {\n\n    const { className } = props;\n\n    return (\n        <svg\n            id=\"icon-right-arrow-filled-6\" viewBox=\"0 0 1024 1024\" width=\"12px\" height=\"12px\" className={className}>\n            <path d=\"M938.666667 512l-853.333334-512v1024z\">\n            </path>\n        </svg>\n    )\n}\n\nexport default Left;","import classNames from \"classnames\";\nimport CheckBox from \"component/CheckBox\";\nimport Fold from \"component/Icon/Fold\";\nimport Left from \"component/Icon/Left\";\nimport Star from \"component/Icon/Start\";\nimport List from \"component/List\";\nimport Loading from \"component/Loading\";\nimport { isArray } from \"lodash\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport styles from './index.less'\n\n\n\nconst travel = (node: any, cb: any) => {\n    cb(node);\n    if (node.child) {\n        travel(node.child, cb)\n    }\n\n    if (node.next) {\n        travel(node.next, cb)\n    }\n}\n\nconst travelParent = (node: { parent: any; }, cb: { (n: any): void; (arg0: any): void; }) => {\n    cb(node);\n    if (node.parent) {\n        travelParent(node.parent, cb)\n    }\n}\n\nconst getParentSelect = (node: any, fn: any) => {\n    if (node.isChecked) {\n        fn(node)\n        node.next && getParentSelect(node.next, fn)\n    } else {\n        node.child && getParentSelect(node.child, fn);\n        node.next && getParentSelect(node.next, fn)\n    }\n}\nconst getLeafSelect = (node: any, fn: any) => {\n    if (!node.canExpand && node.isChecked) {\n        fn(node);\n    }\n    node.child && getLeafSelect(node.child, fn);\n    node.next && getLeafSelect(node.next, fn)\n}\n\nconst Tree = (props: any) => {\n    const { \n        data, isMulti, type = 'leaf', \n        nodeProps, \n        renderNode, \n        onCheck,\n        onLoad,\n        className,\n    } = props;\n    const lastRootNodeRef = useRef();\n    const [list, setList] = useState([])\n    const rootNode = useMemo(() => {\n        if (data.length <= 0) {\n            return undefined;\n        }\n\n        const createNode = (\n            nodeData: any,\n            lastNode?: any,\n            parent?: any,\n            level = 0,\n        ) => {\n            const {\n                children, key, isChecked = false, isDisabled = false,\n                isLoaded = true,\n            } = nodeProps(nodeData) as any;\n\n            //加上🇺每个node 的状态 跟 parent\n            const node = {\n                value: nodeData,\n                key,\n                level,\n                isExpand: false,\n                canExpand: children !== undefined,\n                isLoaded, // 是否已经假装数据\n                isChecked,\n                isDisabled,\n                isIndeterminate: false,\n                loading: false,\n                parent, // 第一次递归是空，第二次就带上上次的节点\n            } as any;\n            // 因为每次 loading 都是false \n            // 不知道为什么 上次 什么逻辑  这里是为了记录 loading， 是否加载完成，未来就是true\n            if (lastNode && lastNode.key === node.key) {\n                node.isExpand = lastNode.isExpand;\n                if (node.isLoaded === false) {\n                    node.loading = lastNode.loading;\n                }\n            }\n\n            // 父级选中  子级选中  如果它的父级北选中 ，则当前孩子选中\n            if (parent && parent.isChecked) {\n                node.isChecked = true;\n            }\n            // 有孩子数据继续创建\n            if (isArray(children) && children.length > 0) {\n\n                let cNode: any;\n                let lastCNode = lastNode ? lastNode.child : undefined;\n                let checkedChildCount = 0; // 子孩子是否全部选中\n                for (let i = 0; i < children.length; i += 1) {\n\n                    // 递归创建子级\n                    const thisNode = createNode(children[i], lastCNode, node, level + 1);\n                    // 最后一个孩子\n\n                    // 第二次呢 回来的时候 cNode 已经被复制  回到第二个的时候 \n                    if (cNode === undefined) {\n                        cNode = thisNode;\n                        node.child = cNode;\n                    } else {\n                        cNode.next = thisNode;\n                        cNode = thisNode;\n                    }\n\n                    lastCNode = lastCNode ? lastCNode.next : undefined;\n                    // 如何当前元素是选中的\n                    if (cNode.isChecked) {\n                        node.isIndeterminate = true;\n                        checkedChildCount += 1;\n                    }\n                    // 向上的都 变\n                    if (node.isIndeterminate && node.parent) {\n                        travelParent(node.parent, (n: any) => {\n                            n.isIndeterminate = true;\n                        })\n                    }\n\n                    // 看子级是否选中\n                    if (checkedChildCount === children.length) {\n                        node.isChecked = true;\n                    } \n\n                    // 不能要\n                    // else {\n                    //     node.isChecked = false\n                    // }\n                }\n            }\n            return node;\n        }\n        let lastCurrent = lastRootNodeRef.current as any;\n\n        let root = createNode(data[0], lastCurrent);\n\n        let current = root;\n        for (let i = 1; i < data.length; i++) {\n            const item = data[i];\n            if (item) {\n                lastCurrent = lastCurrent ? lastCurrent.next : undefined;\n                current.next = createNode(item, lastCurrent)\n                current = current.next;\n            }\n        }\n        lastRootNodeRef.current = root;\n\n        return root;\n    }, [nodeProps])\n\n    const createList = () => {\n        if (rootNode) {\n            const result = [] as any;\n            travel(rootNode, (node: { parent: { isExpand: any; }; }) => {\n                if (!node.parent || (node.parent && node.parent.isExpand)) {\n                    result.push(node)\n                }\n            })\n            setList(result)\n        }\n    }\n\n    useEffect(() => {\n\n        createList()\n    }, [rootNode]);\n\n    const handleCheck = (checkedNode: any, checked: boolean) => {\n        checkedNode.isChecked = checked;\n        if (!isMulti && onCheck) {\n            onCheck([checkedNode.value])\n            return;\n        }\n        // checkedNode.isChecked = checked;\n        if (checkedNode.child) {\n            travel(checkedNode.child, (n: any) => {\n                n.isChecked = checked\n            })\n        }\n        if (checkedNode.parent && !checked) {\n            travelParent(checkedNode.parent, (n: any) => {\n                n.isChecked = false\n            })\n        }\n        // 为真的时候\n        if (checkedNode.parent && checked) {\n            travelParent(checkedNode.parent, (node: any) => {\n                let { child } = node as any;\n                let allParent = true;\n                while (child) {\n                    allParent = child.isChecked && allParent;\n                    if (!child.isChecked) break;\n                    child = child.next;\n                }\n                node.isChecked = allParent\n            })\n        }\n\n        // 选中的元素\n        const res = [] as any;\n        const root = rootNode;\n        if (type === 'leaf') {\n            getLeafSelect(root, (n: any) => {\n                res.push(n)\n            })\n        } else {\n            getParentSelect(root, (n: any) => {\n                res.push(n)\n            })\n        }\n        // console.log(res, 'res', type)\n        if (onCheck) { \n            onCheck([...res].map(item => item.value))\n        }\n\n        createList();\n    }\n\n    const renderItem = (index: number) => {\n\n        const item = list[index] as any;\n        const result = renderNode(item);\n        let icon;\n        if (item.child && result.icon) {\n            icon = (\n                <span className={styles.placeholder}>\n                    {result.icon}\n                </span>\n            );\n        } else if (item.child === undefined) {\n            icon = (\n                <span className={styles.placeholder}>\n                    {result.icon}\n                </span>\n            );\n        }\n        const toggleExpand = (e?: any) => {\n            // 是子节点 \n            if (item.canExpand === false || item.loading) {\n                return;\n            }\n            if (item.isExpand) {\n                item.isExpand = false;\n                if (item.child) {\n                    travel(item.child, (n: any) => {\n                        n.isExpand = false\n                    })\n                }\n            } else {\n                if (onLoad && item.isLoaded === false) { // 加载模式下时启动加载\n                    item.loading = true;\n                    onLoad(item.value);\n                }\n                item.isExpand = true;\n            }\n            if (e) {\n                e.stopPropagation();\n            }\n            createList();\n        }\n        const toggleCheck = (e: { stopPropagation: () => void; }) => {\n            const checked = !item.isChecked;\n            handleCheck(item, checked);\n            e.stopPropagation();\n            return\n        }\n        // if (isMulti) {\n        return (\n            <div\n                className={classNames(styles.row, {\n                    // [styles.active]: isActive\n                })}\n                onClick={(e) => {\n                    if (isMulti) {\n                        toggleExpand()\n                    } else {\n                        toggleCheck(e)\n                    }\n\n                }}\n                style={{ paddingLeft: item.level * 20 }}\n            >\n                {/* {\n                    item.canExpand ? <span\n                        className={styles.iconContainer}\n                        onClick={toggleExpand}\n                    >\n                        <Left className={classNames(styles.expandIcon, {\n                            [styles.rotate]: item.isExpand\n                        })} />\n                        <Fold className={styles.fold} />\n                    </span> : <Star className={styles.star} />\n                } */}\n                {\n                    item.canExpand ? <span\n                        className={styles.iconContainer}\n                        onClick={toggleExpand}\n                    >\n                        {\n                            item.loading ? <Loading className={styles.loading} /> : <Left className={classNames(styles.expandIcon, {\n                                [styles.rotate]: item.isExpand\n                            })} />\n                        }\n                       \n                    </span> : null\n                }\n                {\n                    icon\n                }\n                {result.content}\n                {/* <span> {item.value.id}</span> */}\n                {\n                    isMulti ? <span className={styles.checkbox}>\n                        <CheckBox\n                            options={undefined}\n                            checked={item.isChecked}\n                            // onChange={() => { }}\n                            // indeterminate={item.isIndeterminate}\n                            onClick={toggleCheck}\n                        />\n                    </span> : null\n                }\n\n            </div>\n        )\n\n    }\n    return (\n\n        <List list={list} render={renderItem} className={classNames(styles.listContainer, className) } />\n\n    )\n\n}\n\nexport default Tree;","\nimport { useMemo, useState } from \"react\";\nimport styles from './index.less'\n// 思路 传入一个数组，数组的内容的长度就是 光标的长度 通过光标的位置找到 要删除数组的index\n\n// 删除的时候， 组件更新，光标不在设置位置，需要\nenum KeyBoardCode {\n    DELETE = 'Backspace',\n    LEFT = 'ArrowLeft',\n    RIGHT = 'ArrowRight'\n}\n\nconst CursorInput = (props: any) => {\n\n    const {selectedOptions, setSelectedOptions, placeHolder=\"请选择\"} = props;\n\n    const getValue = useMemo(() => {\n        let str = '';\n        selectedOptions.forEach((item: { content: any; }) => {\n            str += `${item.content};`\n        })\n        return str;\n    }, [selectedOptions])\n\n\n    const handleKeyDown = (e: any) => {\n\n        if (e.key === KeyBoardCode.DELETE) {\n            const target = e.currentTarget as HTMLInputElement;\n            const start = target.selectionStart || 0;  // 光标开始的位置\n\n            let currentIndex = 0;\n            let lastIndex = 0;\n            let deleIndex = -1;\n            for (let i = 0; i < selectedOptions.length; i++) {\n                let index = selectedOptions[i].content.length + 1;\n                currentIndex += index;\n                if (start > lastIndex && start <= currentIndex) {\n                    deleIndex = i;\n                    break;\n                }\n                lastIndex += index;\n            }\n            if (deleIndex > -1) {\n                const filter = selectedOptions.filter((item: any, index: number) => deleIndex !== index);\n                setSelectedOptions(filter)\n                // 需要等渲染网 selectedOptions // 光标回到位置\n                setTimeout(() => {\n                    target.setSelectionRange(lastIndex, lastIndex)\n                }, 0)\n\n            }\n        }\n\n        if (e.key === KeyBoardCode.LEFT || e.key === KeyBoardCode.RIGHT) {\n            const target = e.currentTarget as HTMLInputElement;\n            const start = target.selectionStart || 0;\n            let currentIndex = 0;\n            let lastIndex = 0;\n            let toIndex = 0;\n\n            for (let i = 0; i < selectedOptions.length; i++) {\n                let index = selectedOptions[i].content.length + 1;\n                currentIndex += index;\n\n                // 光标在0的位置  光标要到尾部 left\n                if (start === 0 && e.key === KeyBoardCode.LEFT) {\n                    toIndex = selectedOptions.reduce((re: any, cur: { content: string | any[]; }) => re + cur.content.length + 1, 0);\n                    break;\n                }\n                // 0 right \n                if (start === 0 && e.key === KeyBoardCode.RIGHT) {\n                    toIndex = currentIndex;\n                    console.log(toIndex, 'ppp');\n\n                    break;\n                }\n                // 光标字在中间\n                if (start >= lastIndex && start < currentIndex) {\n                    if (e.key === KeyBoardCode.LEFT) {\n                        toIndex = lastIndex;\n                    } else {\n                        toIndex = currentIndex;\n                    }\n                    break;\n                }\n\n                //在；后面\n                if (start === currentIndex) {\n                    if (e.key === KeyBoardCode.LEFT) {\n                        toIndex = lastIndex;\n                    } else {\n                        const nextOption = selectedOptions[i + 1];\n                        if (nextOption) {\n                            toIndex = currentIndex + nextOption.content.length + 1;\n                        }\n                    }\n                    break;\n                }\n                lastIndex += index\n            }\n\n\n            const where = toIndex\n\n            target.setSelectionRange(where, where);\n            target.blur();\n            target.focus();\n\n\n        }\n        //  阻止默认事件 因为它都会进一位\n        e.preventDefault()\n    }\n    // console.log(selectedOptions);\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={getValue}\n                onKeyDown={handleKeyDown}\n                className={styles.input}\n                onChange={() =>{}}\n                placeholder={placeHolder}\n            />\n        </div>\n    )\n\n}\n\nexport default CursorInput;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"index_input_d216f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandIcon\":\"index_expandIcon_372d6\",\"row\":\"index_row_7a1af\",\"rotate\":\"index_rotate_77060\",\"checkbox\":\"index_checkbox_81577\",\"placeholder\":\"index_placeholder_1dbae\",\"iconContainer\":\"index_iconContainer_e55e7\",\"listContainer\":\"index_listContainer_417ec\",\"loading\":\"index_loading_efcf4\"};"],"sourceRoot":""}